import { RefObject, DependencyList } from 'react';
import { Viewport, Scroll, Dimensions, PriorityType, Rect } from './types';
interface ViewPortEffectOptions<T> extends FullOptions {
    recalculateLayoutBeforeUpdate?: (viewport: Viewport) => T;
}
interface FullOptions extends IOptions {
    disableScrollUpdates?: boolean;
    disableDimensionsUpdates?: boolean;
}
interface IOptions {
    [key: string]: unknown;
    deferUpdateUntilIdle?: boolean;
    priority?: PriorityType;
}
interface IEffectOptions<T> extends IOptions {
    recalculateLayoutBeforeUpdate?: (viewport: Viewport) => T;
}
export declare function useViewportEffect<T = unknown>(handleViewportChange: (viewport: Viewport, snapshot: T) => void, deps?: DependencyList): void;
export declare function useViewportEffect<T = unknown>(handleViewportChange: (viewport: Viewport, snapshot: T) => void, options?: ViewPortEffectOptions<T>, deps?: DependencyList): void;
export declare const useViewport: (options?: FullOptions) => Viewport;
export declare function useScrollEffect<T = unknown>(effect: (scroll: Scroll, snapshot: T) => void, deps?: DependencyList): void;
export declare function useScrollEffect<T = unknown>(effect: (scroll: Scroll, snapshot: T) => void, options: IEffectOptions<T>, deps?: DependencyList): void;
export declare const useScroll: (options?: IOptions) => Scroll;
export declare function useDimensionsEffect<T = unknown>(effect: (dimensions: Dimensions, snapshot: T) => void, deps?: DependencyList): void;
export declare function useDimensionsEffect<T = unknown>(effect: (dimensions: Dimensions, snapshot: T) => void, options: IEffectOptions<T>, deps?: DependencyList): void;
export declare const useDimensions: (options?: IOptions) => Dimensions;
export declare function useRectEffect(effect: (rect: Rect | null) => void, ref: RefObject<HTMLElement>, deps?: DependencyList): void;
export declare function useRectEffect(effect: (rect: Rect | null) => void, ref: RefObject<HTMLElement>, options: FullOptions, deps?: DependencyList): void;
export declare function useRect(ref: RefObject<HTMLElement>, deps?: DependencyList): Rect | null;
export declare function useRect(ref: RefObject<HTMLElement>, options: FullOptions, deps?: DependencyList): Rect | null;
export declare function useLayoutSnapshot<T = unknown>(recalculateLayoutBeforeUpdate: (viewport: Viewport) => T, deps?: DependencyList): null | T;
export declare function useLayoutSnapshot<T = unknown>(recalculateLayoutBeforeUpdate: (viewport: Viewport) => T, options?: FullOptions, deps?: DependencyList): null | T;
export {};
