{"version":3,"file":"index.js","sources":["../../src/Alert/Alert.tsx","../../src/Accordion/AccordionBody.tsx","../../src/Button/Button.tsx","../../src/Forward/Forward.tsx","../../node_modules/regenerator-runtime/runtime.js","../../src/Icon/assets/index.tsx","../../src/Icon/EmptyIcon.tsx","../../src/Icon/Icon.tsx","../../src/Collapse/Collapse.tsx","../../src/Header/HeaderContext.tsx","../../src/Header/HeaderBrand.tsx","../../src/Header/HeaderContent.tsx","../../src/Header/HeaderRightZone.tsx","../../src/Header/HeaderToggler.tsx","../../src/Input/InputContainer.tsx","../../src/Input/utils.tsx","../../src/utils.tsx","../../src/Input/Input.tsx","../../src/Input/TextArea.tsx","../../src/LinkList/LinkListItem.tsx","../../src/Nav/Nav.tsx","../../src/Modal/ModalHeader.tsx","../../src/Rating/Rating.tsx","../../src/PasswordInput/PasswordInput.tsx","../../src/FontLoader/FontLoader.tsx","../../src/Input/TimeInput.tsx","../../src/Select/shared.tsx","../../src/Select/Select.tsx","../../src/Stepper/StepperHeaderElement.tsx","../../src/Stepper/StepperContent.tsx","../../src/Notification/usePosition.tsx","../../src/Notification/NotificationContent.tsx","../../src/Notification/Notification.tsx","../../src/Notification/NotificationManager.tsx","../../src/Notification/core.tsx","../../src/Toolbar/Toolbar.tsx","../../src/Toolbar/ToolbarItem.tsx","../../src/Accordion/Accordion.tsx","../../src/Accordion/AccordionHeader.tsx","../../src/Avatar/AvatarContainer.tsx","../../src/Avatar/AvatarExtraText.tsx","../../src/Avatar/AvatarGroupContainer.tsx","../../src/Avatar/AvatarIcon.tsx","../../src/Avatar/AvatarPresence.tsx","../../src/Avatar/AvatarStatus.tsx","../../src/Avatar/AvatarWrapper.tsx","../../src/Badge/Badge.tsx","../../src/BottomNav/BottomNav.tsx","../../src/BottomNav/BottomNavItem.tsx","../../src/Breadcrumb/Breadcrumb.tsx","../../src/Callout/Callout.tsx","../../src/Callout/CalloutText.tsx","../../src/Callout/CalloutTitle.tsx","../../src/Card/Card.tsx","../../src/Card/CardBody.tsx","../../src/Card/CardCategory.tsx","../../src/Card/CardFooterCTA.tsx","../../src/Card/CardReadMore.tsx","../../src/Card/CardSignature.tsx","../../src/Card/CardTag.tsx","../../src/Card/CardTagsHeader.tsx","../../src/Card/CardText.tsx","../../src/Card/CardTitle.tsx","../../src/Chips/Chip.tsx","../../src/Chips/ChipLabel.tsx","../../src/CookieBar/CookieBar.tsx","../../src/CookieBar/CookieBarButton.tsx","../../src/CookieBar/CookieBarButtons.tsx","../../src/Dimmer/Dimmer.tsx","../../src/Dimmer/DimmerButtons.tsx","../../src/Grid/GridItem.tsx","../../src/Grid/GridItemText.tsx","../../src/Grid/GridItemTextWrapper.tsx","../../src/Grid/GridList.tsx","../../src/Grid/GridRow.tsx","../../src/Header/Header.tsx","../../src/Header/HeaderLinkZone.tsx","../../src/Header/HeaderSearch.tsx","../../src/Header/HeaderSocialsZone.tsx","../../src/Header/Headers.tsx","../../src/Hero/Hero.tsx","../../src/Hero/HeroBackground.tsx","../../src/Hero/HeroBody.tsx","../../src/Hero/HeroButton.tsx","../../src/Hero/HeroCategory.tsx","../../src/Hero/HeroTitle.tsx","../../src/LinkList/LinkList.tsx","../../src/Megamenu/Megamenu.tsx","../../src/Megamenu/MegamenuFooter.tsx","../../src/Megamenu/MegamenuHighlightColumn.tsx","../../src/Megamenu/MegamenuItem.tsx","../../src/Modal/Modal.tsx","../../src/Modal/ModalBody.tsx","../../src/Modal/ModalFooter.tsx","../../src/Pager/Pager.tsx","../../src/Progress/Progress.tsx","../../src/ResponsiveImage/ResponsiveImage.tsx","../../src/Section/Section.tsx","../../src/Sidebar/Sidebar.tsx","../../src/Skiplink/Skiplink.tsx","../../src/Skiplink/SkiplinkItem.tsx","../../src/Spinner/Spinner.tsx","../../src/Stepper/StepperContainer.tsx","../../src/Stepper/StepperDots.tsx","../../src/Stepper/StepperHeader.tsx","../../src/Stepper/StepperNav.tsx","../../src/ThumbNav/ThumbNav.tsx","../../src/ThumbNav/ThumbNavItem.tsx","../../src/Timeline/TimelineWrapper.tsx","../../src/Timeline/TimelinePin.tsx","../../src/Toggle/Toggle.tsx","../../src/Toolbar/ToolbarDividerItem.tsx"],"sourcesContent":["import React, {\n  FC,\n  HTMLAttributes,\n  MouseEventHandler,\n  ElementType,\n  Ref\n} from 'react';\nimport { Alert as InnerAlert, FadeProps, CSSModule } from 'reactstrap';\n\n// Copy over from reactstrap and add new ones\nexport interface AlertProps extends HTMLAttributes<HTMLElement> {\n  closeClassName?: string;\n  closeAriaLabel?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | string;\n  /** Quando abilitato mostra un'animazione di entrata ed uscita del componente Alert. Valore di default: true. */\n  fade?: boolean;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  transition?: FadeProps;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement>;\n  isOpen?: boolean;\n  toggle?: MouseEventHandler<any>;\n}\n\nconst defaultProps = {\n  color: 'success',\n  isOpen: true,\n  fade: true\n};\n\nexport const Alert: FC<AlertProps> = (props) => {\n  return <InnerAlert {...props} />;\n};\n\nAlert.defaultProps = defaultProps;\n","import React, { Component, ElementType } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\n\nimport { Util } from 'reactstrap';\nimport type { TransitionProps } from 'react-transition-group/Transition';\n\nconst {\n  // @ts-ignore\n  TransitionTimeouts,\n  // @ts-ignore\n  TransitionPropTypeKeys,\n  // @ts-ignore\n  TransitionStatuses,\n  // @ts-ignore\n  pick,\n  // @ts-ignore\n  omit\n} = Util;\n\nexport type AccordionBodyProps = Partial<TransitionProps> & {\n  tag?: ElementType;\n  className?: string;\n  active?: boolean;\n  onToggle?: () => void;\n};\n\nconst transitionStatusToClassHash = {\n  [TransitionStatuses.ENTERING]: 'collapsing',\n  [TransitionStatuses.ENTERED]: 'collapse show',\n  [TransitionStatuses.EXITING]: 'collapsing',\n  [TransitionStatuses.EXITED]: 'collapse'\n};\n\ntype TransitionStates = keyof typeof transitionStatusToClassHash;\n\nfunction getTransitionClass(status: TransitionStates) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node: HTMLElement) {\n  return node.scrollHeight;\n}\n\nexport class AccordionBody extends Component<\n  AccordionBodyProps,\n  { height: null | number }\n> {\n  state = {\n    height: null\n  };\n\n  onEntering = (node: HTMLElement, isAppearing: boolean) => {\n    this.setState({ height: getHeight(node) });\n    this.props.onEntering?.(node, isAppearing);\n  };\n\n  onEntered = (node: HTMLElement, isAppearing: boolean) => {\n    this.setState({ height: null });\n    this.props.onEntered?.(node, isAppearing);\n  };\n\n  onExit = (node: HTMLElement) => {\n    this.setState({ height: getHeight(node) });\n    this.props.onExit?.(node);\n  };\n\n  onExiting = (node: HTMLElement) => {\n    // getting this variable triggers a reflow\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _unused = node.offsetHeight;\n    this.setState({ height: 0 });\n    this.props.onExiting?.(node);\n  };\n\n  onExited = (node: HTMLElement) => {\n    this.setState({ height: null });\n    this.props.onExited?.(node);\n  };\n\n  render() {\n    const {\n      className,\n      tag = 'div',\n      active = false,\n      children,\n      timeout = TransitionTimeouts.Collapse,\n      ...attributes\n    } = this.props;\n    const Tag = tag;\n    const { height } = this.state;\n\n    const transitionProps = pick(attributes, TransitionPropTypeKeys);\n    const childProps = omit(attributes, TransitionPropTypeKeys);\n\n    return (\n      <Transition\n        {...transitionProps}\n        timeout={timeout}\n        in={active}\n        onEntering={this.onEntering}\n        onEntered={this.onEntered}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status: TransitionStates) => {\n          const transitionClass = getTransitionClass(status);\n          const classes = classNames(className, transitionClass);\n\n          const style = height == null ? null : { height };\n\n          return (\n            <Tag\n              className={classes}\n              style={{ ...childProps.style, ...style }}\n              {...childProps}\n            >\n              <div className='collapse-body'>{children}</div>\n            </Tag>\n          );\n        }}\n      </Transition>\n    );\n  }\n}\n","import React, { FC, ButtonHTMLAttributes, ElementType, Ref } from 'react';\nimport classNames from 'classnames';\n\nimport { Button as ButtonBase } from 'reactstrap';\nimport type { CSSModule } from 'reactstrap';\n\n// reactstrap wrapper\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Quando abilitato, estende il componente Button fino a prendere tutta la larghezza disponibile */\n  block?: boolean;\n  /** Utilizzarlo disabilitare il colore di sfondo, ed applicarlo invece al bordo.  */\n  outline?: boolean;\n  /** Utilizzarlo in caso di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Button */\n  className?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  innerRef?: Ref<HTMLButtonElement>;\n  /** Da utilizzare si usa una icona nel contenuto del Button */\n  icon?: boolean;\n  /** Da utilizzare per le varianti di dimensione del componente Button */\n  size?: 'lg' | 'sm' | 'xs';\n  /** Da utilizzare per i bottoni di chiusura all'interno di altri componenti (i.e. Chips, Modali, etc...) */\n  close?: boolean;\n  active?: boolean;\n  href?: string;\n}\n\nexport const Button: FC<ButtonProps> = ({\n  tag = 'button',\n  icon = false,\n  color = '',\n  className,\n  ...attributes\n}) => {\n  const classes = classNames(className, {\n    'btn-icon': icon\n  });\n\n  const ariaAttributes = {\n    ...(attributes.disabled && { 'aria-disabled': true })\n  };\n\n  const baseProps = { color, tag };\n\n  return (\n    <ButtonBase\n      className={classes}\n      {...baseProps}\n      {...attributes}\n      {...ariaAttributes}\n    />\n  );\n};\n","import React, { FC, AnchorHTMLAttributes, MutableRefObject } from 'react';\nimport classNames from 'classnames';\n\n// SSR does have no access to the Element global variable, so mock it\nif (typeof window === 'undefined') {\n  global.Element =\n    typeof Element === 'undefined'\n      ? (function () {} as typeof Element)\n      : Element;\n}\n\nexport interface ForwardProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Classi aggiuntive da usare per il componente Forward */\n  className?: string;\n  /** Riferimento al nodo a cui scorrere quando premuto */\n  scrollToRef: MutableRefObject<Element>;\n}\n\nexport const Forward: FC<ForwardProps> = ({\n  className,\n  scrollToRef,\n  children,\n  ...attributes\n}) => {\n  const classes = classNames(className, 'forward');\n  return (\n    <a\n      className={classes}\n      onClick={() =>\n        scrollToRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        })\n      }\n      {...attributes}\n    >\n      {children}\n    </a>\n  );\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const iconList: Record<string, boolean> = {\n  'it-arrow-down-circle': true,\n  'it-arrow-down-triangle': true,\n  'it-arrow-down': true,\n  'it-arrow-left-circle': true,\n  'it-arrow-left-triangle': true,\n  'it-arrow-left': true,\n  'it-arrow-right-circle': true,\n  'it-arrow-right-triangle': true,\n  'it-arrow-right': true,\n  'it-arrow-up-circle': true,\n  'it-arrow-up-triangle': true,\n  'it-arrow-up': true,\n  'it-ban': true,\n  'it-behance': true,\n  'it-bookmark': true,\n  'it-box': true,\n  'it-burger': true,\n  'it-calendar': true,\n  'it-camera': true,\n  'it-card': true,\n  'it-chart-line': true,\n  'it-check-circle': true,\n  'it-check': true,\n  'it-chevron-left': true,\n  'it-chevron-right': true,\n  'it-clip': true,\n  'it-clock': true,\n  'it-close-big': true,\n  'it-close-circle': true,\n  'it-close': true,\n  'it-code-circle': true,\n  'it-collapse': true,\n  'it-comment': true,\n  'it-copy': true,\n  'it-delete': true,\n  'it-designers-italia': true,\n  'it-download': true,\n  'it-error': true,\n  'it-exchange-circle': true,\n  'it-expand': true,\n  'it-external-link': true,\n  'it-facebook-square': true,\n  'it-facebook': true,\n  'it-file': true,\n  'it-files': true,\n  'it-flag': true,\n  'it-flickr-square': true,\n  'it-flickr': true,\n  'it-folder': true,\n  'it-fullscreen': true,\n  'it-funnel': true,\n  'it-github': true,\n  'it-hearing': true,\n  'it-help-circle': true,\n  'it-help': true,\n  'it-horn': true,\n  'it-inbox': true,\n  'it-info-circle': true,\n  'it-instagram': true,\n  'it-key': true,\n  'it-less-circle': true,\n  'it-link': true,\n  'it-linkedin-square': true,\n  'it-linkedin': true,\n  'it-list': true,\n  'it-lock': true,\n  'it-locked': true,\n  'it-mail': true,\n  'it-map-marker-circle': true,\n  'it-map-marker-minus': true,\n  'it-map-marker-plus': true,\n  'it-map-marker': true,\n  'it-maximize-alt': true,\n  'it-maximize': true,\n  'it-medium-square': true,\n  'it-medium': true,\n  'it-minimize': true,\n  'it-minus-circle': true,\n  'it-minus': true,\n  'it-more-actions': true,\n  'it-more-items': true,\n  'it-note': true,\n  'it-open-source': true,\n  'it-pa': true,\n  'it-password-invisible': true,\n  'it-password-visible': true,\n  'it-pencil': true,\n  'it-piattaforme': true,\n  'it-pin': true,\n  'it-plug': true,\n  'it-plus-circle': true,\n  'it-plus': true,\n  'it-presentation': true,\n  'it-print': true,\n  'it-refresh': true,\n  'it-restore': true,\n  'it-rss-square': true,\n  'it-rss': true,\n  'it-search': true,\n  'it-settings': true,\n  'it-share': true,\n  'it-software': true,\n  'it-star-full': true,\n  'it-star-outline': true,\n  'it-team-digitale': true,\n  'it-telegram': true,\n  'it-telephone': true,\n  'it-tool': true,\n  'it-twitter-square': true,\n  'it-twitter': true,\n  'it-unlocked': true,\n  'it-upload': true,\n  'it-user': true,\n  'it-video': true,\n  'it-warning-circle': true,\n  'it-warning': true,\n  'it-whatsapp-square': true,\n  'it-whatsapp': true,\n  'it-wifi': true,\n  'it-youtube': true,\n  'it-zoom-in': true,\n  'it-zoom-out': true\n};\nexport type IconName = keyof typeof iconList;\n\nexport const loadIcon = (name: IconName) => {\n  switch (name) {\n    case 'it-arrow-down-circle': {\n      return import('./ItArrowDownCircle');\n    }\n    case 'it-arrow-down-triangle': {\n      return import('./ItArrowDownTriangle');\n    }\n    case 'it-arrow-down': {\n      return import('./ItArrowDown');\n    }\n    case 'it-arrow-left-circle': {\n      return import('./ItArrowLeftCircle');\n    }\n    case 'it-arrow-left-triangle': {\n      return import('./ItArrowLeftTriangle');\n    }\n    case 'it-arrow-left': {\n      return import('./ItArrowLeft');\n    }\n    case 'it-arrow-right-circle': {\n      return import('./ItArrowRightCircle');\n    }\n    case 'it-arrow-right-triangle': {\n      return import('./ItArrowRightTriangle');\n    }\n    case 'it-arrow-right': {\n      return import('./ItArrowRight');\n    }\n    case 'it-arrow-up-circle': {\n      return import('./ItArrowUpCircle');\n    }\n    case 'it-arrow-up-triangle': {\n      return import('./ItArrowUpTriangle');\n    }\n    case 'it-arrow-up': {\n      return import('./ItArrowUp');\n    }\n    case 'it-ban': {\n      return import('./ItBan');\n    }\n    case 'it-behance': {\n      return import('./ItBehance');\n    }\n    case 'it-bookmark': {\n      return import('./ItBookmark');\n    }\n    case 'it-box': {\n      return import('./ItBox');\n    }\n    case 'it-burger': {\n      return import('./ItBurger');\n    }\n    case 'it-calendar': {\n      return import('./ItCalendar');\n    }\n    case 'it-camera': {\n      return import('./ItCamera');\n    }\n    case 'it-card': {\n      return import('./ItCard');\n    }\n    case 'it-chart-line': {\n      return import('./ItChartLine');\n    }\n    case 'it-check-circle': {\n      return import('./ItCheckCircle');\n    }\n    case 'it-check': {\n      return import('./ItCheck');\n    }\n    case 'it-chevron-left': {\n      return import('./ItChevronLeft');\n    }\n    case 'it-chevron-right': {\n      return import('./ItChevronRight');\n    }\n    case 'it-clip': {\n      return import('./ItClip');\n    }\n    case 'it-clock': {\n      return import('./ItClock');\n    }\n    case 'it-close-big': {\n      return import('./ItCloseBig');\n    }\n    case 'it-close-circle': {\n      return import('./ItCloseCircle');\n    }\n    case 'it-close': {\n      return import('./ItClose');\n    }\n    case 'it-code-circle': {\n      return import('./ItCodeCircle');\n    }\n    case 'it-collapse': {\n      return import('./ItCollapse');\n    }\n    case 'it-comment': {\n      return import('./ItComment');\n    }\n    case 'it-copy': {\n      return import('./ItCopy');\n    }\n    case 'it-delete': {\n      return import('./ItDelete');\n    }\n    case 'it-designers-italia': {\n      return import('./ItDesignersItalia');\n    }\n    case 'it-download': {\n      return import('./ItDownload');\n    }\n    case 'it-error': {\n      return import('./ItError');\n    }\n    case 'it-exchange-circle': {\n      return import('./ItExchangeCircle');\n    }\n    case 'it-expand': {\n      return import('./ItExpand');\n    }\n    case 'it-external-link': {\n      return import('./ItExternalLink');\n    }\n    case 'it-facebook-square': {\n      return import('./ItFacebookSquare');\n    }\n    case 'it-facebook': {\n      return import('./ItFacebook');\n    }\n    case 'it-file': {\n      return import('./ItFile');\n    }\n    case 'it-files': {\n      return import('./ItFiles');\n    }\n    case 'it-flag': {\n      return import('./ItFlag');\n    }\n    case 'it-flickr-square': {\n      return import('./ItFlickrSquare');\n    }\n    case 'it-flickr': {\n      return import('./ItFlickr');\n    }\n    case 'it-folder': {\n      return import('./ItFolder');\n    }\n    case 'it-fullscreen': {\n      return import('./ItFullscreen');\n    }\n    case 'it-funnel': {\n      return import('./ItFunnel');\n    }\n    case 'it-github': {\n      return import('./ItGithub');\n    }\n    case 'it-hearing': {\n      return import('./ItHearing');\n    }\n    case 'it-help-circle': {\n      return import('./ItHelpCircle');\n    }\n    case 'it-help': {\n      return import('./ItHelp');\n    }\n    case 'it-horn': {\n      return import('./ItHorn');\n    }\n    case 'it-inbox': {\n      return import('./ItInbox');\n    }\n    case 'it-info-circle': {\n      return import('./ItInfoCircle');\n    }\n    case 'it-instagram': {\n      return import('./ItInstagram');\n    }\n    case 'it-key': {\n      return import('./ItKey');\n    }\n    case 'it-less-circle': {\n      return import('./ItLessCircle');\n    }\n    case 'it-link': {\n      return import('./ItLink');\n    }\n    case 'it-linkedin-square': {\n      return import('./ItLinkedinSquare');\n    }\n    case 'it-linkedin': {\n      return import('./ItLinkedin');\n    }\n    case 'it-list': {\n      return import('./ItList');\n    }\n    case 'it-lock': {\n      return import('./ItLock');\n    }\n    case 'it-locked': {\n      return import('./ItLocked');\n    }\n    case 'it-mail': {\n      return import('./ItMail');\n    }\n    case 'it-map-marker-circle': {\n      return import('./ItMapMarkerCircle');\n    }\n    case 'it-map-marker-minus': {\n      return import('./ItMapMarkerMinus');\n    }\n    case 'it-map-marker-plus': {\n      return import('./ItMapMarkerPlus');\n    }\n    case 'it-map-marker': {\n      return import('./ItMapMarker');\n    }\n    case 'it-maximize-alt': {\n      return import('./ItMaximizeAlt');\n    }\n    case 'it-maximize': {\n      return import('./ItMaximize');\n    }\n    case 'it-medium-square': {\n      return import('./ItMediumSquare');\n    }\n    case 'it-medium': {\n      return import('./ItMedium');\n    }\n    case 'it-minimize': {\n      return import('./ItMinimize');\n    }\n    case 'it-minus-circle': {\n      return import('./ItMinusCircle');\n    }\n    case 'it-minus': {\n      return import('./ItMinus');\n    }\n    case 'it-more-actions': {\n      return import('./ItMoreActions');\n    }\n    case 'it-more-items': {\n      return import('./ItMoreItems');\n    }\n    case 'it-note': {\n      return import('./ItNote');\n    }\n    case 'it-open-source': {\n      return import('./ItOpenSource');\n    }\n    case 'it-pa': {\n      return import('./ItPa');\n    }\n    case 'it-password-invisible': {\n      return import('./ItPasswordInvisible');\n    }\n    case 'it-password-visible': {\n      return import('./ItPasswordVisible');\n    }\n    case 'it-pencil': {\n      return import('./ItPencil');\n    }\n    case 'it-piattaforme': {\n      return import('./ItPiattaforme');\n    }\n    case 'it-pin': {\n      return import('./ItPin');\n    }\n    case 'it-plug': {\n      return import('./ItPlug');\n    }\n    case 'it-plus-circle': {\n      return import('./ItPlusCircle');\n    }\n    case 'it-plus': {\n      return import('./ItPlus');\n    }\n    case 'it-presentation': {\n      return import('./ItPresentation');\n    }\n    case 'it-print': {\n      return import('./ItPrint');\n    }\n    case 'it-refresh': {\n      return import('./ItRefresh');\n    }\n    case 'it-restore': {\n      return import('./ItRestore');\n    }\n    case 'it-rss-square': {\n      return import('./ItRssSquare');\n    }\n    case 'it-rss': {\n      return import('./ItRss');\n    }\n    case 'it-search': {\n      return import('./ItSearch');\n    }\n    case 'it-settings': {\n      return import('./ItSettings');\n    }\n    case 'it-share': {\n      return import('./ItShare');\n    }\n    case 'it-software': {\n      return import('./ItSoftware');\n    }\n    case 'it-star-full': {\n      return import('./ItStarFull');\n    }\n    case 'it-star-outline': {\n      return import('./ItStarOutline');\n    }\n    case 'it-team-digitale': {\n      return import('./ItTeamDigitale');\n    }\n    case 'it-telegram': {\n      return import('./ItTelegram');\n    }\n    case 'it-telephone': {\n      return import('./ItTelephone');\n    }\n    case 'it-tool': {\n      return import('./ItTool');\n    }\n    case 'it-twitter-square': {\n      return import('./ItTwitterSquare');\n    }\n    case 'it-twitter': {\n      return import('./ItTwitter');\n    }\n    case 'it-unlocked': {\n      return import('./ItUnlocked');\n    }\n    case 'it-upload': {\n      return import('./ItUpload');\n    }\n    case 'it-user': {\n      return import('./ItUser');\n    }\n    case 'it-video': {\n      return import('./ItVideo');\n    }\n    case 'it-warning-circle': {\n      return import('./ItWarningCircle');\n    }\n    case 'it-warning': {\n      return import('./ItWarning');\n    }\n    case 'it-whatsapp-square': {\n      return import('./ItWhatsappSquare');\n    }\n    case 'it-whatsapp': {\n      return import('./ItWhatsapp');\n    }\n    case 'it-wifi': {\n      return import('./ItWifi');\n    }\n    case 'it-youtube': {\n      return import('./ItYoutube');\n    }\n    case 'it-zoom-in': {\n      return import('./ItZoomIn');\n    }\n    case 'it-zoom-out': {\n      return import('./ItZoomOut');\n    }\n    default:\n      throw Error(`It should not land here. Requested icon: \"${name}\"`);\n  }\n};\n\nexport function isBundledIcon(name: string): name is IconName {\n  return name in iconList;\n}\n\nexport const allIcons = Object.keys(iconList);\n","import React, { FC, SVGProps } from 'react';\n\nexport const EmptyIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' {...props}>\n    <path fill='none' d='M0 0h24v24H0z' />\n  </svg>\n);\n","import React, {\n  FC,\n  ImgHTMLAttributes,\n  SVGProps,\n  useEffect,\n  useState\n} from 'react';\nimport classNames from 'classnames';\nimport { isBundledIcon, loadIcon, allIcons, IconName } from './assets';\nimport { EmptyIcon } from './EmptyIcon';\nexport type { IconName } from './assets';\n\nexport const iconsList = allIcons;\n\nlet iconsCache: Record<IconName, FC<SVGProps<SVGSVGElement>>> = {};\n\n/**\n * Preload a list of icons in cache\n * @param icons - the list of icons to preload\n * @returns true if the icons have been preloaded\n */\nexport async function preloadIcons(icons: IconName[]) {\n  const preloadedIcons = await Promise.all(icons.map((icon) => loadIcon(icon)));\n  preloadedIcons.forEach(({ component }, i) => {\n    iconsCache[icons[i]] = ((() => component) as unknown) as FC<\n      SVGProps<SVGSVGElement>\n    >;\n  });\n  return true;\n}\n\n/**\n * Removes icons from cache\n * @param icon? - the icon to remove, or nothing to clear the whole cache\n * @returns an object containing the removed icons\n */\nexport const clearIconCache = (iconName?: IconName) => {\n  let deletedItems;\n  if (iconName) {\n    deletedItems = { iconName: iconsCache[iconName] };\n    delete iconsCache[iconName];\n  } else {\n    deletedItems = { ...iconsCache };\n    iconsCache = {};\n  }\n  return deletedItems;\n};\n\nexport interface IconProps extends SVGProps<SVGSVGElement> {\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'success' | 'warning' | 'danger' | 'note' | 'important' | string;\n  /** Le dimensioni dell'icona. In ordine dalla più grande alla più piccola: \"xl\", \"lg\", '' (stringa vuota), \"sm\", \"xs\". */\n  size?: 'xl' | 'lg' | '' | 'sm' | 'xs';\n  /**\n   * Il nome dell'icona da mostrare. Per una lista completa vedi:\n   * <a href=\"https://italia.github.io/design-react-kit/?path=/story/componenti-icon--lista-icone\" target=\"_blank\">Lista icone</a>\n   * */\n  icon: string;\n  /** Quando abilitato riduce la dimensione dell'icona all'interno del contenitore.  */\n  padding?: boolean;\n  /** Funzione chiamata al caricamento dell'icona */\n  onIconLoad?: () => void;\n}\n\nexport const Icon: FC<IconProps> = ({\n  color = '',\n  size = '',\n  icon = '',\n  className,\n  padding = false,\n  onIconLoad,\n  ...attributes\n}) => {\n  const [IconComponent, setCurrentIcon] = useState<FC<SVGProps<SVGSVGElement>>>(\n    iconsCache[icon]\n  );\n  const classes = classNames('icon', className, {\n    [`icon-${color}`]: color,\n    [`icon-${size}`]: size,\n    'icon-padded': padding\n  });\n\n  useEffect(() => {\n    if (isBundledIcon(icon) && !iconsCache[icon]) {\n      loadIcon(icon).then(({ component }) => {\n        iconsCache[icon] = ((() => component) as unknown) as FC<\n          SVGProps<SVGSVGElement>\n        >;\n        setCurrentIcon(iconsCache[icon]);\n        onIconLoad?.();\n      });\n    } else {\n      onIconLoad?.();\n    }\n  }, [icon, onIconLoad]);\n\n  if (!isBundledIcon(icon)) {\n    // assume it's an image and let the browser do its job\n    return (\n      // eslint-disable-next-line jsx-a11y/alt-text\n      <img\n        src={icon}\n        className={classes}\n        {...(attributes as ImgHTMLAttributes<HTMLImageElement>)}\n      />\n    );\n  }\n\n  if (!IconComponent) {\n    return <EmptyIcon className={classes} role='img' {...attributes} />;\n  }\n\n  return <IconComponent className={classes} role='img' {...attributes} />;\n};\n","import React, { ElementType, FC, HTMLAttributes, Ref } from 'react';\nimport classNames from 'classnames';\n\nimport { Collapse as CollapseBase, CSSModule } from 'reactstrap';\n\n// Copy over from reactstrap and add new ones\nexport interface CollapseProps extends HTMLAttributes<HTMLElement> {\n  /** Indica se il menu HeaderNav sia aperto o meno. Usato unicamente nel caso della HeaderNav, ovvero con navbar e header entrambi true */\n  isOpen?: boolean;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Indica se il componente Collapse è usato all'interno di un componente navbar */\n  navbar?: boolean;\n  /** Indica se il componente Collapse ha al suo interno un Megamenu */\n  megamenu?: boolean;\n  /** Indica se il componente Collapse è usato all'interno di un componente Header */\n  header?: boolean;\n  delay?: {\n    show: number;\n    hide: number;\n  };\n  /** Funzione chiamata all'apertura del componente Collapse */\n  onOpened?: () => void;\n  /** Funzione chiamata alla chiusura del componente Collapse */\n  onClosed?: () => void;\n  /** Funzione chiamata durante la trasizione di apertura del componente Collapse */\n  onEntering?: () => void;\n  /** Funzione chiamata al termine della trasizione di apertura del componente Collapse */\n  onEntered?: () => void;\n  onExit?: () => void;\n  /** Funzione chiamata durante la trasizione di chiusura del componente Collapse */\n  onExiting?: () => void;\n  /** Funzione chiamata al termine della trasizione di chiusura del componente Collapse */\n  onExited?: () => void;\n  /** Funzione chiamata su click di overlay dell'HeaderNav aperto. Usato unicamente nel caso della HeaderNav, ovvero con navbar e header entrambi true */\n  onOverlayClick?: () => void;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement>;\n}\n\nexport const Collapse: FC<CollapseProps> = ({\n  header = false,\n  className,\n  navbar,\n  megamenu,\n  children,\n  isOpen = false,\n  onOverlayClick,\n  cssModule,\n  ...attributes\n}) => {\n  const newCssModule = {\n    'navbar-collapse': 'navbar-collapsable',\n    ...cssModule\n  };\n  if (megamenu || navbar || header) {\n    const classes = classNames(className, 'navbar-collapse', {\n      expanded: isOpen\n    });\n    const style = { display: isOpen ? 'block' : 'none' };\n    return (\n      <CollapseBase\n        className={classes}\n        cssModule={newCssModule}\n        navbar={navbar}\n        style={style}\n        {...attributes}\n      >\n        <div className='overlay' style={style} onClick={onOverlayClick}></div>\n        <div className='close-div sr-only'>\n          <button className='btn close-menu' type='button'>\n            <span className='it-close'></span>close\n          </button>\n        </div>\n        {megamenu ? (\n          <div className='menu-wrapper'>{children}</div>\n        ) : (\n          <>{children}</>\n        )}\n      </CollapseBase>\n    );\n  }\n  const classes = classNames(className, {\n    'link-list-wrapper': header\n  });\n\n  return (\n    <CollapseBase\n      className={classes}\n      cssModule={newCssModule}\n      {...attributes}\n      navbar={navbar}\n      isOpen={isOpen}\n    >\n      {children}\n    </CollapseBase>\n  );\n};\n","import React, { Context } from 'react';\n\nexport const SLIM = 'slim';\nexport const CENTER = 'center';\nexport const NAVBAR = 'navbar';\n\nexport const HeaderContext: Context<{\n  type?: typeof SLIM | typeof CENTER | typeof NAVBAR;\n}> = React.createContext({});\n","import React, {\n  AnchorHTMLAttributes,\n  ElementType,\n  ReactChild,\n  PureComponent\n} from 'react';\nimport classNames from 'classnames';\nimport { CSSModule, NavbarBrand } from 'reactstrap';\nimport { HeaderContext, CENTER } from './HeaderContext';\nimport { Icon } from '../Icon/Icon';\n\nexport interface HeaderBrandProps\n  extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente HeaderBrand */\n  className?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Da usare con il componente Header Nav in versione \"responsive\" */\n  responsive?: boolean;\n  /** Da utilizzare per specificare URL risorsa esterna. */\n  href?: string;\n  /** Icona da utilizzare nel componente. Utilizzata unicamente quando l'Header è di tipo Center.  */\n  iconName?: string;\n  /** Elementi React da renderizzare al proprio interno. */\n  children: ReactChild | ReactChild[];\n}\n\nexport class HeaderBrand extends PureComponent<HeaderBrandProps> {\n  static contextType = HeaderContext;\n\n  render() {\n    const {\n      className,\n      href,\n      iconName,\n      children,\n      tag = 'a',\n      responsive = false,\n      ...attributes\n    } = this.props;\n    const { type } = this.context;\n    const defaultAttributes = { tag };\n    if (type !== CENTER) {\n      const classes = classNames('d-lg-block', className, {\n        'd-none': !responsive\n      });\n      return (\n        <NavbarBrand\n          className={classes}\n          href={href}\n          {...attributes}\n          {...defaultAttributes}\n        >\n          {children}\n        </NavbarBrand>\n      );\n    }\n    return (\n      <div className='it-brand-wrapper'>\n        <a href={href}>\n          {iconName && <Icon icon={iconName} />}\n          <div className='it-brand-text'>\n            {React.Children.map(children, (child, i) => {\n              if (\n                typeof child !== 'object' ||\n                child == null ||\n                !('props' in child)\n              ) {\n                return child;\n              }\n              // convention here: first item is the main title, while others subtext\n              const className = classNames(\n                child.props.className,\n                { 'd-none d-md-block': i } // subtext is anything but first element\n              );\n\n              const props = {\n                className\n              };\n\n              return React.cloneElement(child, props);\n            })}\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n","import React, { HTMLAttributes, PureComponent } from 'react';\nimport classNames from 'classnames';\nimport { Navbar } from 'reactstrap';\n\nimport { HeaderContext, SLIM, CENTER, NAVBAR } from './HeaderContext';\n\nexport interface HeaderContentProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive da usare per il componente HeaderContent */\n  className?: string;\n  /** Da utilizzare per indicare che all'interno dell'Header verrà utilizzato un Megamenu */\n  megamenu?: boolean;\n  /** Parametro per il controllo responsive del componente secondo Bootstrap Italia. */\n  expand?: boolean | 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport class HeaderContent extends PureComponent<HeaderContentProps> {\n  static contextType = HeaderContext;\n  render() {\n    const { className, megamenu, ...attributes } = this.props;\n    const { type } = this.context;\n    const classes = classNames(className, {\n      'it-header-slim-wrapper-content': type === SLIM,\n      'it-header-center-content-wrapper': type === CENTER,\n      navbar: type === NAVBAR,\n      'has-megamenu': megamenu\n    });\n\n    const Content =\n      type === NAVBAR ? (\n        <Navbar className={classes} {...attributes} />\n      ) : (\n        <div className={classes} {...attributes} />\n      );\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12'>{Content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { HeaderContext, SLIM } from './HeaderContext';\n\nexport interface HeaderRightZoneProps extends HTMLAttributes<HTMLElement> {\n  /** Classi addizionali per il componente HeaderLinkZone, applicata all'element \"nav\" annidato */\n  className?: string;\n}\n\nexport class HeaderRightZone extends PureComponent<HeaderRightZoneProps> {\n  static contextType = HeaderContext;\n\n  render() {\n    const { className, ...attributes } = this.props;\n    const { type } = this.context;\n    const classes = classNames(className, {\n      // BI >= 1.3.6\n      'it-header-slim-right-zone': type === SLIM,\n      // BI < 1.3.6\n      'header-slim-right-zone': type === SLIM,\n      'it-right-zone': type !== SLIM\n    });\n    return <div className={classes} {...attributes} />;\n  }\n}\n","import React, { PureComponent, ElementType, ButtonHTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport { NavbarToggler } from 'reactstrap';\n\nimport { HeaderContext, SLIM, NAVBAR } from './HeaderContext';\n\nexport interface HeaderTogglerProps\n  extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Tipo di elemento DOM da utilizzare: di default \"a\" per Header Slim, \"button\" per altri tipi di Header.\n   * Se fornito questo sovrascriverà il valore di default.\n   */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente HeaderToggler */\n  className?: string;\n  /** Indica l'attributo \"type\" sull'elemento DOM. Di default '' per Header Slim, \"button\" per altri tipi di Header.\n   * Se fornito questo sovrascriverà il valore di default.\n   */\n  type?: 'button' | 'submit' | 'reset';\n}\n\nexport class HeaderToggler extends PureComponent<HeaderTogglerProps> {\n  static contextType = HeaderContext;\n  render() {\n    const { className, tag, type, ...attributes } = this.props;\n    const { type: HeaderType } = this.context;\n    const BUTTON = 'button';\n    const defaultTag = HeaderType === SLIM ? 'a' : BUTTON;\n    const defaultType = HeaderType === SLIM ? undefined : BUTTON;\n    const classes = classNames(\n      {\n        'it-opener d-lg-none': HeaderType === SLIM,\n        'custom-navbar-toggler': HeaderType === NAVBAR\n      },\n      className\n    );\n    return (\n      <NavbarToggler\n        className={classes}\n        {...attributes}\n        tag={tag || defaultTag}\n        type={type || defaultType}\n        href='#'\n      />\n    );\n  }\n}\n","import React, { FC, HTMLAttributes, ReactNode } from 'react';\n\nexport interface InputContainerProps extends HTMLAttributes<HTMLElement> {\n  wrapperClass: string;\n  activeClass: string;\n  infoTextClass: string;\n  label: string | ReactNode | undefined;\n  infoText: string | undefined;\n  id: string | undefined;\n  infoId: string | undefined;\n}\n\nexport const InputContainer: FC<InputContainerProps> = ({\n  id,\n  infoId,\n  activeClass,\n  label,\n  infoTextClass,\n  infoText,\n  wrapperClass,\n  children\n}) => {\n  return (\n    <div className={wrapperClass}>\n      {children}\n      <label htmlFor={id} className={activeClass}>\n        {label}\n      </label>\n      <small id={infoId} className={infoTextClass}>\n        {infoText}\n      </small>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { Util } from 'reactstrap';\nimport type { CSSModule } from 'reactstrap';\nimport type { InputProps } from './Input';\n// @ts-ignore\nconst { mapToCssModules } = Util;\n\ntype ValidationProps = Pick<InputProps, 'valid' | 'invalid'>;\ntype TypeProps = Pick<InputProps, 'plaintext' | 'type'> & {\n  staticInput?: boolean;\n};\ntype FormControlProps = Pick<InputProps, 'addon' | 'normalized'> & TypeProps;\n\nfunction getFormControlClassInternal({\n  plaintext,\n  staticInput,\n  type = 'text',\n  addon,\n  normalized\n}: FormControlProps) {\n  const formControlClass = 'form-control';\n  if (plaintext || staticInput || normalized) {\n    return `${formControlClass}-plaintext`;\n  }\n  if (type === 'file') {\n    return `${formControlClass}-file`;\n  }\n  if (['radio', 'checkbox'].indexOf(type) > -1) {\n    if (addon) {\n      return null;\n    }\n  }\n  return formControlClass;\n}\n\nexport function getFormControlClass(\n  props: FormControlProps,\n  cssModule?: CSSModule\n) {\n  return mapToCssModules(getFormControlClassInternal(props), cssModule);\n}\n\nexport function getInfoTextControlClass(\n  { valid, invalid }: ValidationProps,\n  cssModule?: CSSModule\n) {\n  return mapToCssModules(\n    classNames({\n      'form-text': valid || invalid,\n      'text-muted': !valid || invalid\n    }),\n    cssModule\n  );\n}\n\nexport function getTag({\n  tag,\n  plaintext,\n  staticInput,\n  type = 'text'\n}: Pick<InputProps, 'tag'> & TypeProps) {\n  if (tag) {\n    return tag;\n  }\n  if (['radio', 'checkbox'].indexOf(type) > -1) {\n    return 'input';\n  }\n  if (plaintext || staticInput) {\n    return 'p';\n  }\n  return 'input';\n}\n\ntype InputClassesParams = ValidationProps &\n  Pick<\n    InputProps,\n    'bsSize' | 'placeholder' | 'value' | 'label' | 'infoText' | 'normalized'\n  > & {\n    isFocused: boolean;\n    inputPassword?: boolean;\n    formControlClass?: string;\n    infoTextControlClass: string;\n    originalWrapperClass: InputProps['wrapperClassName'];\n  };\n\nexport function getClasses(\n  className: string | undefined,\n  {\n    isFocused,\n    valid,\n    invalid,\n    bsSize,\n    placeholder,\n    value,\n    label,\n    infoText,\n    normalized,\n    inputPassword,\n    formControlClass,\n    infoTextControlClass,\n    originalWrapperClass\n  }: InputClassesParams,\n  cssModule?: CSSModule\n) {\n  const hasPlainCondition = placeholder || label || infoText;\n  const baseCondition = hasPlainCondition && !normalized && !inputPassword;\n  const passwordOnlyCondition =\n    inputPassword && !hasPlainCondition && !normalized;\n  const normalizedOnlyCondition =\n    normalized && !hasPlainCondition && !inputPassword;\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      {\n        'is-invalid': invalid,\n        'is-valid': valid,\n        [`form-control-${bsSize}`]: bsSize\n      },\n      formControlClass\n    ),\n    cssModule\n  );\n  const wrapperClass = mapToCssModules(\n    classNames(className, originalWrapperClass, 'form-group'),\n    cssModule\n  );\n  const infoTextClass = mapToCssModules(\n    classNames(\n      {\n        'valid-feedback': valid,\n        'invalid-feedback': invalid\n      },\n      infoTextControlClass\n    ),\n    cssModule\n  );\n\n  const inputClasses = mapToCssModules(\n    classNames(\n      classes,\n      !baseCondition && {\n        // we can model here only if stylings\n        'form-control-plaintext': normalizedOnlyCondition,\n        'form-control': passwordOnlyCondition,\n        'input-password': passwordOnlyCondition,\n        'focus--mouse': passwordOnlyCondition || normalizedOnlyCondition\n      }\n    ),\n    cssModule\n  );\n\n  const activeClass = mapToCssModules(\n    classNames({\n      active: isFocused || placeholder || value\n    }),\n    cssModule\n  );\n\n  return {\n    wrapperClass,\n    inputClasses,\n    activeClass,\n    infoTextClass\n  };\n}\n","export const noop = () => {};\n\nexport const logError = (message: string) => {\n  if (typeof console !== 'undefined') {\n    if (console.error) {\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\nconst messages: Record<string, 1> = {};\nexport const notifyDeprecation = (\n  message: string,\n  options = { once: true }\n) => {\n  if (!options.once) {\n    logError(message);\n  } else {\n    if (!messages[message]) {\n      logError(message);\n      messages[message] = 1;\n    }\n  }\n};\n","import React, { InputHTMLAttributes, ElementType, Ref, ReactNode } from 'react';\nimport isNumber from 'is-number';\n\nimport { InputContainer } from './InputContainer';\nimport { Icon } from '../Icon/Icon';\nimport {\n  getTag,\n  getFormControlClass,\n  getClasses,\n  getInfoTextControlClass\n} from './utils';\nimport type { CSSModule } from 'reactstrap';\nimport { notifyDeprecation } from '../utils';\n// taken from reactstrap types\ntype InputType =\n  | 'text'\n  | 'email'\n  | 'select'\n  | 'file'\n  | 'radio'\n  | 'checkbox'\n  | 'textarea'\n  | 'button'\n  | 'reset'\n  | 'submit'\n  | 'date'\n  | 'datetime-local'\n  | 'hidden'\n  | 'image'\n  | 'month'\n  | 'number'\n  | 'range'\n  | 'search'\n  | 'tel'\n  | 'url'\n  | 'week'\n  | 'password'\n  | 'datetime'\n  | 'time'\n  | 'color';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  /** Il tipo specifico di input da utilizzare. Il valore di default è `text`. */\n  type?: InputType;\n  /** Dimensione personalizzate del campo di Input secondo le classi Bootstrap/Bootstrap Italia. */\n  bsSize?: 'lg' | 'sm';\n  size?: number;\n  /** Etichetta del campo Input. */\n  label?: string | ReactNode;\n  /** Testo di esempio da utilizzare per il campo. */\n  placeholder?: string;\n  /** Testo di aiuto per l'elemento del moduleo form. Richiede che il componente `Input` abbia la prop `id` impostata. */\n  infoText?: string;\n  /** Il valore nel campo Input. */\n  value?: string | number;\n  /** Da utilizzare per impedire la modifica del valore contenuto. */\n  readOnly?: boolean;\n  /** Associato all'attributo readOnly mostra il campo con lo stile classico, mantenendo lo stato di sola lettura. */\n  normalized?: boolean;\n  /** Utilizzare per mostrare il successo nella validazione del valore nel campo Input */\n  valid?: boolean;\n  /** Utilizzare per mostrare il fallimento nella validazione del valore nel campo Input */\n  invalid?: boolean;\n  innerRef?: Ref<HTMLInputElement>;\n  /** Utilizzare per mostrare testo statico non modificabile. */\n  plaintext?: boolean;\n  /** Utilizzare per mostrare un elemento addon a fianco (prima o dopo) il campo input all'interno del componente */\n  addon?: boolean;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Classi aggiuntive da usare per il wrapper del componente Input */\n  wrapperClassName?: string;\n  /**\n   * Classi aggiuntive da usare per il wrapper del componente Input.\n   * @deprecated. Usare `wrapperClassName`.\n   * */\n  wrapperClass?: string;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Input */\n  className?: string;\n  /**\n   * Usare \"valid\" o \"invalid\" per indicare lo stato del componente.\n   * @deprecated\n   */\n  state?: string;\n  /**\n   * Usare \"plaintext\".\n   * @deprecated\n   */\n  static?: boolean;\n  /** Quando attivo rimuove il componente contenitore dell'Input. Utile per un controllo maggiore dello styling */\n  noWrapper?: boolean;\n}\n\ntype InputState = { isFocused: boolean; hidden: boolean; icon: boolean };\n\nexport class Input extends React.Component<InputProps, InputState> {\n  state = {\n    isFocused: false,\n    hidden: true,\n    icon: true\n  };\n\n  toggleFocusLabel = (e: React.FocusEvent<HTMLInputElement>) => {\n    this.setState({\n      isFocused: true\n    });\n    this.props.onFocus?.(e);\n  };\n\n  toggleBlurLabel = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.target.value === '') {\n      this.setState({\n        isFocused: !this.state.isFocused\n      });\n    }\n    this.props.onBlur?.(e);\n  };\n\n  toggleShow = () => {\n    this.setState({ hidden: !this.state.hidden, icon: !this.state.icon });\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      cssModule,\n      type,\n      state,\n      tag,\n      addon,\n      static: staticInput,\n      plaintext,\n      innerRef,\n      label,\n      infoText,\n      placeholder,\n      normalized,\n      value,\n      wrapperClass: originalWrapperClassOld,\n      wrapperClassName: originalWrapperClass,\n      size,\n      noWrapper = false,\n      ...attributes\n    } = this.props;\n    let { bsSize, valid, invalid, ...rest } = attributes;\n\n    const Tag = getTag({ tag, plaintext, staticInput, type });\n    const formControlClass = getFormControlClass(\n      {\n        plaintext,\n        staticInput,\n        type,\n        addon,\n        normalized\n      },\n      cssModule\n    );\n    const infoTextControlClass = getInfoTextControlClass(\n      { valid, invalid },\n      cssModule\n    );\n\n    if (state && valid == null && invalid == null) {\n      invalid = state === 'danger';\n      valid = state === 'success';\n    }\n\n    const extraAttributes: {\n      type?: InputType;\n      size?: number;\n      ['aria-describedby']?: string;\n    } = {};\n    if (size && !isNumber(size)) {\n      notifyDeprecation(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n      );\n      bsSize = (size as unknown) as InputProps['bsSize'];\n    } else {\n      extraAttributes.size = size;\n    }\n\n    if (Tag === 'input' || typeof tag !== 'string') {\n      extraAttributes.type = type;\n    }\n\n    // associate the input field with the help text\n    const infoId = id ? `${id}Description` : undefined;\n    if (id) {\n      extraAttributes['aria-describedby'] = infoId;\n    }\n\n    if (\n      attributes.children &&\n      !(\n        plaintext ||\n        staticInput ||\n        type === 'select' ||\n        typeof Tag !== 'string' ||\n        Tag === 'select'\n      )\n    ) {\n      notifyDeprecation(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n      );\n      delete attributes.children;\n    }\n\n    const inputPassword = extraAttributes.type === 'password';\n\n    // Styling\n    const {\n      activeClass,\n      infoTextClass,\n      inputClasses,\n      wrapperClass\n    } = getClasses(\n      className,\n      {\n        valid,\n        invalid,\n        bsSize,\n        placeholder,\n        value,\n        label,\n        infoText,\n        normalized: Boolean(normalized),\n        inputPassword,\n        formControlClass,\n        infoTextControlClass,\n        isFocused: this.state.isFocused,\n        originalWrapperClass: originalWrapperClass || originalWrapperClassOld\n      },\n      cssModule\n    );\n\n    // set of attributes always shared by the Input components\n    const sharedAttributes = {\n      id,\n      onFocus: this.toggleFocusLabel,\n      onBlur: this.toggleBlurLabel,\n      value: value,\n      ref: innerRef\n    };\n\n    // set of attributes always shared by the wrapper component\n    const containerProps = {\n      id,\n      infoId,\n      activeClass,\n      label,\n      infoTextClass,\n      infoText,\n      wrapperClass\n    };\n\n    if (noWrapper) {\n      return (\n        <Tag\n          {...rest}\n          {...extraAttributes}\n          className={inputClasses}\n          {...sharedAttributes}\n          placeholder={placeholder}\n        />\n      );\n    }\n\n    if (placeholder) {\n      return (\n        <InputContainer {...containerProps}>\n          <Tag\n            {...rest}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n            placeholder={placeholder}\n          />\n        </InputContainer>\n      );\n    }\n\n    if (inputPassword) {\n      return (\n        <InputContainer {...containerProps}>\n          <Tag\n            {...rest}\n            {...extraAttributes}\n            {...sharedAttributes}\n            type={this.state.hidden ? 'password' : 'text'}\n            className={inputClasses}\n            placeholder={placeholder}\n          />\n          <span className='password-icon' aria-hidden='true'>\n            <Icon\n              size='sm'\n              icon={`it-password-${this.state.icon ? 'visible' : 'invisible'}`}\n              className='password-icon-visible'\n              onClick={this.toggleShow}\n            />\n          </span>\n        </InputContainer>\n      );\n    }\n    if (normalized) {\n      return (\n        <InputContainer {...containerProps}>\n          <Tag\n            {...rest}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n            readOnly\n          />\n        </InputContainer>\n      );\n    }\n    if (label || infoText) {\n      return (\n        <InputContainer {...containerProps}>\n          <Tag\n            {...rest}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n          />\n        </InputContainer>\n      );\n    }\n\n    return (\n      <Tag\n        {...rest}\n        {...extraAttributes}\n        className={inputClasses}\n        {...sharedAttributes}\n      />\n    );\n  }\n}\n","import React, { Ref, ReactNode, TextareaHTMLAttributes } from 'react';\n\nimport { InputContainer } from './InputContainer';\nimport { getClasses, getInfoTextControlClass } from './utils';\nimport type { CSSModule } from 'reactstrap';\n\nexport interface TextAreaProps\n  extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /** Etichetta del campo TextArea. */\n  label?: string | ReactNode;\n  /** Testo di esempio da utilizzare per il campo. */\n  placeholder?: string;\n  /** Testo di aiuto per l'elemento del moduleo form. Richiede che il componente `TextArea` abbia la prop `id` impostata. */\n  infoText?: string;\n  /** Il valore nel campo TextArea. */\n  value?: string | number;\n  /** Da utilizzare per impedire la modifica del valore contenuto. */\n  readOnly?: boolean;\n  /** Associato all'attributo readOnly mostra il campo con lo stile classico, mantenento lo stato di sola lettura. */\n  normalized?: boolean;\n  /** Utilizzare per mostrare il successo nella validazione del valore nel campo TextArea */\n  valid?: boolean;\n  /** Utilizzare per mostrare il fallimento nella validazione del valore nel campo TextArea */\n  invalid?: boolean;\n  innerRef?: Ref<HTMLTextAreaElement>;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Classi aggiuntive da usare per il wrapper del componente TextArea */\n  wrapperClassName?: string;\n  /** Classi aggiuntive da usare per il componente TextArea */\n  className?: string;\n}\n\ntype InputState = { isFocused: boolean; hidden: boolean; icon: boolean };\n\nexport class TextArea extends React.Component<TextAreaProps, InputState> {\n  state = {\n    isFocused: false,\n    hidden: true,\n    icon: true\n  };\n\n  toggleFocusLabel = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  toggleBlurLabel = (e: { target: { value: string } }) => {\n    if (e.target.value === '') {\n      this.setState({\n        isFocused: !this.state.isFocused\n      });\n    }\n  };\n\n  toggleShow = () => {\n    this.setState({ hidden: !this.state.hidden, icon: !this.state.icon });\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      cssModule,\n      innerRef,\n      label,\n      infoText,\n      placeholder,\n      normalized,\n      value,\n      wrapperClassName: originalWrapperClass,\n      valid,\n      invalid,\n      ...attributes\n    } = this.props;\n\n    const infoTextControlClass = getInfoTextControlClass(\n      { valid, invalid },\n      cssModule\n    );\n\n    const extraAttributes: { ['aria-describedby']?: string } = {};\n\n    // associate the input field with the help text\n    const infoId = id ? `${id}Description` : undefined;\n    if (id) {\n      extraAttributes['aria-describedby'] = infoId;\n    }\n\n    // Styling\n    const {\n      activeClass,\n      infoTextClass,\n      inputClasses,\n      wrapperClass\n    } = getClasses(\n      className,\n      {\n        valid,\n        invalid,\n        placeholder,\n        value,\n        label,\n        infoText,\n        normalized: Boolean(normalized),\n        infoTextControlClass,\n        isFocused: this.state.isFocused,\n        originalWrapperClass\n      },\n      cssModule\n    );\n\n    // set of attributes always shared by the Input components\n    const sharedAttributes = {\n      id,\n      onFocus: this.toggleFocusLabel,\n      onBlur: this.toggleBlurLabel,\n      value: value,\n      ref: innerRef\n    };\n\n    // set of attributes always shared by the wrapper component\n    const containerProps = {\n      id,\n      infoId,\n      activeClass,\n      label,\n      infoTextClass,\n      infoText,\n      wrapperClass\n    };\n\n    if (placeholder) {\n      return (\n        <InputContainer {...containerProps}>\n          <textarea\n            {...attributes}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n            placeholder={placeholder}\n          />\n        </InputContainer>\n      );\n    }\n\n    if (normalized) {\n      return (\n        <InputContainer {...containerProps}>\n          <textarea\n            {...attributes}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n            readOnly\n          />\n        </InputContainer>\n      );\n    }\n    if (label || infoText) {\n      return (\n        <InputContainer {...containerProps}>\n          <textarea\n            {...attributes}\n            {...extraAttributes}\n            {...sharedAttributes}\n            className={inputClasses}\n          />\n        </InputContainer>\n      );\n    }\n\n    return (\n      <textarea\n        {...attributes}\n        {...extraAttributes}\n        ref={innerRef}\n        className={inputClasses}\n        {...sharedAttributes}\n      />\n    );\n  }\n}\n","import React, {\n  FC,\n  AnchorHTMLAttributes,\n  ElementType,\n  MouseEvent,\n  MouseEventHandler\n} from 'react';\nimport classNames from 'classnames';\n\nexport interface LinkListItemProps\n  extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Indica se l'elemento è attivo o no */\n  active?: boolean;\n  /** Indica se l'elemento è disabilitato o no */\n  disabled?: boolean;\n  /** Indica se l'elemento è un titolo. */\n  header?: boolean;\n  /** Indica se l'elemento è un divisore */\n  divider?: boolean;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente LinkListItem */\n  className?: string;\n  /** Classi aggiuntive da usare per l'elemento contenitore dell'item */\n  wrapperClassName?: string;\n  /** Indica il link a cui l'elemento deve puntare. */\n  href?: string;\n  /** Utilizzato per aumentare taglia/grandezza dell'elemento: può essere \"medium\" o \"large\". */\n  size?: 'medium' | 'large';\n}\n\nconst handleDisabledOnClick = (e: MouseEvent<HTMLAnchorElement>) => {\n  e.preventDefault();\n};\n\nexport const LinkListItem: FC<LinkListItemProps> = ({\n  className,\n  active,\n  disabled,\n  header,\n  divider,\n  href,\n  size,\n  tag = 'a',\n  wrapperClassName,\n  children,\n  ...attributes\n}) => {\n  let Tag = tag;\n  const classes = classNames(\n    className,\n    {\n      active,\n      disabled,\n      header,\n      divider,\n      size\n    },\n    'list-item'\n  );\n\n  // Prevent click event when disabled.\n  const handlers: { onClick?: MouseEventHandler<HTMLAnchorElement> } = {};\n  if (disabled) {\n    handlers.onClick = handleDisabledOnClick;\n  }\n\n  if (header) {\n    Tag = 'h3';\n  } else if (divider) {\n    Tag = 'span';\n  }\n\n  if (header && href) {\n    return (\n      <li className={wrapperClassName}>\n        <Tag>\n          <a\n            href={href || '#'}\n            {...attributes}\n            className={classes}\n            {...handlers}\n          >\n            {children}\n          </a>\n        </Tag>\n      </li>\n    );\n  }\n\n  return (\n    <li className={wrapperClassName}>\n      <Tag {...attributes} className={classes} href={href} {...handlers}>\n        {children}\n      </Tag>\n    </li>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport { Nav as NavBase } from 'reactstrap';\nimport classNames from 'classnames';\n\nexport interface NavProps extends HTMLAttributes<HTMLUListElement> {\n  /**\n   * Renderizza i componenti NavItem al suo interno come tab.\n   */\n  tabs?: boolean;\n  /**\n   * Renderizza i componenti NavItem al suo interno come pills.\n   */\n  pills?: boolean;\n  /**\n   * Renderizza i componenti NavItem al suo interno come card.\n   */\n  card?: boolean;\n  /**\n   * Se utilizzata all'interno di una navbar, impostarlo su `true`. In caso di Header Nav, impostarlo a `true`.\n   */\n  navbar?: boolean;\n  /** Se abilitato tutti i NavItem all'interno avranno la stessa larghezza */\n  justified?: boolean;\n  /** Se abilitato i NavItem all'intero occuperanno tutto lo spazio disponibile  */\n  fill?: boolean;\n  /** Da utilizzare per rendere il componente Nav verticale. Viene abilitato automaticamente in versione mobile. Valori possibili sono `true`, `false` o `\"xs\"` */\n  vertical?: boolean | 'xs';\n  /** Da utilizzare per cambiare l'allineamento all'interno della Nav. Valori possibili sono `\"center\"` o `\"end\"` per posizionare il contenuto a centro o sulla destra. */\n  horizontal?: 'center' | 'end';\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Nav */\n  className?: string;\n  /** Adds ability to incorporate secondary nav items */\n  secondary?: boolean;\n}\n\nexport const Nav: FC<NavProps> = ({\n  className,\n  tag = 'ul',\n  vertical = false,\n  secondary,\n  ...attributes\n}) => {\n  const classes = classNames(className, {\n    'navbar-secondary': secondary\n  });\n  return (\n    <NavBase\n      className={classes}\n      tag={tag}\n      vertical={vertical}\n      {...attributes}\n    />\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport { CSSModule, Util } from 'reactstrap';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon/Icon';\n// @ts-expect-error\nconst { mapToCssModules } = Util;\n\nexport interface ModalHeaderProps extends HTMLAttributes<HTMLElement> {\n  [key: string]: any;\n  cssModule?: CSSModule;\n  /** Componente che conterrà il nodo titolo. Valore di default: h5 */\n  tag?: React.ElementType;\n  /** Componente che contenitore per l'header. Valore di default: div. */\n  wrapTag?: React.ElementType;\n  /** Funzione da passare al tasto di chiusura nell'intestazione. Quando questa funzione non è presente il tasto di chiusura non viene mostrato. Valore di default: undefined */\n  toggle?: React.MouseEventHandler<any>;\n  /** Indica il nome dell'icona da utilizzare nel titolo. */\n  icon?: string;\n  /** Classi da aggiungere al nodo contenitore. */\n  className?: string;\n  /** Utilizzato per personalizzare il messaggio peer screen reader per il bottone di chiusura del modale. Valore di default: 'Close' */\n  closeAriaLabel?: string;\n}\n\nexport const ModalHeader: FC<ModalHeaderProps> = ({\n  icon,\n  className,\n  children,\n  Util,\n  toggle,\n  tag: Tag = 'h5',\n  wrapTag: WrapTag = 'div',\n  closeAriaLabel = 'Close',\n  close,\n  charCode = 215,\n  cssModule,\n  ...props\n}) => {\n  const classes = mapToCssModules(\n    classNames(className, 'modal-header'),\n    cssModule\n  );\n\n  let CloseButton;\n\n  if (!close && toggle) {\n    var closeIcon =\n      typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    CloseButton = (\n      <button\n        type='button'\n        onClick={toggle}\n        className={mapToCssModules('close', cssModule)}\n        aria-label={closeAriaLabel}\n      >\n        <span aria-hidden>{closeIcon}</span>\n      </button>\n    );\n  }\n\n  return (\n    <WrapTag {...props} className={classes}>\n      {icon != null ? <Icon icon={icon} /> : null}\n      <Tag className={mapToCssModules('modal-title', cssModule)}>\n        {children}\n      </Tag>\n      {close || CloseButton}\n    </WrapTag>\n  );\n};\n","import React, { Fragment, FC, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport { FormGroup, Label } from 'reactstrap';\nimport { Input } from '../Input/Input';\nimport type { InputProps } from '../Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { noop } from '../utils';\n\ntype UnusedProps =\n  | 'bsSize'\n  | 'size'\n  | 'static'\n  | 'plaintext'\n  | 'normalized'\n  | 'addon'\n  | 'placeholder'\n  | 'label'\n  | 'value'\n  | 'type';\nexport interface RatingProps extends Omit<InputProps, UnusedProps> {\n  /** La lista di 5 id, per ciascun elemento intero del Rating. La lista deve essere ordinata dal rating 1 al rating 5.  */\n  inputs: string[];\n  /** Il campo \"label\" è impostato di default su \"Valuta ${n} stelle su 5\", ma può essere personalizzato con questa funzione che riceve il numero input come argomento `function (n: number) => string`. */\n  labelTemplate?: (value: 1 | 2 | 3 | 4 | 5) => string;\n  /** Da utilizzare in caso legenda principale del Rating. Passare una componente React da mostrare come legenda (all'interno del tag `<legend>`). È possibile mostrare la leggenda solo ai dispositivi screen reader */\n  legend?: ReactNode | { content: ReactNode; srOnly: boolean };\n  /** Parametro name da dare all'input */\n  name: string;\n  /** Classi aggiuntive da usare per il componente wrapper del Rating */\n  wrapperClassName?: string;\n  /** Classi aggiuntive da usare per ciascun elemento all'interno del componente Rating */\n  className?: string;\n  /** Callback chiamata ad ogni cambio di valore di rating. Il nuovo valore ed il name verranno passati: `function (n, name) => void` */\n  onChangeRating?: (value: 1 | 2 | 3 | 4 | 5 | number, name: string) => void;\n  /** Rende il componente read-only */\n  readOnly?: boolean;\n  /** Il valore corrente del componente: deve essere compreso tra 1 e 5 */\n  value?: 1 | 2 | 3 | 4 | 5 | number;\n}\n\nexport const isCustomLegendObject = (\n  legend: ReactNode | { content: ReactNode; srOnly: boolean }\n): legend is { content: ReactNode; srOnly: boolean } => {\n  return legend != null && typeof legend === 'object' && 'content' in legend;\n};\n\nexport const Rating: FC<RatingProps> = ({\n  className,\n  inputs,\n  legend,\n  name,\n  readOnly,\n  value,\n  wrapperClassName,\n  labelTemplate = (value: 1 | 2 | 3 | 4 | 5) => `Valuta ${value} stelle su 5`,\n  onChangeRating = noop,\n  ...attributes\n}) => {\n  // Input data\n  // On the DOM we have to go from 5 to 1\n  const safeInputs = (inputs || []).reverse();\n\n  // Fields\n  const labelFn = labelTemplate;\n\n  const onChange = readOnly ? noop : onChangeRating;\n\n  const wrapperClasses = classNames(wrapperClassName, {\n    'rating-read-only': readOnly,\n    'rating-label': legend\n  });\n  const fieldClasses = classNames(className);\n  const extraFieldAttrs = readOnly ? { 'aria-hidden': true } : {};\n\n  // Legend\n  const isLegendString = typeof legend === 'string';\n\n  let legendClass: string = '';\n  let legendText: ReactNode = legend as string;\n\n  if (isCustomLegendObject(legend)) {\n    legendClass = classNames({\n      'sr-only': legend.srOnly\n    });\n    legendText = legend.content;\n  }\n\n  const legendContent =\n    isCustomLegendObject(legend) || isLegendString ? (\n      <legend className={legendClass}>{legendText}</legend>\n    ) : (\n      legend\n    );\n\n  return (\n    <FormGroup\n      cssModule={{ 'form-group': 'rating' }}\n      tag='fieldset'\n      className={wrapperClasses}\n      {...attributes}\n    >\n      {legend && legendContent}\n      {safeInputs.map((id, i) => {\n        const currentValue = (5 - i) as 1 | 2 | 3 | 4 | 5;\n\n        return (\n          <Fragment key={id}>\n            <Input\n              type='radio'\n              id={id}\n              name={name}\n              value={String(currentValue)}\n              cssModule={{ 'form-control': ' ' }}\n              className={fieldClasses}\n              onChange={() => onChange(currentValue, name)}\n              checked={value === currentValue}\n              disabled={readOnly}\n              {...extraFieldAttrs}\n            />\n            <Label className='full' for={id}>\n              <Icon icon='it-star-full' size='sm' />\n              <span className='sr-only'>{labelFn(currentValue)}</span>\n            </Label>\n          </Fragment>\n        );\n      })}\n    </FormGroup>\n  );\n};\n","import React, { Component, Fragment, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport { Input } from '../Input/Input';\n\nexport interface PasswordInputProps extends HTMLAttributes<HTMLInputElement> {\n  type: 'password' | HTMLInputElement['type'];\n}\n\ninterface PasswordInputState {\n  showPassword: boolean;\n}\n\nexport class PasswordInput extends Component<\n  PasswordInputProps,\n  PasswordInputState\n> {\n  state = {\n    showPassword: false\n  };\n\n  onPasswordToggle = () => {\n    this.setState((prevState) => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  render() {\n    const { showPassword } = this.state;\n    const { type = 'password', ...rest } = this.props;\n\n    const className = classNames('btn-eye', {\n      'eye-off': showPassword,\n      'eye-on': !showPassword\n    });\n\n    return (\n      <Fragment>\n        <span className={className} onClick={this.onPasswordToggle} />\n        <Input {...rest} type={showPassword ? 'text' : (type as 'password')} />\n      </Fragment>\n    );\n  }\n}\n","import { Component } from 'react';\n\nexport interface FontLoaderProps {\n  /**\n   * Una lista di font aggiuntivi da caricare.\n   * I font di default Titillium Web, Lora and Roboto Mono vengono aggiunti a questa lista e caricati sempre.\n   * */\n  fonts?: string[];\n}\n\nconst defaultFonts = [\n  'Titillium Web:300,400,600,700:latin-ext',\n  'Lora:400,700:latin-ext',\n  'Roboto Mono:400,700:latin-ext'\n];\n\nexport class FontLoader extends Component<FontLoaderProps> {\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      const WebFont = require('webfontloader');\n      WebFont.load({\n        custom: {\n          families: [...defaultFonts, ...(this.props.fonts || [])]\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n","import React, { HTMLAttributes, ReactNode, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { noop } from '../utils';\nimport { Input, InputProps } from './Input';\nimport { Icon } from '../Icon/Icon';\nimport { getClasses, getInfoTextControlClass } from './utils';\n\nexport const addTime = (value: string, maxValue: number): string => {\n  const currTime = Number(value);\n  return currTime >= maxValue ? value : (currTime + 1).toString();\n};\n\nexport const subtractTime = (value: string, minValue: number): string => {\n  const currTime = Number(value);\n  return currTime <= minValue ? value : (currTime - 1).toString();\n};\n\nexport const formatTime = (value: number | string): string =>\n  `0${value}`.substr(-2);\n\ninterface TimeInputContainerProps extends HTMLAttributes<HTMLElement> {\n  wrapperClass: string;\n  infoTextClass: string;\n  label: string | ReactNode | undefined;\n  infoText: string | undefined;\n  invalid: boolean;\n  id: string;\n  button: ReactNode;\n  children: ReactNode;\n}\n\nconst TimeInputContainer = ({\n  wrapperClass,\n  children,\n  label,\n  id,\n  infoText,\n  button,\n  infoTextClass,\n  invalid\n}: TimeInputContainerProps) => {\n  const infoId = id ? `${id}Description` : undefined;\n  const activeClass = 'active';\n\n  return (\n    <div className={classNames(wrapperClass)}>\n      <div className='input-group'>\n        {children}\n        <label\n          htmlFor={id}\n          className={classNames(activeClass, { 'error-label': invalid })}\n        >\n          {label}\n        </label>\n        <small id={infoId} className={infoTextClass}>\n          {infoText}\n        </small>\n        <div className='input-group-append'>{button}</div>\n      </div>\n    </div>\n  );\n};\n\ntype UnusedProps = 'plaintext' | 'onBlur' | 'value' | 'type';\n\nexport interface TimeInputProps extends Omit<InputProps, UnusedProps> {\n  id: string;\n  /** Etichetta della sezione per il controllo delle ore e dei minuti - non visibile a schermo */\n  controlsLabel?: string;\n  /** Determina l'uso del tema scuro per la sezione di selezione di ore e minuti */\n  dark?: boolean;\n  /** Il valore del campo */\n  value?: string;\n  /** Funzione callback */\n  onBlur?: (time: string) => void;\n  /** Testo esplicativo per dispositivi screen reader */\n  srText?: string;\n  /** Etichetta del campo per la selezione delle ore -  non visibile a schermo */\n  hoursLabel?: string;\n  /** Etichetta del campo per la selezione dei minuti -  non visibile a schermo */\n  minutesLabel?: string;\n  /** Etichetta del bottone per incrementare le ore -  non visibile a schermo */\n  increaseHoursLabel?: string;\n  /** Etichetta del bottone per incrementare i minuti -  non visibile a schermo */\n  increaseMinutesLabel?: string;\n  /** Etichetta del bottone per diminuire le ore -  non visibile a schermo */\n  decreaseHoursLabel?: string;\n  /** Etichetta del bottone per diminuire i minuti -  non visibile a schermo */\n  decreaseMinutesLabel?: string;\n}\n\nexport const TimeInput = ({\n  dark = false,\n  onBlur = noop,\n  label,\n  controlsLabel,\n  invalid = false,\n  value = '',\n  id,\n  placeholder,\n  srText,\n  hoursLabel,\n  minutesLabel,\n  increaseHoursLabel,\n  increaseMinutesLabel,\n  decreaseHoursLabel,\n  decreaseMinutesLabel,\n  ...attributes\n}: TimeInputProps) => {\n  const [initialHours, initialMinutes] = value.split(':');\n  const [isOpen, setIsOpen] = useState(false);\n  const [hours, setHours] = useState(initialHours || '00');\n  const [minutes, setMinutes] = useState(initialMinutes || '00');\n  const [time, setTime] = useState(\n    initialHours && initialMinutes ? `${initialHours}:${initialMinutes}` : ''\n  );\n  const [isFocused, toggleFocus] = useState(false);\n\n  const button = (\n    <button\n      className='btn-time'\n      onClick={() => {\n        setIsOpen(!isOpen);\n        if (isOpen) onBlur(time);\n      }}\n    >\n      <Icon icon='it-clock' />\n    </button>\n  );\n\n  const onHoursChange = (value: string) => {\n    const formattedValue = formatTime(value);\n    setHours(isNaN(Number(formattedValue)) ? `00` : formattedValue);\n    setTime(`${formattedValue}:${minutes}`);\n  };\n\n  const onMinutesChange = (value: string) => {\n    const formattedValue = formatTime(value);\n    setMinutes(isNaN(Number(formattedValue)) ? `00` : formattedValue);\n    setTime(`${hours}:${formattedValue}`);\n  };\n\n  const onTimeChange = (value: string) => {\n    const [hours, minutes] = value.split(':');\n    onHoursChange(hours?.trim());\n    onMinutesChange(minutes?.trim());\n    setTime(value);\n  };\n\n  const infoTextControlClass = getInfoTextControlClass(\n    attributes,\n    attributes.cssModule\n  );\n\n  const { infoTextClass, wrapperClass } = getClasses(\n    attributes.className,\n    {\n      ...attributes,\n      normalized: Boolean(attributes.normalized),\n      inputPassword: false,\n      formControlClass: 'form-control',\n      infoTextControlClass,\n      isFocused,\n      originalWrapperClass:\n        attributes.wrapperClassName || attributes.wrapperClass\n    },\n    attributes.cssModule\n  );\n\n  return (\n    <div\n      className={classNames('it-timepicker-wrapper', {\n        'theme-dark': dark\n      })}\n    >\n      <section className='time-spinner'>\n        <div className='error_container' role='alert' aria-atomic='true'></div>\n        <fieldset>\n          <legend>\n            <span className='sr-only'>{srText}</span>\n          </legend>\n          <div>\n            <div className='calendar-input-container'>\n              <TimeInputContainer\n                wrapperClass={wrapperClass}\n                infoTextClass={infoTextClass}\n                label={label}\n                infoText={attributes.infoText}\n                id={id}\n                button={button}\n                invalid={invalid}\n              >\n                <Input\n                  {...attributes}\n                  type='text'\n                  label={label}\n                  id={id}\n                  placeholder={placeholder}\n                  value={time}\n                  onFocus={() => {\n                    setIsOpen(false);\n                    toggleFocus(true);\n                  }}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    onTimeChange(e.target.value)\n                  }\n                  invalid={invalid}\n                  onBlur={() => {\n                    toggleFocus(false);\n                    onBlur(time);\n                  }}\n                  noWrapper\n                />\n              </TimeInputContainer>\n            </div>\n          </div>\n        </fieldset>\n        <div\n          className='spinner-control'\n          aria-hidden='true'\n          role='region'\n          aria-label={controlsLabel}\n          tabIndex={-1}\n          style={{ display: isOpen ? 'block' : 'none' }}\n        >\n          <div className='spinner-hour spinner'>\n            <Input\n              className='spinnerHour form-control'\n              aria-label={hoursLabel}\n              type='number'\n              value={hours}\n              role='spinbutton'\n              maxLength={2}\n              aria-valuenow={Number(hours)}\n              aria-valuemax={23}\n              aria-valuemin={0}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                onHoursChange(e.target.value)\n              }\n            />\n            <div className='button-wrapper'>\n              <button\n                className='button-hour btnHourUp'\n                aria-label={increaseHoursLabel}\n                aria-hidden='true'\n                tabIndex={-1}\n                onClick={() => onHoursChange(addTime(hours, 23))}\n              >\n                <span className='icon-up'></span>\n              </button>\n              <button\n                className='button-hour btnHourDown'\n                aria-label={decreaseHoursLabel}\n                aria-hidden='true'\n                tabIndex={-1}\n                onClick={() => onHoursChange(subtractTime(hours, 0))}\n              >\n                <span className='icon-down'></span>\n              </button>\n            </div>\n          </div>\n          <div className='spinner-min spinner'>\n            <Input\n              className='spinnerMin form-control'\n              aria-label={minutesLabel}\n              type='number'\n              value={minutes}\n              role='spinbutton'\n              maxLength={2}\n              aria-valuenow={Number(minutes)}\n              aria-valuemax={59}\n              aria-valuemin={0}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                onMinutesChange(e.target.value)\n              }\n            />\n            <div className='button-wrapper'>\n              <button\n                className='btnMinUp button-minute'\n                aria-label={increaseMinutesLabel}\n                aria-hidden='true'\n                tabIndex={-1}\n                onClick={() => onMinutesChange(addTime(minutes, 59))}\n              >\n                <span className='icon-up'></span>\n              </button>\n              <button\n                className='btnMinDown button-minute'\n                aria-label={decreaseMinutesLabel}\n                aria-hidden='true'\n                tabIndex={-1}\n                onClick={() => onMinutesChange(subtractTime(minutes, 0))}\n              >\n                <span className='icon-down'></span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","const black = '#000';\nconst primary = '#06c';\nconst primaryDark = '#435a70';\nconst primaryDarker = '#17324d';\n\n// Types here depend of react-select internal emotion dep + more parametric stuff\n// @TODO: fix it this way for now, will review later on\nexport const styles = {\n  container: (provided: any) => ({ ...provided, height: '2.5rem' }),\n  control: (provided: any) => ({\n    ...provided,\n    height: '2.5rem',\n    borderRadius: '0',\n    borderLeft: 'none',\n    borderRight: 'none',\n    borderTop: 'none',\n    borderBottom: `solid ${primaryDark} 1px`,\n    boxShadow: 'none',\n    '&:hover': { borderBottom: `solid ${primaryDark} 1.25px` } // border style on hover\n  }),\n  dropdownIndicator: (provided: any) => ({\n    ...provided,\n    fill: primaryDark\n  }),\n  option: (provided: any, { isDisabled, isFocused, isSelected }: any) => ({\n    ...provided,\n    background: 'white',\n    textDecoration: isFocused || isSelected ? 'underline' : 'none',\n    color: isSelected ? primaryDarker : primary,\n    cursor: isDisabled ? 'not-allowed' : 'pointer'\n  }),\n  placeholder: (provided: any) => ({\n    ...provided,\n    fill: primaryDark\n  }),\n  singleValue: (provided: any) => ({\n    ...provided,\n    color: black,\n    fontWeight: 'bold'\n  }),\n  valueContainer: (provided: any) => ({\n    ...provided,\n    height: '2.5rem'\n  })\n};\n","import React, { FC, ReactElement } from 'react';\nimport SelectBase, { components } from 'react-select';\nimport { Icon } from '../Icon/Icon';\nimport type {\n  Props as SelectBaseProps,\n  IndicatorProps,\n  OptionTypeBase,\n  GroupTypeBase,\n  OptionProps\n} from 'react-select';\nimport { styles } from './shared';\n\nexport interface SelectProps<\n  OptionType extends OptionTypeBase,\n  IsMulti extends boolean,\n  GroupType extends GroupTypeBase<OptionType>\n> extends SelectBaseProps<OptionType, IsMulti, GroupType> {\n  icon?: boolean;\n  clearText?: string;\n}\n\nconst DropdownIndicator = <\n  OptionType extends OptionTypeBase,\n  IsMulti extends boolean,\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\n>(\n  props: IndicatorProps<OptionType, IsMulti, GroupType>\n) => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <Icon icon='it-arrow-down-triangle' aria-hidden />\n    </components.DropdownIndicator>\n  );\n};\n\nconst Option = <\n  OptionType extends OptionTypeBase,\n  IsMulti extends boolean,\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\n>(\n  props: OptionProps<OptionType, IsMulti, GroupType>\n) => {\n  return (\n    <div className='select-pill text-primary'>\n      <components.Option {...props} />\n    </div>\n  );\n};\n\nconst CustomClearText: FC<{ clearText: string }> = ({ clearText }) => (\n  <>{clearText}</>\n);\n\nexport const Select = <\n  OptionType extends OptionTypeBase = { label: string; value: string },\n  IsMulti extends boolean = false,\n  GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\n>({\n  clearText = 'Annulla',\n  icon = false,\n  ...props\n}: SelectProps<OptionType, IsMulti, GroupType>): ReactElement<\n  SelectProps<OptionType, IsMulti, GroupType>\n> => {\n  // @TODO: move it outside when migrating to hooks\n  const ClearIndicator = <\n    OptionType extends OptionTypeBase,\n    IsMulti extends boolean,\n    GroupType extends GroupTypeBase<OptionType> = GroupTypeBase<OptionType>\n  >(\n    clearIndicatorProps: IndicatorProps<OptionType, IsMulti, GroupType>\n  ) => {\n    const {\n      children = <CustomClearText clearText={clearText} />,\n      innerProps: { ref, ...restInnerProps }\n    } = clearIndicatorProps;\n    return (\n      <div className='select-pill text-primary' {...restInnerProps} ref={ref}>\n        <div style={{ padding: '0px 5px' }}>{children}</div>\n      </div>\n    );\n  };\n\n  const selectComponents = {\n    ...props.components,\n    Option,\n    DropdownIndicator,\n    IndicatorSeparator: null\n  };\n\n  if (props.isClearable) {\n    selectComponents.ClearIndicator = ClearIndicator;\n  }\n  return (\n    <SelectBase {...props} components={selectComponents} styles={styles} />\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon/Icon';\n\nconst variants = {\n  confirmed: 'confirmed',\n  active: 'active',\n  done: 'done',\n  mobile: 'steppers-index',\n  // @deprecated\n  'steppers-index': 'steppers-index'\n} as const;\n\nexport interface StepperHeaderElementProps\n  extends HTMLAttributes<HTMLLIElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente StepperHeader */\n  className?: string;\n  /**\n   * Il tipo di step:\n   * * confirmed (confermato),\n   * * active (attivo - su mobile viene mostrato solo questo)\n   * * done (completato)\n   * * mobile (visibile solo su mobile, usato per mostrare lo stato attuale di progresso)\n   * * steppers-index (deprecato) usare mobile\n   * */\n  variant?: keyof typeof variants;\n  /** Icona da mostrare alla destra dell'etichetta dello step */\n  appendIcon?: string;\n  /** Icona da mostrare alla sinistra dell'etichetta dello step */\n  prependIcon?: string;\n  /** Utilizzare questo attributo per elementi aggiuntivi da mostrare su dispositivi mobile per lo step attivo */\n  stepperNumber?: ReactNode;\n  /** Nasconde il bordo inferiore azzurro per lo step */\n  noLine?: boolean;\n  /** @deprecated Usare `appendIcon` */\n  icon?: string;\n  /** @deprecated Usare `prependIcon` */\n  iconName?: string;\n}\n\nexport const StepperHeaderElement: FC<StepperHeaderElementProps> = ({\n  tag = 'li',\n  variant,\n  appendIcon,\n  prependIcon,\n  icon,\n  iconName,\n  noLine,\n  stepperNumber,\n  children,\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames(\n    variant ? variants[variant] : '',\n    className,\n    {\n      'no-line': noLine\n    }\n  );\n  const iconClass = classNames('icon', 'steppers-success');\n  const spanClass = classNames('steppers-number');\n\n  const iconToAppend = appendIcon || icon;\n  const iconToPepend = prependIcon || iconName;\n  return (\n    <Tag {...attributes} className={wrapperClasses}>\n      {iconToPepend && <Icon icon={iconToPepend} />}\n      {stepperNumber && <span className={spanClass}>{stepperNumber}</span>}\n      {children}\n      {iconToAppend && <Icon icon={iconToAppend} className={iconClass} />}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface StepperContentProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Abilita il tema scuro per il componente StepperContent */\n  dark?: boolean;\n}\n\nconst contentStyleLight = {\n  height: '400px',\n  border: '2px dashed #eee',\n  background: '#fafafa',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: '#333'\n};\n\nconst contentStyleDark = {\n  height: '400px',\n  border: '2px dashed #eee',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: '#EEE',\n  borderColor: '#aaa',\n  background: '#17324d',\n  opacity: 0.5\n};\n\nexport const StepperContent: FC<StepperContentProps> = ({\n  tag = 'div',\n  className,\n  dark,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames('steppers-content', classNames);\n  return (\n    <Tag\n      {...attributes}\n      className={classes}\n      style={(dark && contentStyleDark) || contentStyleLight}\n      aria-live='polite'\n    />\n  );\n};\n","import { createContext, useContext } from 'react';\nimport { NotificationCommonProps } from './types';\n\nexport const PositionContext = createContext<NotificationCommonProps['fix']>(\n  undefined\n);\n\nexport function usePosition() {\n  const context = useContext(PositionContext);\n  return context;\n}\n","import React, { CSSProperties, ReactChild } from 'react';\nimport { Button } from '../Button/Button';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon/Icon';\nimport { usePosition } from './usePosition';\nimport { NotificationCommonProps } from './types';\n\nexport interface NotificationToastProps {\n  /** Indica quale icona affiancare al titolo. */\n  icon?: string;\n  /** Lo stato corrente della notifica (modifica il colore delle icone e bordo) */\n  state?: 'success' | 'error' | 'info' | 'warning';\n  /** Il titolo della notifica */\n  title?: string;\n}\n\ntype NotificationElementProps = {\n  closeToast?: () => void;\n  toastProps?: any;\n  title: string;\n  body?: ReactChild;\n  options: NotificationOptions;\n};\n\nexport const getBorderStyleFix = (fix: NotificationCommonProps['fix']) => {\n  const borderReset = ['top', 'bottom', 'right', 'left']\n    .filter((curPosition) =>\n      fix === 'left' ? curPosition !== 'right' : curPosition !== 'left'\n    )\n    .map(\n      (borderPosition) =>\n        `border${\n          borderPosition[0].toUpperCase() + borderPosition.substring(1)\n        }` as 'borderTop' | 'borderBottom' | 'borderLeft' | 'borderRight'\n    );\n\n  const customStyle: CSSProperties = {};\n  for (const borderPos of borderReset) {\n    customStyle[borderPos] = 'none';\n  }\n  return customStyle;\n};\n\nexport type NotificationOptions = NotificationCommonProps &\n  Pick<NotificationToastProps, 'icon' | 'state'> & {\n    /* Quando abilitato mostra un pulsante per la chiusura del toast prima della chiusura naturale. Default: `false`. */\n    dismissable?: boolean;\n    /* Una funzione invocata all'apertura della notifica */\n    onOpen?: <T = NotificationElementProps>(props: T) => void;\n    /* Una funziona invocata alla chiusura nella notifica */\n    onClose?: <T = NotificationElementProps>(props: T) => void;\n  };\n\nfunction pickIcon(state: NotificationToastProps['state']) {\n  switch (state) {\n    case 'error':\n      return 'it-close-circle';\n    case 'info':\n      return 'it-info-circle';\n    case 'warning':\n      return 'it-error';\n    case 'success':\n      return 'it-check-circle';\n    default:\n      return undefined;\n  }\n}\n\nfunction NotificationElement({\n  closeToast,\n  toastProps,\n  title,\n  body,\n  options\n}: NotificationElementProps) {\n  const globalFix = usePosition();\n  const { icon: userIcon, state, fix: localFix, dismissable } = options;\n  const fixPosition =\n    localFix == null && globalFix ? globalFix : localFix || globalFix;\n  const { autoClose, style } = toastProps;\n  const content = typeof body === 'string' ? <p>{body}</p> : body;\n  const icon = userIcon || pickIcon(state);\n\n  const borderFixes = getBorderStyleFix(fixPosition);\n\n  const wrapperClass = classNames('notification', state, {\n    [`${fixPosition}-fix`]: fixPosition,\n    'with-icon': icon,\n    dismissable: dismissable || !autoClose\n  });\n\n  // Need to override some toast styling here\n  const customStyle: CSSProperties = {\n    ...style,\n    ...borderFixes,\n    // force a display as the notification class has a \"display: none\" set\n    display: 'block'\n  };\n\n  return (\n    <div className={wrapperClass} style={customStyle}>\n      <h5>\n        {title}\n        {icon ? <Icon icon={icon} /> : null}\n      </h5>\n      {content}\n      {(!autoClose || dismissable) && (\n        <Button className='notification-close' onClick={closeToast}>\n          <Icon icon='it-close' />\n          <span className='sr-only'>Chiudi notifica: {title}</span>\n        </Button>\n      )}\n    </div>\n  );\n}\n\n/**\n * Internal use only. Exported for documentation purposes.\n * @internal\n */\nexport const createNotification = (\n  title: string,\n  body: ReactChild | undefined,\n  options: NotificationOptions,\n  closeToast?: () => void,\n  toastProps?: any\n) => (\n  <NotificationElement\n    title={title}\n    body={body}\n    options={options}\n    closeToast={closeToast}\n    toastProps={toastProps}\n  />\n);\n","import React, { CSSProperties, FC, useEffect } from 'react';\nimport { ToastProps, useToast, cssTransition } from 'react-toastify';\nimport { NotificationToastProps } from './NotificationContent';\nimport { NotificationCommonProps } from './types';\n\nexport type NotificationProps = Omit<ToastProps, 'transition'> &\n  NotificationCommonProps &\n  NotificationToastProps;\n\nconst dummyTransition = cssTransition({ enter: '', exit: '' });\n\nexport const Notification: FC<NotificationProps> = (props) => {\n  const { toastRef, eventHandlers } = useToast({\n    ...props,\n    transition: dummyTransition\n  });\n  const {\n    children,\n    autoClose,\n    onClick,\n    role,\n    toastId,\n    deleteToast,\n    closeToast,\n    isIn\n  } = props;\n\n  const customStyle: CSSProperties = {\n    display: isIn ? 'block' : 'none'\n  };\n\n  useEffect(() => {\n    if (!isIn) deleteToast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isIn]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout | number;\n    if (autoClose) {\n      timer = setTimeout(() => closeToast(), autoClose);\n    }\n    return () => {\n      if (timer != null) {\n        clearTimeout(Number(timer));\n      }\n    };\n  }, [autoClose, closeToast]);\n  return (\n    <div\n      id={toastId as string}\n      onClick={onClick}\n      {...eventHandlers}\n      style={customStyle}\n      ref={toastRef}\n      {...(isIn && { role: role })}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { CSSProperties } from 'react';\nimport { cssTransition, useToastContainer } from 'react-toastify';\nimport { Notification } from './Notification';\nimport { getBorderStyleFix } from './NotificationContent';\nimport { NotificationCommonProps } from './types';\nimport { PositionContext } from './usePosition';\n\nconst KitTransition = cssTransition({\n  enter: `d-block`,\n  exit: `d-none`,\n  appendPosition: false\n});\n\nexport interface NotificationManagerProps extends NotificationCommonProps {\n  /* Stili inline da applicare al container */\n  style?: CSSProperties;\n}\n\nexport const NotificationManager = (props: NotificationManagerProps) => {\n  const customStyle: CSSProperties = {\n    ...props.style,\n    ...getBorderStyleFix(props.fix)\n  };\n\n  const hookProps = {\n    autoClose: props.duration ?? 6000,\n    closeOnClick: props.closeOnClick ?? true,\n    hideProgressBar: true,\n    transition: KitTransition,\n    rtl: false,\n    pauseOnHover: true,\n    pauseOnFocusLoss: true,\n    newestOnTop: false, // TODO: sort this out\n    draggable: false,\n    role: 'alert',\n    style: customStyle,\n    enableMultiContainer: props.containerId != null // enable multi container when an explicit id is passed\n  };\n\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    hookProps\n  );\n\n  const { containerId, style, fix } = props;\n\n  return (\n    <PositionContext.Provider value={fix}>\n      <div ref={containerRef} id={containerId as string} style={style}>\n        {getToastToRender((_, toastList) => {\n          return toastList.map(({ content, props: toastProps }) => {\n            return (\n              <Notification\n                {...toastProps}\n                isIn={isToastActive(toastProps.toastId)}\n                key={`notification-${toastProps.key}`}\n              >\n                {content}\n              </Notification>\n            );\n          });\n        })}\n      </div>\n    </PositionContext.Provider>\n  );\n};\n","import { ReactChild } from 'react';\nimport { toast } from 'react-toastify';\nimport { createNotification } from './NotificationContent';\nimport type { NotificationOptions } from './NotificationContent';\nimport { NotificationId } from './types';\n\nexport function notify(\n  title: string,\n  options?: NotificationOptions\n): NotificationId;\n\nexport function notify(\n  title: string,\n  body: ReactChild,\n  options?: NotificationOptions\n): NotificationId;\n\nexport function notify(\n  title: string,\n  bodyOrOptions?: ReactChild | NotificationOptions,\n  options?: NotificationOptions\n): NotificationId {\n  let body: ReactChild | undefined = isReactChild(bodyOrOptions)\n    ? bodyOrOptions\n    : undefined;\n  const safeOptions = isReactChild(bodyOrOptions)\n    ? { ...options }\n    : bodyOrOptions || {};\n  const NotificationContent = createNotification(title, body, safeOptions);\n  const internalOptions = {\n    ...safeOptions,\n    autoClose: safeOptions.duration\n  };\n  return toast(NotificationContent, internalOptions) as NotificationId;\n}\n\nfunction isReactChild(\n  el: ReactChild | NotificationOptions | undefined\n): el is ReactChild {\n  return (\n    el != null &&\n    (typeof el === 'string' || typeof el === 'number' || 'type' in el)\n  );\n}\n\nnotify.dismiss = (id?: NotificationId) => toast.dismiss(id);\n","import React, { ElementType, FC, HTMLAttributes, createContext } from 'react';\nimport classnames from 'classnames';\n\nexport const SizeContext = createContext<ToolbarProps['size']>(undefined);\n\nexport interface ToolbarProps extends HTMLAttributes<HTMLElement> {\n  tag?: ElementType;\n  size?: 'large' | 'medium' | 'small';\n}\n\nexport const Toolbar: FC<ToolbarProps> = ({\n  tag = 'nav',\n  size,\n  children,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classnames('toolbar', {\n    [`toolbar-${size}`]: size && size !== 'large'\n  });\n  return (\n    <SizeContext.Provider value={size || 'large'}>\n      <Tag className={classes} {...attributes}>\n        <ul>{children}</ul>\n      </Tag>\n    </SizeContext.Provider>\n  );\n};\n","import React, {\n  ElementType,\n  FC,\n  HTMLAttributes,\n  MouseEvent,\n  useContext\n} from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon/Icon';\nimport { SizeContext, ToolbarProps } from './Toolbar';\n\nexport interface ToolbarItemProps extends HTMLAttributes<HTMLElement> {\n  tag?: ElementType;\n  active?: boolean;\n  disabled?: boolean;\n  url?: string;\n  label?: string;\n  iconName: string;\n  isIconSmall?: boolean;\n  alert?: boolean;\n  badge?: number;\n  onLinkClick?: (event: MouseEvent<HTMLAnchorElement>) => void;\n}\n\nconst disabledMessage = ' elemento disabilitato';\n\nfunction ToolbarItemLabel({\n  label,\n  size,\n  disabled\n}: {\n  label: ToolbarItemProps['label'];\n  size: ToolbarProps['size'];\n  disabled: ToolbarItemProps['disabled'];\n}) {\n  const showSrText = size && size !== 'large';\n  if (disabled) {\n    if (!label || showSrText) {\n      return <span className='sr-only'>{disabledMessage}</span>;\n    }\n    return (\n      <>\n        <span className='toolbar-label'>{label}</span>\n        <span className='sr-only'>{disabledMessage}</span>\n      </>\n    );\n  }\n  if (!label) {\n    return null;\n  }\n  return showSrText ? (\n    <span className='sr-only'>{label}</span>\n  ) : (\n    <span className='toolbar-label'>{label}</span>\n  );\n}\n\nexport const ToolbarItem: FC<ToolbarItemProps> = ({\n  active = false,\n  badge,\n  url,\n  iconName,\n  label,\n  tag = 'a',\n  disabled,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const size = useContext(SizeContext);\n  const activeClass = classNames({ active, disabled });\n  const badgeWrapper = Boolean(badge) && (\n    <div className='badge-wrapper'>\n      <span className='toolbar-badge'>{badge}</span>\n    </div>\n  );\n\n  const ariaAttributes = {\n    ...(disabled && { 'aria-disabled': true })\n  };\n\n  return (\n    <li>\n      <Tag\n        href={url || '#'}\n        className={activeClass}\n        {...attributes}\n        {...ariaAttributes}\n      >\n        {badgeWrapper}\n        <Icon icon={iconName} size={size === 'small' ? 'sm' : ''} />\n        <ToolbarItemLabel label={label} size={size} disabled={disabled} />\n      </Tag>\n    </li>\n  );\n};\n","import React, { ElementType, FC } from 'react';\nimport classNames from 'classnames';\n\nexport interface AccordionProps {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Utilizzare questo attributo per ottenere header con sfondo di colore primario quando questi è attivo o all’hover. */\n  background?: 'active' | 'hover';\n  /** Utilizzare questo attributo per mostrare, mediante un'icona a sinistra, lo stato di apertura */\n  iconLeft?: boolean;\n}\n\nexport const Accordion: FC<AccordionProps> = ({\n  tag = 'div',\n  className,\n  background,\n  iconLeft = false,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames('collapse-div', className, {\n    'collapse-background-active': background === 'active',\n    'collapse-background-hover': background === 'hover',\n    'collapse-left-icon': iconLeft\n  });\n\n  return <Tag {...attributes} className={classes} />;\n};\n","import React, { FC, ReactNode, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AccordionHeaderProps {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AccordionHeader */\n  className?: string;\n  /** Utilizzare questo attributo per indicare se l'elemento è attivo o no */\n  active?: boolean;\n  /** Questa funzione verrà chiamata quando avviene un click sul componente AccordionHeader */\n  onToggle?: () => void;\n  /** Contenuto aggiuntivo all'interno del bottone dell'AccordionHeader */\n  append?: ReactNode;\n}\n\nexport const AccordionHeader: FC<AccordionHeaderProps> = ({\n  className,\n  tag = 'button',\n  active = false,\n  append,\n  onToggle,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const toggleClasses = classNames(className, {\n    collapsed: active\n  });\n\n  return (\n    <div className='collapse-header'>\n      <Tag\n        data-toggle='collapse'\n        aria-expanded={active ? 'true' : 'false'}\n        className={toggleClasses}\n        onClick={onToggle}\n        {...attributes}\n      />\n      {append}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarContainerProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarContainer */\n  className?: string;\n}\n\nexport const AvatarContainer: FC<AvatarContainerProps> = ({\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames(\n    'd-flex align-items-center justify-content-around flex-wrap flex-sm-nowrap',\n    className\n  );\n  return <Tag {...attributes} className={wrapperClasses} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarExtraTextProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarExtraText */\n  className?: string;\n}\n\nexport const AvatarExtraText: FC<AvatarExtraTextProps> = ({\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames('extra-text', className);\n  return <Tag className={wrapperClass} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarGroupContainerProps\n  extends HTMLAttributes<HTMLUListElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente interno AvatarGroupContainer */\n  className?: string;\n  /** Classi aggiuntive da usare per il componente più esterno di AvatarGroupContainer */\n  wrapperClassName?: string;\n}\n\nexport const AvatarGroupContainer: FC<AvatarGroupContainerProps> = ({\n  className,\n  tag = 'ul',\n  wrapperClassName,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames('avatar-group-stacked', wrapperClassName);\n  return <Tag {...attributes} className={wrapperClasses}></Tag>;\n};\n","import React, { FC, HTMLAttributes, ElementType, Ref } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarIconProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * Utilizzarlo in caso di utilizzo di componenti personalizzati, come ad esempio\n   * un link gestito da handler onClick.\n   * */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarIcon */\n  className?: string;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'primary' | 'secondary' | 'green' | 'orange' | 'red' | string;\n  /** Le dimensioni dell'icona definite in Bootstrap Italia */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  /**\n   * Quando definito rende l'icona un link cliccabile. Nota: se definito ignora la prop Tag.\n   * */\n  href?: string;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement | HTMLAnchorElement>;\n}\n\nexport const AvatarIcon: FC<AvatarIconProps> = ({\n  className,\n  tag = 'div',\n  size = 'md',\n  href,\n  color,\n  innerRef,\n  children,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const typeClass = classNames('avatar', {\n    [`size-${size}`]: size,\n    [`avatar-${color}`]: color\n  });\n  if (href) {\n    return (\n      <a\n        href={href}\n        {...attributes}\n        className={typeClass}\n        ref={innerRef as Ref<HTMLAnchorElement>}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <Tag {...attributes} className={typeClass}>\n      {children}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarPresenceProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarPresence */\n  className?: string;\n  /** Utilizzare questo attributo per indicare il tipo di presenza dell'utente. */\n  presence: 'active' | 'busy' | 'hidden' | string;\n}\n\nexport const AvatarPresence: FC<AvatarPresenceProps> = ({\n  className,\n  tag = 'div',\n  presence,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const typeClass = classNames('avatar-presence', {\n    presence\n  });\n  return <Tag {...attributes} className={typeClass} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarStatusProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarStatus */\n  className?: string;\n  /** Utilizzare questo attributo per indicare il tipo di stato dell'utente. */\n  status: 'approved' | 'declined' | 'notify' | string;\n}\n\nexport const AvatarStatus: FC<AvatarStatusProps> = ({\n  className,\n  tag = 'div',\n  status,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const typeClass = classNames('avatar-status', {\n    status\n  });\n  return <Tag {...attributes} className={typeClass} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface AvatarWrapperProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente AvatarStatus */\n  className?: string;\n  /** Utilizzare questo attributo qualora si volesse utilizzare un componente AvatarExtraText all'interno dell'Avatar. */\n  extra?: 'text' | string;\n}\n\nexport const AvatarWrapper: FC<AvatarWrapperProps> = ({\n  className,\n  tag = 'div',\n  extra,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames('avatar-wrapper', className, {\n    [`avatar-extra-${extra}`]: extra\n  });\n  return <Tag {...attributes} className={wrapperClass} />;\n};\n","import React, {\n  FC,\n  HTMLAttributes,\n  ElementType,\n  Ref,\n  ReactChild,\n  AnchorHTMLAttributes\n} from 'react';\nimport { Badge as BadgeReact, CSSModule } from 'reactstrap';\n\nexport type BadgeProps = {\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | string;\n  /** Quando attivo rende i Badge arrotondati */\n  pill?: boolean;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement>;\n  /** Il contenuto del badge */\n  children: ReactChild;\n} & (HTMLAttributes<HTMLElement> | AnchorHTMLAttributes<HTMLAnchorElement>);\n\nexport const Badge: FC<BadgeProps> = ({\n  color = 'secondary',\n  pill = false,\n  tag = 'span',\n  children,\n  ...attributes\n}) => {\n  return (\n    <BadgeReact color={color} pill={pill} tag={tag} {...attributes}>\n      {children}\n    </BadgeReact>\n  );\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\n\nexport interface BottomNavProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente BottomNav */\n  className?: string;\n}\n\nexport const BottomNav: FC<BottomNavProps> = ({\n  tag = 'nav',\n  ...attributes\n}) => {\n  const Tag = tag;\n  return (\n    <Tag className='bottom-nav'>\n      <ul {...attributes} />\n    </Tag>\n  );\n};\n","import React, { ElementType, FC, HTMLAttributes, MouseEvent } from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon/Icon';\n\nexport interface BottomNavItemProps extends HTMLAttributes<HTMLLIElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente BottomNavItem */\n  className?: string;\n  /** Quando abilitato mostra l'elemento come attivo */\n  active?: boolean;\n  /** Indica l'URL a cui puntare (utilizzare o questo o onClick) */\n  url?: string;\n  /** Etichetta da associare all'elemento */\n  label?: string;\n  /** Testo esplicativo per dispositivi screen reader. */\n  srText?: string;\n  /** Icona da utilizzare per l'elemento */\n  iconName?: string;\n  /** Quando abilitato indica una sezione che richiede attenzione o presenta nuovi contenuti */\n  alert?: boolean;\n  /** Visualizza dei badge con indicazioni numeriche in alto a destra dell'icona */\n  badge?: number;\n  /** Da utilizzare al posto di url quando la gestione del click è in JS */\n  onLinkClick?: (event: MouseEvent<HTMLAnchorElement>) => void;\n  /**\n   * Indica l'URL a cui far puntare il componente BottomNavItem.\n   * @deprecated. Usare `url` o `onLinkClick`\n   * */\n  link?: string;\n}\n\nexport const BottomNavItem: FC<BottomNavItemProps> = ({\n  active = false,\n  badge,\n  alert = false,\n  url,\n  srText,\n  iconName = 'it-comment',\n  label,\n  tag = 'a',\n  onLinkClick,\n  link,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const activeClass = classNames({ active });\n  const badgeWrapper = Boolean(badge) && (\n    <div className='badge-wrapper'>\n      <span className='bottom-nav-badge'>{badge}</span>\n    </div>\n  );\n  const alertWrapper = Boolean(alert) && (\n    <div className='badge-wrapper'>\n      <span className='bottom-nav-alert' />\n    </div>\n  );\n  return (\n    <li {...attributes}>\n      <Tag\n        href={url || link || '#'}\n        className={activeClass}\n        onClick={onLinkClick}\n      >\n        {badgeWrapper}\n        {alertWrapper}\n        <Icon icon={iconName} />\n        <span className='bottom-nav-label'>\n          {label}\n          {srText ? <span className='sr-only'>{srText}</span> : null}\n        </span>\n      </Tag>\n    </li>\n  );\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport { Breadcrumb as BreadcrumbBase, CSSModule } from 'reactstrap';\nimport classNames from 'classnames';\n\nexport interface BreadcrumbProps extends HTMLAttributes<HTMLDivElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati per la l'elemento lista interno */\n  listTag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Nav */\n  className?: string;\n  /** Classi aggiuntive da usare per il componente di lista interno */\n  listClassName?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Indica se si vuole la versione con fondo scuro */\n  dark?: boolean;\n  /** Etichetta significativa per descrivere il tipo di navigazione */\n  'aria-label'?: string;\n}\n\nexport const Breadcrumb: FC<BreadcrumbProps> = ({\n  className,\n  listClassName,\n  dark,\n  'aria-label': label,\n  ...attributes\n}) => {\n  const classes = classNames(className, 'breadcrumb-container');\n  const listClasses = classNames(listClassName, { dark });\n  const ariaLabel = label ?? 'breadcrumb';\n  return (\n    <BreadcrumbBase\n      className={classes}\n      listClassName={listClasses}\n      aria-label={ariaLabel}\n      {...attributes}\n    />\n  );\n};\n","import React, { FC, ElementType, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface CalloutProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive per il componente */\n  className?: string;\n  /** Permette di dichiarare il colore del bordo e del titolo */\n  color?: 'success' | 'warning' | 'danger' | 'note' | 'important' | string;\n  /** Permette personalizzare il tag utilizzato per il Callout (diverso da \"div\"). Accetta sia tag HTML che componenti React. */\n  tag?: ElementType;\n  /** Abilita il Callout di tipo Highlight */\n  highlight?: boolean;\n  /** Abilita il Callout di tipo Approfondimento */\n  detailed?: boolean;\n}\n\nexport const Callout: FC<CalloutProps> = ({\n  children,\n  color = '',\n  highlight = false,\n  detailed,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames('callout', color, {\n    'callout-highlight': highlight,\n    'callout-more': detailed\n  });\n  return (\n    <Tag className={classes} {...attributes}>\n      {children}\n    </Tag>\n  );\n};\n","import React, { FC, ElementType, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface CalloutTextProps extends HTMLAttributes<HTMLElement> {\n  /** Aumenta la dimensione del testo nel paragrafo contenuto  */\n  bigText?: boolean;\n  /** Classi aggiuntive per il componente */\n  className?: string;\n  /** Permette personalizzare il tag utilizzato per il contenitore del titolo (diverso da \"div\"). Accetta sia tag HTML che componenti React. */\n  tag?: ElementType;\n}\n\nexport const CalloutText: FC<CalloutTextProps> = ({\n  bigText = false,\n  children,\n  className,\n  tag = 'p',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, {\n    'callout-big-text': bigText\n  });\n  return (\n    <Tag className={classes} {...attributes}>\n      {children}\n    </Tag>\n  );\n};\n","import React, { FC, ElementType, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface CalloutTitleProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive per il componente */\n  className?: string;\n  /** Permette personalizzare il tag utilizzato per il contenitore del titolo (diverso da \"div\"). Accetta sia tag HTML che componenti React. */\n  tag?: ElementType;\n}\n\nexport const CalloutTitle: FC<CalloutTitleProps> = ({\n  children,\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'callout-title');\n  return (\n    <Tag className={classes} {...attributes}>\n      {children}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType, Ref } from 'react';\nimport classNames from 'classnames';\nimport { Card as CardBase, CSSModule } from 'reactstrap';\n\nexport interface CardProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Card */\n  className?: string;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement>;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n  /** Abilita la versione teaser della Card */\n  teaser?: boolean;\n  /** Quando attivo distanzia la Card nella versione mobile */\n  spacing?: boolean;\n  /** Quando attivo rimuove il componente contenitore della carta. Utile per card multiple nello stesso contenitore */\n  noWrapper?: boolean;\n  /** Classi aggiuntive per l'elemento contenitore */\n  wrapperClassName?: string;\n}\n\nexport const Card: FC<CardProps> = ({\n  tag = 'div',\n  teaser,\n  spacing,\n  noWrapper = false,\n  wrapperClassName,\n  ...attributes\n}) => {\n  const wrapperClasses = classNames('card-wrapper', wrapperClassName, {\n    'card-space': spacing,\n    'card-teaser-wrapper': teaser\n  });\n  const cardClasses = classNames(attributes.className, {\n    'card-teaser': teaser\n  });\n\n  if (noWrapper) {\n    return <CardBase {...attributes} className={cardClasses} tag={tag} />;\n  }\n\n  return (\n    <div className={wrapperClasses}>\n      <CardBase {...attributes} className={cardClasses} tag={tag} />\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType, Ref } from 'react';\nimport { CardBody as InnerCardBody, CSSModule } from 'reactstrap';\n\n// Note: this is a wrapper class around a reactstrap component.\n// TODO: remove this class and restore the direct import when\n// https://github.com/storybookjs/storybook/issues/10536 gets resolved\n\nexport interface CardBodyProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Card */\n  className?: string;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: Ref<HTMLElement>;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n}\n\nexport const CardBody: FC<CardBodyProps> = ({ tag = 'div', ...props }) => (\n  <InnerCardBody {...props} tag={tag} />\n);\n","import React, { FC, HTMLAttributes, MouseEvent } from 'react';\nimport classNames from 'classnames';\n\nimport { Icon } from '../Icon/Icon';\n\nexport interface CardCategoryProps extends HTMLAttributes<HTMLElement> {\n  /** Mostra un'icona nella Card. Passare il nome dell'icona per utilizzarlo. */\n  iconName?: string;\n  /** Mostra la data nella Card. Passare una data già formattata come stringa. */\n  date?: string;\n  /** Se usato come link, passare l'URL target. */\n  href?: string;\n  /** Da utilizzare al posto di url quando la gestione del click è in JS */\n  onClick?: (event: MouseEvent<HTMLAnchorElement>) => void;\n}\n\nexport const CardCategory: FC<CardCategoryProps> = ({\n  iconName,\n  date,\n  href,\n  onClick,\n  children,\n  ...rest\n}) => {\n  const classes = classNames({\n    'category-top': date || ' ',\n    'categoryicon-top': iconName\n  });\n  // Simple category link\n  const categoryLink = !iconName && (\n    <a href={href} className='category' onClick={onClick}>\n      {children}\n    </a>\n  );\n  const categoryDate = date && <span className='data'>{date}</span>;\n  // Category with icon\n  const categoryText = iconName && <span className='text'>{children}</span>;\n  const categoryIcon = iconName && <Icon icon={iconName} />;\n\n  return (\n    <div className={classes} {...rest}>\n      {categoryLink}\n      {categoryIcon}\n      {categoryText}\n      {categoryDate}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface CardFooterCTAProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardFooterCTA*/\n  className?: string;\n}\n\nexport const CardFooterCTA: FC<CardFooterCTAProps> = ({\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'it-card-footer');\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nimport { Icon } from '../Icon/Icon';\n\nexport interface CardReadMoreProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardReadMore*/\n  className?: string;\n  /** Il contenuto in testo da mostrare */\n  text: string;\n  /** Passare l'URL target. */\n  href?: string;\n  /** Mostra un'icona nella Card per l'azione \"Leggi di più\". Passare il nome dell'icona per utilizzarlo. */\n  iconName?: string;\n}\n\nexport const CardReadMore: FC<CardReadMoreProps> = ({\n  className,\n  text,\n  iconName = 'it-arrow-right',\n  tag = 'a',\n  href,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'read-more');\n  return (\n    <Tag className={classes} href={href} {...attributes}>\n      <span className='text'>{text}</span>\n      {iconName && <Icon icon={iconName} />}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface CardSignatureProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardSignature*/\n  className?: string;\n}\n\nexport const CardSignature: FC<CardSignatureProps> = ({\n  className,\n  tag = 'span',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'card-signature');\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { AnchorHTMLAttributes, FC, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface CardTagProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardTag*/\n  className?: string;\n}\n\nexport const CardTag: FC<CardTagProps> = ({\n  className,\n  tag = 'a',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'card-tag');\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface CardTagsHeaderProps extends HTMLAttributes<HTMLElement> {\n  /** Mostra la data nella Card. Passare una data già formattata come stringa. */\n  date?: string;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardTagsHeader */\n  className?: string;\n}\n\nexport const CardTagsHeader: FC<CardTagsHeaderProps> = ({\n  date,\n  children,\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames('head-tags', className);\n  return (\n    <Tag className={classes} {...attributes}>\n      {children}\n      {date && <span className='data'>{date}</span>}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport { CardText as InnerCardText, CSSModule } from 'reactstrap';\n\n// Note: this is a wrapper class around a reactstrap component.\n// TODO: remove this class and restore the direct import when\n// https://github.com/storybookjs/storybook/issues/10536 gets resolved\n\nexport interface CardTextProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardText */\n  className?: string;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n}\n\nexport const CardText: FC<CardTextProps> = (props) => {\n  return <InnerCardText {...props} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport { CardTitle as InnerCardTitle } from 'reactstrap';\n\n// Note: this is a wrapper class around a reactstrap component.\n// TODO: remove this class and restore the direct import when\n// https://github.com/storybookjs/storybook/issues/10536 gets resolved\n\nexport interface CardTitleProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CardTitle */\n  className?: string;\n}\n\nexport const CardTitle: FC<CardTitleProps> = (props) => {\n  return <InnerCardTitle {...props} />;\n};\n","import React, { HTMLAttributes, FC, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface ChipProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Chip */\n  className?: string;\n  /** Impostarlo su `true` per centrare la label all'interno */\n  simple?: boolean;\n  /** Impostarlo su `true` per una versione più grande del componente Chip. */\n  large?: boolean;\n  /** Impostarlo su `true` per renderizzare il componente Chip come disabilitato */\n  disabled?: boolean;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | string;\n}\n\nexport const Chip: FC<ChipProps> = ({\n  className,\n  color = '',\n  tag = 'div',\n  simple = false,\n  large = false,\n  disabled = false,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames('chip', className, {\n    'chip-simple': simple,\n    'chip-lg': large,\n    'chip-disabled': disabled,\n    [`chip-${color}`]: color\n  });\n\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface ChipLabelProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente ChipLabel */\n  className?: string;\n}\n\nexport const ChipLabel: FC<ChipLabelProps> = ({\n  className,\n  tag = 'span',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'chip-label');\n  return <Tag {...attributes} className={classes} />;\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface CookieBarProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Cookie */\n  className?: string;\n}\n\nexport const CookieBar: FC<CookieBarProps> = ({\n  tag = 'div',\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames('cookiebar show', className);\n  return <Tag {...attributes} className={wrapperClasses} />;\n};\n","import React, {\n  ElementType,\n  FC,\n  ButtonHTMLAttributes,\n  AnchorHTMLAttributes\n} from 'react';\nimport classNames from 'classnames';\n\nexport type CookieBarButtonProps = {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CookieBarButton */\n  className?: string;\n} & (\n  | ButtonHTMLAttributes<HTMLButtonElement>\n  | AnchorHTMLAttributes<HTMLAnchorElement>\n);\n\nexport const CookieBarButton: FC<CookieBarButtonProps> = ({\n  tag = 'button',\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const activeClass = classNames(className, 'cookiebar-btn');\n  return <Tag className={activeClass} {...attributes} />;\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface CookieBarButtonsProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente CookieBarButtons */\n  className?: string;\n}\n\nexport const CookieBarButtons: FC<CookieBarButtonsProps> = ({\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const buttonClasses = classNames(className, 'cookiebar-buttons');\n  return <Tag className={buttonClasses} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { Icon } from '../Icon/Icon';\n\nexport interface DimmerProps extends HTMLAttributes<HTMLElement> {\n  /** Il nome dell'icona da mostrare. Per una lista completa vedi: @TODO-URL */\n  icon?: string;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'success' | 'warning' | 'danger' | 'note' | 'important' | string;\n  /** Classi aggiuntive da usare per il componente Dimmer */\n  className?: string;\n  /**\n   * Classi aggiuntive da usare per il componente contenitore del Dimmer\n   * Per replicare il comportamento precedente, in cui `className` veniva applicato anche al wrapper,\n   * passare `true`.\n   * */\n  wrapperClassName?: string | true;\n}\n\nexport const Dimmer: FC<DimmerProps> = ({\n  icon,\n  color,\n  className,\n  wrapperClassName,\n  ...attributes\n}) => {\n  const { children, ...rest } = attributes;\n  const classes = classNames(\n    'dimmer',\n    wrapperClassName === true ? className : wrapperClassName,\n    {\n      [`dimmer-${color}`]: color\n    }\n  );\n  const innerClasses = classNames('dimmer-inner', className);\n  const dimmerIcon = icon && (\n    <div className='dimmer-icon'>\n      <Icon icon={icon} />\n    </div>\n  );\n\n  return (\n    <div className={classes} {...rest} style={{ display: 'flex' }}>\n      <div className={innerClasses} {...rest}>\n        {dimmerIcon}\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface DimmerButtonsProps extends HTMLAttributes<HTMLElement> {\n  /** Le varianti di colore definite in Bootstrap Italia per il componente Dimmer */\n  color?: 'primary' | string;\n  /** Classi aggiuntive da usare per il componente Dimmer */\n  className?: string;\n  /** Da utilizzare in presenza di un singolo bottone: quando abilitato ne centra il contenuto. */\n  single?: boolean;\n  /** Da utilizzare con `false` per abilitare il precedente comportamento senza sfondo scuro.\n   * @deprecated\n   */\n  dark?: boolean;\n}\n\nexport const DimmerButtons: FC<DimmerButtonsProps> = ({\n  color,\n  className,\n  single = false,\n  dark = true,\n  ...attributes\n}) => {\n  const { children, ...rest } = attributes;\n  const classes = classNames('dimmer-buttons', className, {\n    'bg-dark': dark,\n    'single-button': single\n  });\n\n  return (\n    <div className={classes} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface GridItemProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Classi aggiuntive da usare per il componente LinkListItem */\n  className?: string;\n  /** Indica il tag da utilizzare per il titolo */\n  tag?: ElementType;\n}\n\nexport const GridItem: FC<GridItemProps> = ({\n  tag: Tag = 'div',\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classname('it-grid-item-wrapper', className);\n  return (\n    <Tag {...attributes} className={classes}>\n      {children}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface GridItemTextProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Classi aggiuntive da usare per l'elemento */\n  className?: string;\n}\n\nexport const GridItemText: FC<GridItemTextProps> = ({\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classname('it-griditem-text', className);\n  return (\n    <span {...attributes} className={classes}>\n      {children}\n    </span>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface GridItemTextWrapperProps\n  extends HTMLAttributes<HTMLSpanElement> {\n  /** Classi aggiuntive da usare per l'elemento */\n  className?: string;\n}\n\nexport const GridItemTextWrapper: FC<GridItemTextWrapperProps> = ({\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classname('it-griditem-text-wrapper', className);\n  return (\n    <span {...attributes} className={classes}>\n      {children}\n    </span>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface GridListProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Classi aggiuntive da usare per il componente LinkListItem */\n  className?: string;\n}\n\nexport const GridList: FC<GridListProps> = ({\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classname('it-grid-list-wrapper', className);\n  return (\n    <div {...attributes} className={classes}>\n      {children}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface GridRowProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Classi aggiuntive da usare per il componente LinkListItem */\n  className?: string;\n}\n\nexport const GridRow: FC<GridRowProps> = ({\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classname('grid-row', className);\n  return (\n    <div {...attributes} className={classes}>\n      {children}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { HeaderContext, CENTER, NAVBAR } from './HeaderContext';\n\nexport interface HeaderProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive da usare per il componente Header */\n  className?: string;\n  /** Tipo di componente Header: può essere solamente uno di questi tre tipi */\n  type: 'slim' | 'center' | 'navbar';\n  /** Riduce la grandezza del componente Header. Funziona solamente con Header \"center\". */\n  small?: boolean;\n  /** Imposta il tema per il componente Header. Per gli Header di tipo \"slim\" o \"center\"\n   *  il valore di default è \"dark\". Per l'Header di tipo \"nav\" il tema di default è \"light\"\n   *  in mobile, mentre \"dark\" in versione desktop.\n   */\n  theme?: 'light' | 'dark' | '';\n}\n\nexport const Header: FC<HeaderProps> = ({\n  className,\n  small = false,\n  theme = '',\n  type,\n  ...attributes\n}) => {\n  // use context here as theme\n  const classes = classNames(className, {\n    [`it-header-${type}-wrapper`]: type,\n    'it-small-header': type === CENTER && small,\n    [`theme-${theme}`]: type !== NAVBAR && theme,\n    'theme-dark-mobile': type === NAVBAR && theme === 'dark',\n    'theme-light-desk': type === NAVBAR && theme === 'light'\n  });\n  return (\n    <HeaderContext.Provider value={{ type }}>\n      <div className={classes} {...attributes} />\n    </HeaderContext.Provider>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface HeaderLinkZoneProps extends HTMLAttributes<HTMLElement> {\n  /** Classi addizionali per il componente HeaderLinkZone, applicata all'element \"nav\" annidato */\n  className?: string;\n}\n\nexport const HeaderLinkZone: FC<HeaderLinkZoneProps> = ({\n  className,\n  ...attributes\n}) => {\n  const classes = classNames(className);\n  return (\n    <div className='nav-mobile'>\n      <nav className={classes} {...attributes} />\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { Icon } from '../Icon/Icon';\n\nexport interface HeaderSearchProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive da usare per il componente HeaderSearch */\n  className?: string;\n  /** Etichetta di testo da applicare all'elemento. In caso di stringa vuota non verrà mostrato alcun testo */\n  label: string;\n  /** Nome dell'icona da utilizzare */\n  iconName: string;\n  /** Indirizzo di indirizzamento al click dell'icona */\n  href?: string;\n}\n\nexport const HeaderSearch: FC<HeaderSearchProps> = ({\n  className,\n  label,\n  href,\n  iconName = 'it-search',\n  ...attributes\n}) => {\n  const classes = classNames('it-search-wrapper', className);\n  return (\n    <div className={classes} {...attributes}>\n      {label && <span className='d-none d-md-block'>{label}</span>}\n      <a className='search-link rounded-icon' aria-label={label} href={href}>\n        <Icon icon={iconName} />\n      </a>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ReactChild } from 'react';\nimport classNames from 'classnames';\n\nexport interface HeaderSocialsZoneProps extends HTMLAttributes<HTMLElement> {\n  /** Classi addizionali per il componente HeaderSocialsZone, verrà applicato all'elemento wrapper più esterno. */\n  className?: string;\n  /** Etichetta utilizzata per presentare i social presenti. In caso di stringa vuota non verrà mostrata alcuna etichetta */\n  label?: string;\n  /** Utilizzato per elencare i social da mostrare */\n  children?: ReactChild;\n}\n\nexport const HeaderSocialsZone: FC<HeaderSocialsZoneProps> = ({\n  className,\n  children,\n  label,\n  ...attributes\n}) => {\n  const classes = classNames('it-socials d-none d-md-flex', className);\n  return (\n    <div className={classes} {...attributes}>\n      {label && <span>{label}</span>}\n      {children}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport { Sticky, StickyProvider } from 'react-stickup';\n\nexport interface HeadersProps extends HTMLAttributes<HTMLElement> {\n  /** Aggiunge un ombra per enfatizzare il componente rispetto alla pagina in cui è contenuto */\n  shadow?: boolean;\n  /** Aggiunge il comportamento \"sticky\" ai componenti Header contenuti */\n  sticky?: boolean;\n  /** Classi addizionali per il componente Headers */\n  className?: string;\n}\n\nexport const Headers: FC<HeadersProps> = ({\n  className,\n  shadow = false,\n  sticky = false,\n  ...attributes\n}) => {\n  const classes = classNames(\n    'it-header-wrapper',\n    {\n      'it-shadow': shadow,\n      'it-header-sticky': sticky\n    },\n    className\n  );\n  if (!sticky) {\n    return <div className={classes} {...attributes}></div>;\n  }\n  return (\n    <StickyProvider>\n      <Sticky style={{ position: 'sticky', zIndex: 2 }}>\n        <div className={classes} {...attributes}></div>\n      </Sticky>\n    </StickyProvider>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classname from 'classnames';\n\nexport interface HeroProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Indica se il componente Hero deve ridurre l'altezza */\n  small?: boolean;\n  /** Indica al componente Hero di centrare i contenuti testuali orizzontalmente */\n  centered?: boolean;\n  /** Da utilizzare per creare un testi in overlay su immagini, al fine di migliorare la leggibilità di testo */\n  overlay?: 'dark' | 'primary' | 'filter';\n  /** Aggiunge margine negativo in fondo al componente Hero per creare una sovrapposizione con il contenuto seguente. */\n  overlap?: boolean;\n}\n\nexport const Hero: FC<HeroProps> = ({\n  tag: Tag = 'div',\n  small,\n  centered,\n  overlay,\n  overlap,\n  className,\n  ...attributes\n}) => {\n  const classes = classname('it-hero-wrapper', className, {\n    'it-overlay': overlay,\n    ['it-' + overlay]: overlay,\n    'it-hero-small-size': small,\n    'it-text-centered': centered,\n    'it-bottom-overlapping-content': overlap\n  });\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes } from 'react';\n\nexport interface HeroBackgroundProps extends HTMLAttributes<HTMLImageElement> {\n  /** Un testo alternativo per descrivere l'immagine mostrata */\n  alt: string;\n  /** L'URI dell'immagine da mostrare */\n  src: string;\n  /** Il titolo dell'immagine */\n  title?: string;\n}\n\nexport const HeroBackground: FC<HeroBackgroundProps> = ({\n  alt,\n  ...attributes\n}) => {\n  return (\n    <div className='img-responsive-wrapper'>\n      <div className='img-responsive'>\n        <div className='img-wrapper'>\n          <img {...attributes} alt={alt} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\nimport { Col, Container, Row } from 'reactstrap';\n\nexport interface HeroBodyProps extends HTMLAttributes<HTMLElement> {\n  /** Eventuali classi aggiuntive */\n  className?: string;\n}\n\nexport const HeroBody: FC<HeroBodyProps> = ({ children, className }) => {\n  const classes = classname('it-hero-text-wrapper', 'bg-dark', className);\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <div className={classes}>{children}</div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { FC } from 'react';\nimport classname from 'classnames';\nimport { Button, ButtonProps } from '../Button/Button';\n\nexport interface HeroButtonProps extends ButtonProps {\n  wrapperClassName?: string;\n}\n\nexport const HeroButton: FC<HeroButtonProps> = ({\n  wrapperClassName,\n  ...attributes\n}) => {\n  const classes = classname('it-btn-container', wrapperClassName);\n  return (\n    <div className={classes}>\n      <Button size='sm' {...attributes} />\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface HeroCategoryProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Eventuali classi aggiuntive per la categoria */\n  className?: string;\n}\n\nexport const HeroCategory: FC<HeroCategoryProps> = ({\n  className,\n  ...attributes\n}) => {\n  const classes = classname('it-category', className);\n  return <span {...attributes} className={classes} />;\n};\n","import React, { ElementType, FC, HTMLAttributes } from 'react';\nimport classname from 'classnames';\n\nexport interface HeroTitleProps extends HTMLAttributes<HTMLSpanElement> {\n  /** Indica il tag da utilizzare per il titolo */\n  tag?: ElementType;\n}\n\nexport const HeroTitle: FC<HeroTitleProps> = ({\n  tag: Tag = 'h1',\n  className,\n  ...attributes\n}) => {\n  const classes = classname(className);\n  return <Tag {...attributes} className={classes} />;\n};\n","import React, { FC, HTMLAttributes, ElementType, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nexport interface LinkListProps extends HTMLAttributes<HTMLUListElement> {\n  /** Da utilizzare in caso di titolo principale della lista. Passare una componente React da mostrare come titolo */\n  header?: ReactNode;\n  /** Classi aggiuntive da usare per il componente lista del LinkList */\n  className?: string;\n  /** Classi aggiuntive da usare per il componente wrapper del LinkList */\n  wrapperClassName?: string;\n  /**\n   * Utilizzarlo in caso di utilizzo di componenti personalizzati per il wrapper della lista.\n   * Nota: viene ignorato quando usato in lista annidate.\n   * */\n  tag?: ElementType;\n  /** Quando abilitato gestisce una lista in cui ciascun elemento è composto da più componenti/elementi. */\n  multiline?: boolean;\n  /** Da utilizzare per una lista annidata */\n  sublist?: boolean;\n  /** Da utilizzare per una lista di avatar */\n  avatar?: boolean;\n  /** Quando attivo rimuove il componente contenitore della ListList. Utile per alcuni tipi di liste annidate. */\n  noWrapper?: boolean;\n}\n\nexport const LinkList: FC<LinkListProps> = ({\n  className,\n  wrapperClassName,\n  tag = 'div',\n  multiline,\n  header,\n  sublist,\n  avatar,\n  noWrapper,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames('link-list-wrapper', wrapperClassName, {\n    multiline: multiline\n  });\n  const classes = classNames(className, {\n    'link-list': !sublist,\n    'link-sublist': sublist,\n    'avatar-group': avatar\n  });\n\n  if (noWrapper) {\n    return <ul {...attributes} className={classes} />;\n  }\n\n  if (sublist) {\n    return (\n      <>\n        {header}\n        <ul {...attributes} className={classes} />\n      </>\n    );\n  }\n  return (\n    <Tag className={wrapperClasses}>\n      {header}\n      <ul {...attributes} className={classes} />\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, useState } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\nimport classNames from 'classnames';\nimport { Collapse } from '../Collapse/Collapse';\nimport { Icon } from '../Icon/Icon';\nimport { Nav } from '../Nav/Nav';\n\nexport interface MegamenuProps extends HTMLAttributes<HTMLDivElement> {\n  /** Eventuale brand da inserire sulla navbar */\n  brand?: NavbarBrand;\n  /** Classi aggiuntive da usare per il componente Nav */\n  className?: string;\n}\n\nexport const Megamenu: FC<MegamenuProps> = ({\n  brand,\n  className,\n  children,\n  ...attributes\n}) => {\n  const [openNav, setOpenNav] = useState(false);\n  const toggle = () => {\n    setOpenNav(!openNav);\n  };\n  const classes = classNames(className, 'has-megamenu');\n  return (\n    <Navbar className={classes} {...attributes}>\n      <NavbarToggler className='custom-navbar-toggler' onClick={toggle}>\n        <Icon icon='it-list' size='sm' />\n      </NavbarToggler>\n      {brand}\n      <Collapse isOpen={openNav} megamenu>\n        <Nav navbar>{children}</Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface MegamenuFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /** Classi aggiuntive da usare per il componente Megamenu Footer */\n  className?: string;\n}\n\nexport const MegamenuFooter: FC<MegamenuFooterProps> = ({\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classNames(className, 'it-megamenu-footer');\n  return (\n    <div className={classes} {...attributes}>\n      {children}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport classNames from 'classnames';\n\nexport interface MegamenuHCProps extends HTMLAttributes<HTMLDivElement> {\n  /** Quanto abilitato gestisce il contenuto della colonna come una sezione che può contentere immagini, testo, ect. */\n  description?: boolean;\n  /** Classi aggiuntive da usare per il componente Megamenu Highlight Column */\n  className?: string;\n}\nexport const MegamenuHighlightColumn: FC<MegamenuHCProps> = ({\n  description,\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classNames(className, 'it-vertical', {\n    'it-description': description\n  });\n  return (\n    <Col {...attributes}>\n      <Row className='max-height-col'>\n        <Col className={classes}>\n          {description ? (\n            <div className='description-content'>{children}</div>\n          ) : (\n            <>{children}</>\n          )}\n        </Col>\n      </Row>\n    </Col>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport { DropdownMenu, DropdownToggle, UncontrolledDropdown } from 'reactstrap';\nimport classNames from 'classnames';\n\nexport interface MegamenuItemProps extends HTMLAttributes<HTMLUListElement> {\n  /** Etichetta del megamenu visibile all'interno della barra di navigazione */\n  itemName: string;\n  /** Classi aggiuntive da usare per il componente UncontrolledDropdown */\n  className?: string;\n}\n\nexport const MegamenuItem: FC<MegamenuItemProps> = ({\n  itemName,\n  className,\n  children,\n  ...attributes\n}) => {\n  const classes = classNames(className, 'megamenu');\n  return (\n    <UncontrolledDropdown nav tag='li' className={classes} {...attributes}>\n      <DropdownToggle caret nav>\n        {itemName}\n      </DropdownToggle>\n      <DropdownMenu positionFixed>{children}</DropdownMenu>\n    </UncontrolledDropdown>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport { CSSModule, FadeProps, Modal as InnerModal } from 'reactstrap';\nimport classnames from 'classnames';\n\nexport interface ModalProps extends HTMLAttributes<HTMLElement> {\n  [key: string]: any;\n  /** Indica lo stato del modale. Valore di default: undefined. */\n  isOpen?: boolean;\n  autoFocus?: boolean;\n  size?: string;\n  /** Funzione da chiamare quando l'utente clicca sul backdrop. Valore di default: undefined. */\n  toggle?: React.KeyboardEventHandler<any> | React.MouseEventHandler<any>;\n  keyboard?: boolean;\n  backdrop?: boolean | 'static';\n  /**\n   * Abilitare quando si vuole che solo il contenuto della modale sia scrollabile.\n   * Valore di default: undefined.\n   * */\n  scrollable?: boolean;\n  onEnter?: () => void;\n  onExit?: () => void;\n  onOpened?: () => void;\n  onClosed?: () => void;\n  cssModule?: CSSModule;\n  wrapClassName?: string;\n  modalClassName?: string;\n  backdropClassName?: string;\n  contentClassName?: string;\n  zIndex?: number | string;\n  fade?: boolean;\n  backdropTransition?: FadeProps;\n  modalTransition?: FadeProps;\n  centered?: boolean;\n  external?: React.ReactNode;\n  labelledBy?: string;\n  unmountOnClose?: boolean;\n  returnFocusAfterClose?: boolean;\n  container?: string | HTMLElement | React.RefObject<HTMLElement>;\n  innerRef?: React.Ref<HTMLElement>;\n  /** Abilitare quando si utilizza una icona nell'intestazione, al fine di formattare correttamente il modale. Valore di default: undefined. */\n  withIcon?: boolean;\n  /** Abilitare quando si utilizza una LinkList nell'intestazione, al fine di formattare correttamente il modale. Valore di default: undefined. */\n  withLinkList?: boolean;\n  /** Abilitare quando si vuole mostrare un breve messaggio di conferma. Valore di default: undefined. */\n  popConfirm?: boolean;\n  /** Abilitare quando si vuole mostrare un modale allineato a sinistra. Valore di default: undefined. */\n  align?: 'left' | 'right';\n}\n\nexport const Modal: FC<ModalProps> = ({\n  withIcon,\n  withLinkList,\n  popConfirm,\n  modalClassName,\n  align,\n  scrollable,\n  className,\n  ...props\n}) => {\n  const isAligned = align != null && ['left', 'right'].includes(align);\n  const modalDialogClassnames = classnames(modalClassName, {\n    'alert-modal': withIcon,\n    'it-dialog-link-list': withLinkList,\n    'popconfirm-modal': popConfirm,\n    'it-dialog-scrollable': scrollable && isAligned\n  });\n  const modalClassnames = classnames(className, {\n    'modal-dialog-left': align === 'left',\n    'modal-dialog-right': align === 'right'\n  });\n  return (\n    <InnerModal\n      {...props}\n      scrollable={!isAligned && scrollable}\n      className={modalClassnames}\n      modalClassName={modalDialogClassnames}\n    />\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport { CSSModule, ModalBody as InnerModalBody } from 'reactstrap';\n\nexport interface ModalBodyProps extends HTMLAttributes<HTMLElement> {\n  tag?: React.ElementType;\n  cssModule?: CSSModule;\n}\n\nexport const ModalBody: FC<ModalBodyProps> = (props) => (\n  <InnerModalBody {...props} />\n);\n","import React, { FC, HTMLAttributes } from 'react';\nimport { CSSModule, ModalFooter as InnerModalFooter } from 'reactstrap';\n\nexport interface ModalFooterProps extends HTMLAttributes<HTMLElement> {\n  tag?: React.ElementType;\n  cssModule?: CSSModule;\n}\n\nexport const ModalFooter: FC<ModalFooterProps> = (props) => (\n  <InnerModalFooter {...props} />\n);\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface PagerProps extends HTMLAttributes<HTMLElement> {\n  /** Etichetta di descrizione del contenuto del componente Pager */\n  'aria-label': string;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati per la l'elemento lista interno */\n  listTag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Pager */\n  className?: string;\n  /** Classi aggiuntive da usare per il componente di lista interno Pager */\n  listClassName?: string;\n  /** Utilizzare questo attributo per indicare il numero totale di pagine */\n  total?: { ariaLabel: string; label: string };\n}\n\nexport const Pager: FC<PagerProps> = ({\n  className,\n  tag = 'nav',\n  listTag: ListTag = 'ul',\n  listClassName,\n  children,\n  total,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'pagination-wrapper', {\n    'pagination-total': total\n  });\n  const listClasses = classNames(listClassName, 'pagination');\n  const { ariaLabel, label } = total || {};\n  const totalAriaLabel = ariaLabel ? (\n    <span className='sr-only'>{ariaLabel}</span>\n  ) : null;\n  return (\n    <Tag className={classes} {...attributes}>\n      <ListTag className={listClasses}>{children}</ListTag>\n      {total ? (\n        <p>\n          {totalAriaLabel}\n          {label}\n        </p>\n      ) : null}\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\nimport isNumber from 'is-number';\nimport { logError } from '../utils';\n\nexport interface ProgressProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /**\n   * Classi aggiuntive da usare per il componente contenitore del Progress\n   * Per replicare il comportamento precedente, in cui `className` veniva applicato anche al wrapper,\n   * passare `true`.\n   * */\n  wrapperClassName?: string | true;\n  /** Classi aggiuntive da usare per il componente interno del Progress */\n  className?: string;\n  /** Valore corrente (numerico) */\n  value?: number | string;\n  /** Etichetta con testo per indicare il progresso corrente da mostrare ai dispositivi screen reader */\n  label?: string;\n  /** Quando non è possibile stabilire una percentuale di progressione utilizzare una Progress Bar di tipo indeterminato */\n  indeterminate?: boolean;\n  /** Le varianti di colore definite in Bootstrap Italia */\n  color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | string;\n}\n\nexport const Progress: FC<ProgressProps> = ({\n  wrapperClassName,\n  className,\n  tag = 'div',\n  value,\n  label,\n  indeterminate = false,\n  color,\n  role = 'progressbar',\n  ...attributes\n}) => {\n  const Tag = tag;\n  if (!isNumber(value) && !indeterminate) {\n    logError(`The passed \"value\" is not a valid number. You passed \"${value}\"`);\n  }\n  const numericValue = Number(value);\n  const wrapperClasses = classNames('progress-bar-wrapper');\n  const secondaryWrapperClasses = classNames(\n    wrapperClassName === true ? className : wrapperClassName,\n    'progress',\n    {\n      'progress-indeterminate': indeterminate,\n      'progress-color': color\n    }\n  );\n  const classes = classNames(className, 'progress-bar', {\n    [`bg-${color}`]: color\n  });\n\n  if (label && numericValue) {\n    return (\n      <Tag className={wrapperClasses}>\n        <div className='progress-bar-label'>\n          <span className='sr-only'>{label}</span>\n          {numericValue + '%'}\n        </div>\n        <Tag className={secondaryWrapperClasses}>\n          <div\n            {...attributes}\n            className={classes}\n            role='progressbar'\n            style={{ width: numericValue + '%' }}\n            aria-valuenow={numericValue}\n            aria-valuemin={0}\n            aria-valuemax={100}\n          />\n        </Tag>\n      </Tag>\n    );\n  }\n\n  return (\n    <Tag className={secondaryWrapperClasses}>\n      <div className='progress-bar-label'>\n        <span className='sr-only'>{label}</span>\n      </div>\n      <div\n        {...attributes}\n        className={classes}\n        role='progressbar'\n        style={{ width: numericValue + '%' }}\n        aria-valuenow={numericValue}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      />\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\n\nexport interface ResponsiveImageProps extends HTMLAttributes<HTMLImageElement> {\n  /** Un testo alternativo per descrivere l'immagine mostrata */\n  alt: string;\n  /** L'URI dell'immagine da mostrare */\n  src: string;\n  /** Il titolo dell'immagine */\n  title?: string;\n}\n\nexport const ResponsiveImage: FC<ResponsiveImageProps> = ({\n  alt,\n  ...attributes\n}) => {\n  return (\n    <div className='img-responsive-wrapper'>\n      <div className='img-responsive'>\n        <div className='img-wrapper'>\n          <img {...attributes} alt={alt} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ReactChild } from 'react';\nimport classNames from 'classnames';\nimport { notifyDeprecation } from '../utils';\n\nexport interface SectionProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * Classi aggiuntive da usare per il contenitore più esterno\n   * Per replicare il comportamento precedente, in cui `className` veniva applicato anche al wrapper,\n   * passare `true`.\n   * */\n  wrapperClassName?: string | true;\n  /** Classi aggiuntive da usare per il contenitore più interno */\n  className?: string;\n  /**\n   * Colore utilizzato per lo sfondo del componente Section.\n   * In caso di `primary` o `neutral` si consiglia di applicare la classe `.white-color` al contenuto per garantire la leggibilità dei testi.\n   * */\n  color?: 'primary' | 'neutral' | 'muted' | string;\n  /**\n   * Indicare l'URL dell'immagine da utilizzare come sfondo della sezione.\n   */\n  image?: string;\n  /** Il contenuto della sezione */\n  children?: ReactChild | ReactChild[];\n  /** Quando abilitato applica lo sfondo di tipo \"neutral\" al componente.\n   * @deprecated. Utilizzare `color=\"neutral\"`\n   */\n  neutral?: boolean;\n  /** Quando abilitato applica lo sfondo di tipo \"muted\" al componente.\n   * @deprecated. Utilizzare `color=\"muted\"`\n   */\n  muted?: boolean;\n}\n\nexport const Section: FC<SectionProps> = ({\n  color,\n  image,\n  wrapperClassName,\n  className,\n  children,\n  neutral,\n  muted,\n  ...rest\n}) => {\n  const classes = classNames(\n    'section',\n    wrapperClassName === true ? className : wrapperClassName,\n    {\n      [`section-${color}`]: color,\n      'section-image': image\n    }\n  );\n\n  if (neutral || muted) {\n    notifyDeprecation(\n      `Please use the prop \"color\" instead of the \"${\n        neutral ? 'neutral' : 'muted'\n      }\" for the Section component.`\n    );\n  }\n\n  // have them separated from the classes above or these will conflict with the color prop\n  // concatenate them at the end. Worst case a duplicate class will appear\n  const deprecatedClasses = classNames({\n    'section-neutral': neutral,\n    'section-muted': muted\n  });\n\n  const innerClasses = classNames('section-content', className);\n\n  const styleClass = {\n    backgroundImageClass: image ? { backgroundImage: `url(${image})` } : {}\n  };\n\n  return (\n    <div\n      className={`${classes}${\n        deprecatedClasses ? ' ' + deprecatedClasses : ''\n      }`}\n      style={styleClass.backgroundImageClass}\n      {...rest}\n    >\n      <div className={innerClasses}>{children}</div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface SidebarProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Sidebar */\n  className?: string;\n  /** Indica se il componente Sideebar corrente è di tipo annidato o no */\n  secondary?: boolean;\n  /** Quando attivo aggiunge una linea separatrice a sinistra */\n  left?: boolean;\n  /** Quando attivo aggiunge una linea separatrice a destra */\n  right?: boolean;\n  /** Quando attivo cambia il tema del componente Sidebar rendendola scura */\n  dark?: boolean;\n}\n\nexport const Sidebar: FC<SidebarProps> = ({\n  className,\n  tag = 'div',\n  secondary = false,\n  left = false,\n  right = false,\n  dark = false,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames('sidebar-wrapper', className, {\n    'it-line-left-side': left,\n    'it-line-right-side': right,\n    'theme-dark': dark\n  });\n\n  const wrapperClassesLinkList = classNames('sidebar-linklist-wrapper', {\n    'linklist-secondary': secondary\n  });\n  if (secondary) {\n    return <Tag {...attributes} className={wrapperClassesLinkList} />;\n  }\n  return (\n    <Tag className={wrapperClasses}>\n      <Tag {...attributes} className={wrapperClassesLinkList} />\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface SkiplinkProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Skiplink */\n  className?: string;\n}\n\nexport const Skiplink: FC<SkiplinkProps> = ({\n  className,\n  tag = 'div',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'skiplinks');\n\n  return <Tag className={classes} {...attributes} />;\n};\n","import React, { FC, ElementType, AnchorHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface SkiplinkItemProps\n  extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Skiplink */\n  className?: string;\n  /** Abilitare questo attributo per renderizzare lo SkipLinkItem al focus */\n  focusable?: boolean;\n}\n\nexport const SkiplinkItem: FC<SkiplinkItemProps> = ({\n  className,\n  tag = 'a',\n  focusable = true,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const classes = classNames(className, 'sr-only', {\n    'sr-only-focusable': focusable\n  });\n\n  // Add an extra href for focusable if the user passes an onClick rather than href prop\n  const extraHref = attributes.onClick ? { href: '#' } : {};\n\n  return <Tag className={classes} {...attributes} {...extraHref} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface SpinnerProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Spinner */\n  className?: string;\n  /** Utilizzato per indicare lo stato attivo di caricamento (animato) */\n  active?: boolean;\n  /** Utilizzato per ottenere la versione ridotta del componente Spinner */\n  small?: boolean;\n  /** Utilizzato per ottenere una animazione alternativa in fase di caricamento */\n  double?: boolean;\n  /** Etichetta con testo da mostrare ai dispositivi screen reader */\n  label?: string;\n}\n\nexport const Spinner: FC<SpinnerProps> = ({\n  className,\n  tag = 'span',\n  active = false,\n  small = false,\n  double = false,\n  label = 'Caricamento',\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClasses = classNames('progress-spinner', {\n    'progress-spinner-active': active,\n    'size-sm': small,\n    'progress-spinner-double': double\n  });\n\n  const classes = classNames(className, 'sr-only');\n  if (double) {\n    return (\n      <Tag className={wrapperClasses}>\n        <div className='progress-spinner-inner' />\n        <div className='progress-spinner-inner' />\n        <Tag {...attributes} className={classes}>\n          {label}\n        </Tag>\n      </Tag>\n    );\n  }\n\n  return (\n    <Tag className={wrapperClasses}>\n      <Tag {...attributes} className={classes}>\n        {label}\n      </Tag>\n    </Tag>\n  );\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface StepperContainerProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Abilita il tema scuro per il componente Stepper */\n  dark?: boolean;\n  /** Abilita la navigazione per mobile */\n  mobile?: boolean;\n}\n\nexport const StepperContainer: FC<StepperContainerProps> = ({\n  tag = 'div',\n  mobile,\n  dark,\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames(\n    'steppers',\n    className,\n    { 'bg-dark': dark },\n    { 'mobile-examples': mobile }\n  );\n  return <Tag {...attributes} className={wrapperClass} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface StepperDotsProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n  /** Abilita il tema scuro per il componente StepperDots */\n  dark?: boolean;\n}\n\nexport const StepperDots: FC<StepperDotsProps> = ({\n  tag = 'ul',\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames('steppers-dots', className);\n  return <Tag {...attributes} className={wrapperClass} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface StepperHeaderProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente StepperHeader */\n  className?: string;\n}\n\nexport const StepperHeader: FC<StepperHeaderProps> = ({\n  tag = 'ul',\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames('steppers-header', className);\n  return <Tag {...attributes} className={wrapperClass} />;\n};\n","import React, { FC, HTMLAttributes, ElementType } from 'react';\nimport classNames from 'classnames';\n\nexport interface StepperNavProps extends HTMLAttributes<HTMLElement> {\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Classi aggiuntive da usare per il componente Badge */\n  className?: string;\n}\n\nexport const StepperNav: FC<StepperNavProps> = ({\n  tag = 'nav',\n  className,\n  ...attributes\n}) => {\n  const Tag = tag;\n  const wrapperClass = classNames('steppers-nav', className);\n  return <Tag {...attributes} className={wrapperClass} />;\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nexport interface ThumbNavProps extends HTMLAttributes<HTMLUListElement> {\n  fixedWidth?: boolean;\n  isSmall?: boolean;\n  isVertical?: boolean;\n  noZoomOnHover?: boolean;\n  overlayOnHover?: 'black' | 'primary';\n  position?: 'top' | 'right' | 'bottom' | 'left';\n  rowItems?: 2 | 3 | 4 | 5;\n}\n\nexport const ThumbNav: FC<ThumbNavProps> = ({\n  isSmall = false,\n  fixedWidth = false,\n  isVertical = false,\n  noZoomOnHover = false,\n  rowItems,\n  overlayOnHover,\n  position,\n  ...attributes\n}) => {\n  const classes = classNames('thumb-nav', {\n    'thumb-nav-fixed': fixedWidth,\n    'thumb-nav-small': isSmall,\n    'thumb-nav-vertical':\n      isVertical || position === 'left' || position === 'right',\n    'thumb-nav-nozoom': noZoomOnHover,\n    [`thumb-nav-${overlayOnHover}`]: overlayOnHover,\n    [`thumb-nav-${position}`]: position,\n    'thumb-nav-auto': rowItems != null,\n    [`thumb-nav-auto-${rowItems}`]: rowItems != null\n  });\n\n  return <ul className={classes} {...attributes} />;\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport resizer from 'bootstrap-italia/dist/assets/resizer-3x2.svg';\n\nexport interface ThumbNavItemProps extends HTMLAttributes<HTMLLIElement> {\n  active?: boolean;\n  targetUrl?: string;\n  imageUrl: string;\n  actionDescription?: string;\n}\n\nexport const ThumbNavItem: FC<ThumbNavItemProps> = ({\n  active = false,\n  targetUrl,\n  imageUrl,\n  actionDescription,\n  ...attributes\n}) => {\n  const classes = classNames({ active: active });\n\n  return (\n    <li {...attributes}>\n      <img\n        src={resizer}\n        className='thumb-nav-resizer'\n        aria-hidden='true'\n        alt=''\n      />\n      <a href={targetUrl} className={classes}>\n        <img src={imageUrl} alt={actionDescription} />\n      </a>\n    </li>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classnames from 'classnames';\n\nexport interface TimelineProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive da usare per il componente TimelineProps */\n  className?: string;\n}\n\nexport const Timeline: FC<TimelineProps> = (props) => {\n  const { className, ...attributes } = props;\n  const { children, ...rest } = attributes;\n  const timelineWrapper = classnames(className, 'it-timeline-wrapper');\n\n  return (\n    <div className={timelineWrapper} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { Icon } from '../Icon/Icon';\n\nexport interface TimelinePinProps extends HTMLAttributes<HTMLElement> {\n  /** Classi aggiuntive da usare per il componente TimelinePin */\n  className?: string;\n  /** Mostra un'icona all'interno del TimelinePin. Passare il nome dell'icona per utilizzarlo. */\n  iconName?: string;\n  /**\n   * Mostra un'icona all'interno del TimelinePin. Passare il nome dell'icona per utilizzarlo.\n   * @deprecated. Utilizzare `iconName`.\n   * */\n  icon?: string;\n  /** Etichetta da associare all'elemento */\n  label: string;\n  /** Quando abilitato indica che l'evento TimelinePin è collocato nel presente (azzurro) */\n  now?: boolean;\n  /** Da utilizzare per mostrare un'etichetta per l'evento nel presente */\n  nowText?: string;\n  /** Quando abilitato indica che l'evento TimelinePin è collocato nel passato (blu scuro) */\n  past?: boolean;\n}\n\nexport const TimelinePin: FC<TimelinePinProps> = ({\n  iconName = 'it-code-circle',\n  icon = 'it-code-circle',\n  label = ' ',\n  past,\n  now,\n  nowText,\n  className,\n  ...attributes\n}) => {\n  const { children, ...rest } = attributes;\n  const classes = classNames('timeline-element', className);\n  const innerClasses = classNames('it-pin-wrapper', className, {\n    'it-evidence': past,\n    'it-now': now\n  });\n  const pinIcon = (\n    <div className='pin-icon'>\n      <Icon icon={iconName || icon} />\n    </div>\n  );\n  const pinLabel = (\n    <div className='pin-text'>\n      <span>{label}</span>\n    </div>\n  );\n\n  const pinTextNow = now && (\n    <span className='it-now-label d-none d-lg-flex'>{nowText}</span>\n  );\n\n  return (\n    <div className={classes}>\n      {pinTextNow}\n      <div className={innerClasses} {...rest}>\n        {pinIcon}\n        {pinLabel}\n      </div>\n      {children}\n    </div>\n  );\n};\n","import React, { ElementType, FC, ReactNode } from 'react';\n\nimport { Label, Input, CSSModule } from 'reactstrap';\nimport { InputProps } from '../Input/Input';\n\nexport interface ToggleProps extends InputProps {\n  /** Label da mostrare per il componente */\n  label: string | ReactNode;\n  /** Dimensioni ammissibili per il componente */\n  bsSize?: 'lg' | 'sm';\n  /** Utilizzarlo in caso di utilizzo di componenti personalizzati */\n  tag?: ElementType;\n  /** Da utilizzare per impostare un riferimento all'elemento DOM */\n  innerRef?: React.Ref<HTMLInputElement>;\n  /** Oggetto contenente la nuova mappatura per le classi CSS. */\n  cssModule?: CSSModule;\n}\n\nexport const Toggle: FC<ToggleProps> = ({ label, ...rest }) => {\n  return (\n    <div className='toggles'>\n      <Label check>\n        {label}\n        <Input {...rest} type='checkbox' />\n        <span className='lever' />\n      </Label>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ToolbarDividerItem = () => (\n  <li className='toolbar-divider' aria-hidden={true} />\n);\n"],"names":["Alert","props","React","InnerAlert","defaultProps","color","isOpen","fade","TransitionTimeouts","Util","TransitionPropTypeKeys","TransitionStatuses","pick","omit","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","node","scrollHeight","AccordionBody","height","isAppearing","setState","onEntering","onEntered","onExit","onExiting","onExited","render","this","className","tag","active","children","timeout","Collapse","attributes","Tag","state","transitionProps","childProps","Transition","in","status","transitionClass","getTransitionClass","classes","classNames","style","Component","Button","icon","ariaAttributes","disabled","ButtonBase","window","global","Element","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","iconList","loadIcon","isBundledIcon","EmptyIcon","xmlns","viewBox","fill","d","iconsList","iconsCache","icons","all","map","component","Icon","size","padding","onIconLoad","useState","IconComponent","setCurrentIcon","useEffect","role","src","header","navbar","megamenu","onOverlayClick","cssModule","newCssModule","expanded","display","CollapseBase","onClick","SLIM","HeaderContext","createContext","HeaderBrand","href","iconName","responsive","defaultAttributes","NavbarBrand","Children","child","cloneElement","PureComponent","HeaderContent","Content","Navbar","HeaderRightZone","HeaderToggler","HeaderType","defaultTag","defaultType","NavbarToggler","InputContainer","infoId","infoTextClass","infoText","wrapperClass","htmlFor","id","activeClass","label","mapToCssModules","getInfoTextControlClass","valid","invalid","getClasses","isFocused","bsSize","placeholder","normalized","inputPassword","formControlClass","infoTextControlClass","originalWrapperClass","hasPlainCondition","baseCondition","passwordOnlyCondition","normalizedOnlyCondition","inputClasses","noop","logError","message","console","log","messages","notifyDeprecation","options","once","Input","hidden","e","onFocus","target","_this","onBlur","addon","staticInput","static","plaintext","innerRef","originalWrapperClassOld","wrapperClassName","noWrapper","rest","indexOf","getTag","getFormControlClass","extraAttributes","isNumber","Boolean","sharedAttributes","toggleFocusLabel","toggleBlurLabel","ref","containerProps","toggleShow","readOnly","TextArea","handleDisabledOnClick","preventDefault","Nav","vertical","secondary","NavBase","isCustomLegendObject","legend","PasswordInput","showPassword","prevState","Fragment","onPasswordToggle","defaultFonts","FontLoader","componentDidMount","require","load","custom","families","fonts","addTime","maxValue","currTime","Number","subtractTime","minValue","formatTime","substr","TimeInputContainer","button","styles","container","provided","control","borderRadius","borderLeft","borderRight","borderTop","borderBottom","boxShadow","dropdownIndicator","option","isSelected","background","textDecoration","cursor","isDisabled","singleValue","fontWeight","valueContainer","DropdownIndicator","components","Option","CustomClearText","clearText","variants","confirmed","mobile","contentStyleLight","border","justifyContent","alignItems","contentStyleDark","borderColor","opacity","PositionContext","getBorderStyleFix","fix","customStyle","filter","curPosition","borderPosition","toUpperCase","substring","NotificationElement","closeToast","toastProps","title","body","globalFix","useContext","userIcon","localFix","dismissable","fixPosition","autoClose","content","pickIcon","borderFixes","createNotification","dummyTransition","cssTransition","enter","exit","Notification","useToast","transition","toastRef","eventHandlers","toastId","deleteToast","isIn","timer","setTimeout","clearTimeout","KitTransition","appendPosition","notify","bodyOrOptions","isReactChild","safeOptions","NotificationContent","internalOptions","duration","toast","el","dismiss","SizeContext","ToolbarItemLabel","showSrText","iconLeft","append","onToggle","toggleClasses","collapsed","wrapperClasses","typeClass","presence","extra","pill","BadgeReact","badge","alert","url","srText","onLinkClick","link","badgeWrapper","alertWrapper","listClassName","dark","listClasses","BreadcrumbBase","highlight","detailed","bigText","teaser","spacing","cardClasses","CardBase","InnerCardBody","date","categoryLink","categoryDate","categoryText","categoryIcon","text","InnerCardText","InnerCardTitle","simple","large","buttonClasses","innerClasses","dimmerIcon","single","scrollToRef","current","scrollIntoView","behavior","block","classname","small","theme","Provider","shadow","sticky","StickyProvider","Sticky","position","zIndex","centered","overlay","overlap","alt","Container","Row","Col","multiline","sublist","avatar","divider","handlers","brand","openNav","setOpenNav","description","itemName","UncontrolledDropdown","nav","DropdownToggle","caret","DropdownMenu","positionFixed","withIcon","withLinkList","popConfirm","modalClassName","align","scrollable","isAligned","includes","modalDialogClassnames","classnames","modalClassnames","InnerModal","InnerModalBody","InnerModalFooter","CloseButton","toggle","wrapTag","WrapTag","closeAriaLabel","close","charCode","closeIcon","String","fromCharCode","hookProps","closeOnClick","hideProgressBar","rtl","pauseOnHover","pauseOnFocusLoss","newestOnTop","draggable","enableMultiContainer","containerId","useToastContainer","isToastActive","containerRef","getToastToRender","_","toastList","listTag","ListTag","total","ariaLabel","totalAriaLabel","indeterminate","numericValue","secondaryWrapperClasses","width","inputs","labelTemplate","onChangeRating","safeInputs","labelFn","onChange","fieldClasses","extraFieldAttrs","isLegendString","legendClass","legendText","srOnly","legendContent","FormGroup","currentValue","checked","Label","for","image","neutral","muted","deprecatedClasses","backgroundImage","selectComponents","IndicatorSeparator","isClearable","ClearIndicator","clearIndicatorProps","innerProps","restInnerProps","SelectBase","left","right","wrapperClassesLinkList","focusable","double","variant","appendIcon","prependIcon","noLine","stepperNumber","iconClass","spanClass","iconToAppend","iconToPepend","isSmall","fixedWidth","isVertical","noZoomOnHover","rowItems","overlayOnHover","targetUrl","imageUrl","actionDescription","resizer","controlsLabel","hoursLabel","minutesLabel","increaseHoursLabel","increaseMinutesLabel","decreaseHoursLabel","decreaseMinutesLabel","split","initialHours","initialMinutes","setIsOpen","hours","setHours","minutes","setMinutes","time","setTime","toggleFocus","onHoursChange","formattedValue","onMinutesChange","trim","onTimeChange","tabIndex","maxLength","timelineWrapper","past","now","nowText","pinIcon","pinLabel","pinTextNow","check","deletedItems"],"mappings":"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IjG,MAAM,0BAGlBkG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZA7G,KAAKqE,SAAW,CACd9B,SAAUkD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB7G,KAAKgE,SAGPhE,KAAKiE,SA7rBPE,GAgsBOK,IAQJ1C,GAOsBuI,EAAOvI,SAGtC,IACEwI,mBAAqBzI,EACrB,MAAO0I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC3I,gCC1uBpC4I,EAAoC,yBAChB,4BACE,mBACT,0BACO,4BACE,mBACT,2BACQ,6BACE,oBACT,wBACI,0BACE,iBACT,YACL,gBACI,iBACC,YACL,eACG,iBACE,eACF,aACF,mBACM,qBACE,cACP,qBACO,sBACC,aACT,cACC,kBACI,qBACG,cACP,oBACM,iBACH,gBACD,aACH,eACE,yBACU,iBACR,cACH,wBACU,eACT,sBACO,wBACE,iBACP,aACJ,cACC,aACD,sBACS,eACP,eACA,mBACI,eACJ,eACA,gBACC,oBACI,aACP,aACA,cACC,oBACM,kBACF,YACN,oBACQ,aACP,wBACW,iBACP,aACJ,aACA,eACE,aACF,0BACa,yBACD,wBACD,mBACL,qBACE,iBACJ,sBACK,eACP,iBACE,qBACI,cACP,qBACO,mBACF,aACN,oBACO,WACT,2BACgB,yBACF,eACV,oBACK,YACR,aACC,oBACO,aACP,qBACQ,cACP,gBACE,gBACA,mBACG,YACP,eACG,iBACE,cACH,iBACG,kBACC,qBACG,sBACC,iBACL,kBACC,aACL,uBACU,gBACP,iBACC,eACF,aACF,cACC,uBACS,gBACP,wBACQ,iBACP,aACJ,gBACG,gBACA,iBACC,GAIJC,EAAW,SAACrC,UACfA,OACD,8BACI,mCAAO,2CAEX,gCACI,mCAAO,6CAEX,uBACI,mCAAO,qCAEX,8BACI,mCAAO,2CAEX,gCACI,mCAAO,6CAEX,uBACI,mCAAO,qCAEX,+BACI,mCAAO,4CAEX,iCACI,mCAAO,8CAEX,wBACI,mCAAO,sCAEX,4BACI,mCAAO,yCAEX,8BACI,mCAAO,2CAEX,qBACI,mCAAO,mCAEX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"}