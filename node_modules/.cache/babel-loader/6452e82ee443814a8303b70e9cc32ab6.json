{"ast":null,"code":"import { createContext, createElement, PureComponent, Fragment, Component, createRef } from 'react';\nimport { ViewportProvider, cancelAnimationFrame, ObserveViewport, requestAnimationFrame } from 'react-viewport-utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar StickyGroupContext = createContext({\n  stickyOffset: {\n    top: 0,\n    height: 0\n  },\n  updateStickyOffset: function (offset, height) {}\n});\nvar connect = function () {\n  return function (WrappedComponent) {\n    var ConnectedComponent = function (props) {\n      return createElement(StickyGroupContext.Consumer, null, function (context) {\n        return createElement(WrappedComponent, __assign({}, props, {\n          stickyOffset: context.stickyOffset,\n          updateStickyOffset: context.updateStickyOffset\n        }));\n      });\n    };\n    var displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    ConnectedComponent.displayName = \"connectSticky(\" + displayName + \")\";\n    return ConnectedComponent;\n  };\n};\nvar StickyScrollUpProvider = /** @class */function (_super) {\n  __extends(StickyScrollUpProvider, _super);\n  function StickyScrollUpProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stickyOffset = {\n      top: 0,\n      height: 0\n    };\n    _this.updateStickyOffset = function (stickyOffset, height) {\n      _this.stickyOffset.top = Math.min(stickyOffset, height);\n      _this.stickyOffset.height = height;\n    };\n    return _this;\n  }\n  StickyScrollUpProvider.prototype.render = function () {\n    return createElement(ViewportProvider, {\n      experimentalSchedulerEnabled: true\n    }, createElement(StickyGroupContext.Provider, {\n      value: {\n        updateStickyOffset: this.updateStickyOffset,\n        stickyOffset: this.stickyOffset\n      }\n    }, this.props.children));\n  };\n  return StickyScrollUpProvider;\n}(PureComponent);\nvar baseStyles = {\n  width: 'inherit'\n};\nvar prefixTransform = function (transform) {\n  return {\n    transform: transform,\n    WebkitTransform: transform,\n    msTransform: transform,\n    OTransform: transform\n  };\n};\nvar StickyElement = function (_a) {\n  var children = _a.children,\n    forwardRef = _a.forwardRef,\n    _b = _a.style,\n    overrideStyles = _b === void 0 ? {} : _b,\n    _c = _a.positionStyle,\n    positionStyle = _c === void 0 ? {} : _c,\n    disabled = _a.disabled,\n    renderArgs = _a.renderArgs,\n    props = __rest(_a, [\"children\", \"forwardRef\", \"style\", \"positionStyle\", \"disabled\", \"renderArgs\"]);\n  var style = !disabled ? __assign(__assign(__assign({}, baseStyles), positionStyle), overrideStyles) : {};\n  if (style.transform) {\n    Object.assign(style, prefixTransform(style.transform));\n  }\n  return createElement(\"div\", __assign({\n    ref: forwardRef,\n    style: style\n  }, props), typeof children === 'function' ? children(renderArgs) : children);\n};\nvar ElementResizeObserver = /** @class */function (_super) {\n  __extends(ElementResizeObserver, _super);\n  function ElementResizeObserver(props) {\n    var _this = _super.call(this, props) || this;\n    _this.resizeObserver = null;\n    return _this;\n  }\n  ElementResizeObserver.prototype.componentDidMount = function () {\n    this.resetObserver();\n    this.installObserver();\n  };\n  ElementResizeObserver.prototype.componentDidUpdate = function () {\n    this.resetObserver();\n    this.installObserver();\n  };\n  ElementResizeObserver.prototype.componentWillUnmount = function () {\n    this.resetObserver();\n  };\n  ElementResizeObserver.prototype.installObserver = function () {\n    var _this = this;\n    if (!this.props.stickyRef.current) {\n      return;\n    }\n    if (typeof window.ResizeObserver !== 'undefined') {\n      this.resizeObserver = new window.ResizeObserver(function (entries) {\n        if (entries && entries[0] && entries[0].contentRect) {\n          _this.props.onUpdate(entries[0].contentRect);\n        }\n      });\n      this.resizeObserver.observe(this.props.stickyRef.current);\n    }\n  };\n  ElementResizeObserver.prototype.resetObserver = function () {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  };\n  ElementResizeObserver.prototype.render = function () {\n    return null;\n  };\n  return ElementResizeObserver;\n}(PureComponent);\nvar StickyPlaceholder = /** @class */function (_super) {\n  __extends(StickyPlaceholder, _super);\n  function StickyPlaceholder() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      isRecalculating: false,\n      isWaitingForRecalculation: false,\n      stickyHeight: null,\n      stickyWidth: null,\n      clientHash: null\n    };\n    _this.calculateSize = function () {\n      if (_this.props.stickyRef.current && !_this.state.isRecalculating && _this.state.isWaitingForRecalculation) {\n        return _this.props.stickyRef.current.getBoundingClientRect();\n      }\n      return null;\n    };\n    _this.handleDimensionsUpdate = function (_a, stickyRect) {\n      var dimensions = _a.dimensions;\n      if (_this.isUnmounted) {\n        return;\n      }\n      _this.lastDimensions = dimensions;\n      var width = dimensions.width,\n        clientWidth = dimensions.clientWidth;\n      var nextClientHash = [width, clientWidth].join(',');\n      if (!_this.state.isWaitingForRecalculation && _this.state.clientHash !== nextClientHash) {\n        _this.setState({\n          clientHash: nextClientHash,\n          isRecalculating: true,\n          isWaitingForRecalculation: true\n        }, function () {\n          if (_this.isUnmounted) {\n            return;\n          }\n          _this.recalculationTick = requestAnimationFrame(function () {\n            _this.setState({\n              isRecalculating: false\n            });\n            _this.recalculationTick = undefined;\n          });\n        });\n        return;\n      }\n      if (stickyRect) {\n        if (_this.state.isWaitingForRecalculation || stickyRect.height !== _this.state.stickyHeight || stickyRect.width !== _this.state.stickyWidth) {\n          _this.setState({\n            clientHash: nextClientHash,\n            stickyHeight: stickyRect.height,\n            stickyWidth: stickyRect.width,\n            isWaitingForRecalculation: false\n          });\n          return;\n        }\n      }\n    };\n    _this.handleElementResize = function (stickyRect) {\n      if (_this.lastDimensions) {\n        _this.handleDimensionsUpdate({\n          dimensions: _this.lastDimensions\n        }, stickyRect);\n      }\n    };\n    return _this;\n  }\n  StickyPlaceholder.prototype.componentWillUnmount = function () {\n    cancelAnimationFrame(this.recalculationTick);\n    this.isUnmounted = true;\n  };\n  StickyPlaceholder.prototype.render = function () {\n    var _a = this.props,\n      children = _a.children,\n      disabled = _a.disabled,\n      style = _a.style,\n      className = _a.className,\n      forwardRef = _a.forwardRef;\n    var _b = this.state,\n      isRecalculating = _b.isRecalculating,\n      isWaitingForRecalculation = _b.isWaitingForRecalculation,\n      stickyHeight = _b.stickyHeight,\n      stickyWidth = _b.stickyWidth;\n    var isActive = !disabled && !isWaitingForRecalculation;\n    var baseStyle = __assign({\n      position: 'relative'\n    }, style);\n    var containerStyle = isActive ? __assign({\n      height: stickyHeight,\n      width: stickyWidth\n    }, baseStyle) : baseStyle;\n    return createElement(Fragment, null, createElement(\"div\", {\n      ref: forwardRef,\n      style: containerStyle,\n      className: className\n    }, children({\n      isRecalculating: isWaitingForRecalculation\n    })), !this.props.disableResizing && createElement(Fragment, null, createElement(ObserveViewport, {\n      disableScrollUpdates: true,\n      disableDimensionsUpdates: isRecalculating,\n      onUpdate: this.handleDimensionsUpdate,\n      recalculateLayoutBeforeUpdate: this.calculateSize,\n      priority: \"highest\"\n    }), createElement(ElementResizeObserver, {\n      stickyRef: this.props.stickyRef,\n      onUpdate: this.handleElementResize\n    })));\n  };\n  StickyPlaceholder.defaultProps = {\n    style: {}\n  };\n  return StickyPlaceholder;\n}(Component);\nvar supportsWillChange = function () {\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && document.documentElement;\n  if (!isBrowser) {\n    return false;\n  }\n  return 'willChange' in document.documentElement.style;\n}();\nvar supportsPositionSticky = function () {\n  var isBrowser = typeof window !== 'undefined' && typeof CSS !== 'undefined';\n  if (!isBrowser) {\n    return false;\n  }\n  return CSS.supports ? CSS.supports('position: sticky') : false;\n}();\nvar shallowEqualPositionStyles = function (a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.position !== b.position) {\n    return false;\n  }\n  if (a.top !== b.top) {\n    return false;\n  }\n  if (a.transform !== b.transform) {\n    return false;\n  }\n  if (a.willChange !== b.willChange) {\n    return false;\n  }\n  return true;\n};\nvar Sticky = /** @class */function (_super) {\n  __extends(Sticky, _super);\n  function Sticky() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stickyRef = createRef();\n    _this.placeholderRef = createRef();\n    _this.nativeStickyThrewOnce = false;\n    _this.state = {\n      isSticky: false,\n      isDockedToBottom: false,\n      isNearToViewport: false,\n      appliedOverflowScroll: 'end',\n      styles: {},\n      useNativeSticky: false\n    };\n    _this.hasContainer = function () {\n      return Boolean(_this.props.container);\n    };\n    _this.isNearToViewport = function (rect) {\n      var padding = 700;\n      return rect.top - padding < 0 && rect.bottom + padding > 0;\n    };\n    _this.getOverflowScrollType = function (rectSticky, dimensions) {\n      return _this.props.overflowScroll === 'flow' && _this.calcHeightDifference(rectSticky, dimensions) > 0 ? 'flow' : 'end';\n    };\n    _this.isSticky = function (rect, containerRect, dimensions) {\n      if (!_this.hasContainer()) {\n        return Math.round(containerRect.top) <= _this.offsetTop;\n      }\n      if (Math.round(containerRect.top) > _this.offsetTop) {\n        return false;\n      }\n      var height = _this.props.overflowScroll === 'flow' ? Math.min(rect.height, dimensions.height) : rect.height;\n      if (Math.round(containerRect.bottom) - _this.offsetTop < height) {\n        return false;\n      }\n      return true;\n    };\n    _this.shouldUseNativeSticky = function (appliedOverflowScroll) {\n      if (!_this.props.experimentalNative || !supportsPositionSticky || appliedOverflowScroll !== 'end' || _this.props.stickyOffset.top !== 0) {\n        return false;\n      }\n      if (process.env.NODE_ENV !== 'production' && !_this.nativeStickyThrewOnce && (_this.placeholderRef && _this.placeholderRef.current.parentElement) !== (_this.props.container && _this.props.container.current)) {\n        console.warn('react-stickup: a sticky element was used with property `experimentalNative` but its `container` is not the parent the sticky component. As the native sticky implementation always uses its parent element as the container. This can lead to unexpected results. It is therefore recommended to change the DOM structure so that the container is a direct parent of the Sticky component or to remove the `experimentalNative` property.');\n        _this.nativeStickyThrewOnce = true;\n      }\n      return true;\n    };\n    _this.isDockedToBottom = function (rect, containerRect, dimensions) {\n      if (!rect || !containerRect) {\n        return false;\n      }\n      if (!_this.hasContainer()) {\n        return false;\n      }\n      if (rect.height > containerRect.height) {\n        return false;\n      }\n      var height = _this.props.overflowScroll === 'flow' ? Math.min(rect.height, dimensions.height) : rect.height;\n      if (Math.round(containerRect.bottom) - _this.offsetTop >= height) {\n        return false;\n      }\n      return true;\n    };\n    _this.recalculateLayoutBeforeUpdate = function () {\n      var containerRect = _this.container.current.getBoundingClientRect();\n      var stickyRect = _this.stickyRef.current.getBoundingClientRect();\n      return {\n        stickyRect: stickyRect,\n        containerRect: containerRect\n      };\n    };\n    _this.handleScrollUpdate = function (_a, _b) {\n      var scroll = _a.scroll,\n        dimensions = _a.dimensions;\n      var stickyRect = _b.stickyRect,\n        containerRect = _b.containerRect;\n      if (_this.props.disabled) {\n        return;\n      }\n      // in case children is not a function renderArgs will never be used\n      var willRenderAsAFunction = typeof _this.props.children === 'function';\n      var appliedOverflowScroll = _this.getOverflowScrollType(stickyRect, dimensions);\n      var useNativeSticky = _this.shouldUseNativeSticky(appliedOverflowScroll);\n      var styles = useNativeSticky ? {} : _this.getStickyStyles(stickyRect, containerRect, scroll, dimensions);\n      var stateStyles = _this.state.styles;\n      var stylesDidChange = !shallowEqualPositionStyles(styles, stateStyles);\n      var isSticky = willRenderAsAFunction ? _this.isSticky(stickyRect, containerRect, dimensions) : false;\n      var isDockedToBottom = willRenderAsAFunction ? _this.isDockedToBottom(stickyRect, containerRect, dimensions) : false;\n      var isNearToViewport = _this.isNearToViewport(stickyRect);\n      var useNativeStickyDidChange = _this.state.useNativeSticky !== useNativeSticky;\n      var isStickyDidChange = _this.state.isSticky !== isSticky;\n      var isDockedToBottomDidChange = _this.state.isDockedToBottom !== isDockedToBottom;\n      var isNearToViewportDidChange = _this.state.isNearToViewport !== isNearToViewport;\n      var appliedOverflowScrollDidChange = appliedOverflowScroll !== _this.state.appliedOverflowScroll;\n      if (!useNativeStickyDidChange && !stylesDidChange && !isStickyDidChange && !isDockedToBottomDidChange && !isNearToViewportDidChange && !appliedOverflowScrollDidChange) {\n        return;\n      }\n      _this.setState({\n        useNativeSticky: useNativeSticky,\n        isSticky: isSticky,\n        isDockedToBottom: isDockedToBottom,\n        isNearToViewport: isNearToViewport,\n        appliedOverflowScroll: appliedOverflowScroll,\n        styles: stylesDidChange ? styles : stateStyles\n      });\n    };\n    _this.renderSticky = function (_a) {\n      var isRecalculating = _a.isRecalculating;\n      var _b = _this.props,\n        children = _b.children,\n        disabled = _b.disabled,\n        stickyProps = _b.stickyProps;\n      return createElement(StickyElement, __assign({\n        forwardRef: _this.stickyRef,\n        positionStyle: _this.state.styles,\n        disabled: disabled || isRecalculating,\n        children: children,\n        renderArgs: {\n          isSticky: _this.state.isSticky,\n          isDockedToBottom: _this.state.isDockedToBottom,\n          isNearToViewport: _this.state.isNearToViewport,\n          appliedOverflowScroll: _this.state.appliedOverflowScroll\n        }\n      }, stickyProps));\n    };\n    return _this;\n  }\n  Object.defineProperty(Sticky.prototype, \"container\", {\n    get: function () {\n      return this.props.container || this.placeholderRef;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sticky.prototype, \"offsetTop\", {\n    get: function () {\n      return this.props.stickyOffset.top + this.props.defaultOffsetTop;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Sticky.prototype.calcHeightDifference = function (rectSticky, dimensions) {\n    if (!dimensions) {\n      return 0;\n    }\n    return Math.max(0, Math.round(rectSticky.height) - dimensions.height);\n  };\n  Sticky.prototype.calcOverflowScrollFlowStickyStyles = function (rectSticky, containerRect, scroll, dimensions) {\n    var containerTop = Math.round(containerRect.top);\n    var stickyTop = Math.round(rectSticky.top);\n    var scrollY = Math.round(scroll.y);\n    var scrollYTurn = Math.round(scroll.yTurn);\n    var heightDiff = this.calcHeightDifference(rectSticky, dimensions);\n    var containerTopOffset = containerTop + scrollY - this.props.stickyOffset.height;\n    var isStickyBottomReached = Math.round(rectSticky.bottom) <= dimensions.height;\n    var isContainerTopReached = containerTop < this.offsetTop;\n    var isTurnWithinHeightOffset = scrollYTurn - heightDiff <= containerTopOffset;\n    var isTurnPointBeforeContainer = scrollYTurn < containerTopOffset;\n    var isTurnPointAfterContainer = scrollYTurn > containerTopOffset + containerRect.height;\n    var isTurnPointWithinContainer = !(isTurnPointBeforeContainer || isTurnPointAfterContainer);\n    // scroll down AND sticky rect bottom not reached AND turn point not within the container OR\n    // scroll up AND container top not reached OR\n    //scroll up AND turns within the height diff AND turn point not within the container\n    if (scroll.isScrollingDown && !isStickyBottomReached && !isTurnPointWithinContainer || scroll.isScrollingUp && !isContainerTopReached || scroll.isScrollingUp && isTurnWithinHeightOffset && !isTurnPointWithinContainer) {\n      return {\n        position: 'absolute',\n        top: 0\n      };\n    }\n    // scroll down AND sticky bottom reached\n    if (scroll.isScrollingDown && isStickyBottomReached) {\n      return {\n        position: 'fixed',\n        top: -heightDiff\n      };\n    }\n    var isStickyTopReached = stickyTop >= this.offsetTop;\n    // scroll down AND turn point within container OR\n    // scroll up AND turn point not before container AND not sticky top reached\n    if (scroll.isScrollingDown && isTurnPointWithinContainer || scroll.isScrollingUp && !isTurnPointBeforeContainer && !isStickyTopReached) {\n      return {\n        position: 'absolute',\n        top: Math.abs(scrollY - stickyTop + (containerTop - scrollY))\n      };\n    }\n    return {\n      position: 'fixed',\n      top: this.offsetTop\n    };\n  };\n  Sticky.prototype.calcPositionStyles = function (rectSticky, containerRect, scroll, dimensions) {\n    if (this.isSticky(rectSticky, containerRect, dimensions)) {\n      if (this.getOverflowScrollType(rectSticky, dimensions) === 'flow') {\n        return this.calcOverflowScrollFlowStickyStyles(rectSticky, containerRect, scroll, dimensions);\n      }\n      var stickyOffset = this.props.stickyOffset.top;\n      var stickyHeight = this.props.stickyOffset.height;\n      var headIsFlexible = stickyOffset > 0 && stickyOffset < stickyHeight;\n      if (headIsFlexible) {\n        var relYTurn = Math.round(scroll.yTurn - scroll.y + scroll.yDTurn) - Math.round(containerRect.top);\n        return {\n          position: 'absolute',\n          top: relYTurn + this.offsetTop\n        };\n      }\n      return {\n        position: 'fixed',\n        top: this.offsetTop\n      };\n    }\n    if (this.isDockedToBottom(rectSticky, containerRect, dimensions)) {\n      return {\n        position: 'absolute',\n        top: containerRect.height - rectSticky.height\n      };\n    }\n    return {\n      position: 'absolute',\n      top: 0\n    };\n  };\n  Sticky.prototype.getStickyStyles = function (rect, containerRect, scroll, dimensions) {\n    var styles = this.calcPositionStyles(rect, containerRect, scroll, dimensions);\n    if (!this.props.disableHardwareAcceleration) {\n      var shouldAccelerate = this.isNearToViewport(rect);\n      if (supportsWillChange) {\n        styles.willChange = shouldAccelerate ? 'position, top' : null;\n      } else {\n        styles.transform = shouldAccelerate ? \"translateZ(0)\" : null;\n      }\n    }\n    return styles;\n  };\n  Sticky.prototype.render = function () {\n    var _a = this.props,\n      disabled = _a.disabled,\n      disableResizing = _a.disableResizing,\n      style = _a.style,\n      className = _a.className,\n      overflowScroll = _a.overflowScroll;\n    return createElement(Fragment, null, createElement(StickyPlaceholder, {\n      className: className,\n      style: this.state.useNativeSticky ? __assign({\n        position: 'sticky',\n        top: this.props.defaultOffsetTop\n      }, style) : style,\n      disabled: disabled,\n      forwardRef: this.placeholderRef,\n      stickyRef: this.stickyRef,\n      disableResizing: disableResizing\n    }, this.renderSticky), createElement(ObserveViewport, {\n      disableScrollUpdates: disabled,\n      disableDimensionsUpdates: disabled || overflowScroll !== 'flow',\n      onUpdate: this.handleScrollUpdate,\n      recalculateLayoutBeforeUpdate: this.recalculateLayoutBeforeUpdate,\n      priority: this.state.isNearToViewport ? 'highest' : 'low'\n    }));\n  };\n  Sticky.defaultProps = {\n    stickyOffset: {\n      top: 0,\n      height: 0\n    },\n    defaultOffsetTop: 0,\n    disableResizing: false,\n    disableHardwareAcceleration: false,\n    overflowScroll: 'end',\n    experimentalNative: false,\n    style: {}\n  };\n  return Sticky;\n}(PureComponent);\nvar Sticky$1 = connect()(Sticky);\nvar calcPositionStyles = function (rect, scroll, _a) {\n  var _b = _a.offsetTop,\n    offsetTop = _b === void 0 ? 0 : _b;\n  var rectTop = Math.round(rect.top);\n  var scrollY = Math.round(scroll.y);\n  if (scroll.isScrollingDown) {\n    // disable sticky mode above the top offset while scrolling down\n    if (rectTop > 0 && scrollY < offsetTop) {\n      return {\n        position: 'absolute',\n        top: 0\n      };\n    }\n    // element is visible and scrolls down\n    return {\n      position: 'absolute',\n      top: Math.max(scrollY - offsetTop + rectTop, 0)\n    };\n  }\n  var isTopVisible = rectTop >= 0;\n  var isBottomVisible = rectTop + rect.height <= 0;\n  // element is visible and scrolls up\n  if (!isTopVisible && !isBottomVisible) {\n    return {\n      position: 'absolute',\n      top: scrollY - offsetTop + rectTop\n    };\n  }\n  // disable sticky mode above the top offset while scrolling up\n  if (scrollY <= offsetTop) {\n    return {\n      position: 'absolute',\n      top: 0\n    };\n  }\n  if (Math.round(scroll.yDTurn) === 0) {\n    // scroll direction changed from down to up and the element was not visible\n    if (isBottomVisible) {\n      return {\n        position: 'absolute',\n        top: Math.round(scroll.yTurn) - offsetTop - rect.height\n      };\n    }\n    // scroll direction changed from down to up and the element was fully visible\n    return {\n      position: 'absolute',\n      top: Math.max(scrollY - offsetTop, 0)\n    };\n  }\n  // set sticky\n  return {\n    position: 'fixed',\n    top: 0\n  };\n};\nvar StickyScrollUp = /** @class */function (_super) {\n  __extends(StickyScrollUp, _super);\n  function StickyScrollUp() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stickyRef = createRef();\n    _this.placeholderRef = createRef();\n    _this.stickyOffset = null;\n    _this.stickyOffsetHeight = 0;\n    _this.state = {\n      styles: {},\n      isNearToViewport: false,\n      isSticky: false\n    };\n    _this.isNearToViewport = function (rect) {\n      var padding = 700;\n      return rect.top - padding < 0;\n    };\n    _this.recalculateLayoutBeforeUpdate = function () {\n      return {\n        placeholderRect: _this.placeholderRef.current.getBoundingClientRect(),\n        stickyRect: _this.stickyRef.current.getBoundingClientRect()\n      };\n    };\n    _this.handleViewportUpdate = function (_a, _b) {\n      var scroll = _a.scroll;\n      var stickyRect = _b.stickyRect,\n        placeholderRect = _b.placeholderRect;\n      if (_this.props.disabled) {\n        return;\n      }\n      // in case children is not a function renderArgs will never be used\n      var willRenderAsAFunction = typeof _this.props.children === 'function';\n      var nextOffset = Math.max(Math.round(stickyRect.bottom), 0);\n      var nextOffsetHeight = stickyRect.height;\n      var offsetDidChange = _this.stickyOffset !== nextOffset;\n      var offsetHeightDidChange = _this.stickyOffsetHeight !== nextOffsetHeight;\n      var styles = _this.getStickyStyles(stickyRect, placeholderRect, scroll);\n      var stateStyles = _this.state.styles;\n      var stylesDidChange = !shallowEqualPositionStyles(styles, stateStyles);\n      var isNearToViewport = _this.isNearToViewport(stickyRect);\n      var isSticky = willRenderAsAFunction ? styles.top === 0 && styles.position === 'fixed' : false;\n      var isNearToViewportDidChange = _this.state.isNearToViewport !== isNearToViewport;\n      var isStickyDidChange = _this.state.isSticky !== isSticky;\n      if (_this.props.updateStickyOffset && (offsetDidChange || offsetHeightDidChange)) {\n        _this.props.updateStickyOffset(nextOffset, nextOffsetHeight);\n      }\n      if (!stylesDidChange && !isNearToViewportDidChange && !isStickyDidChange) {\n        return;\n      }\n      _this.setState({\n        styles: stylesDidChange ? styles : stateStyles,\n        isNearToViewport: isNearToViewport,\n        isSticky: isSticky\n      });\n    };\n    _this.renderSticky = function (_a) {\n      var isRecalculating = _a.isRecalculating;\n      var _b = _this.props,\n        disabled = _b.disabled,\n        children = _b.children,\n        stickyProps = _b.stickyProps;\n      return createElement(StickyElement, __assign({\n        forwardRef: _this.stickyRef,\n        positionStyle: _this.state.styles,\n        disabled: disabled || isRecalculating,\n        children: children,\n        renderArgs: {\n          isNearToViewport: _this.state.isNearToViewport,\n          isSticky: _this.state.isSticky\n        }\n      }, stickyProps));\n    };\n    return _this;\n  }\n  StickyScrollUp.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this.props.updateStickyOffset && prevProps.disabled !== this.props.disabled) {\n      this.props.updateStickyOffset(this.props.disabled ? 0 : this.stickyOffset, this.stickyOffsetHeight);\n    }\n  };\n  StickyScrollUp.prototype.getStickyStyles = function (stickyRect, placeholderRect, scroll) {\n    var offsetTop = isNaN(this.props.defaultOffsetTop) ? Math.round(placeholderRect.top) + Math.round(scroll.y) : this.props.defaultOffsetTop;\n    var styles = calcPositionStyles(stickyRect, scroll, {\n      offsetTop: offsetTop\n    });\n    if (!this.props.disableHardwareAcceleration) {\n      var shouldAccelerate = this.isNearToViewport(stickyRect);\n      if (supportsWillChange) {\n        styles.willChange = shouldAccelerate ? 'position, top' : null;\n      } else {\n        styles.transform = shouldAccelerate ? \"translateZ(0)\" : null;\n      }\n    }\n    return styles;\n  };\n  StickyScrollUp.prototype.render = function () {\n    var _a = this.props,\n      disabled = _a.disabled,\n      disableResizing = _a.disableResizing,\n      style = _a.style,\n      className = _a.className;\n    return createElement(Fragment, null, createElement(StickyPlaceholder, {\n      className: className,\n      style: style,\n      disabled: disabled,\n      stickyRef: this.stickyRef,\n      disableResizing: disableResizing,\n      forwardRef: this.placeholderRef\n    }, this.renderSticky), createElement(ObserveViewport, {\n      disableScrollUpdates: disabled,\n      disableDimensionsUpdates: true,\n      onUpdate: this.handleViewportUpdate,\n      recalculateLayoutBeforeUpdate: this.recalculateLayoutBeforeUpdate,\n      priority: this.state.isNearToViewport ? 'highest' : 'low'\n    }));\n  };\n  StickyScrollUp.defaultProps = {\n    disableHardwareAcceleration: false,\n    disableResizing: false,\n    style: {}\n  };\n  return StickyScrollUp;\n}(PureComponent);\nvar StickyScrollUp$1 = connect()(StickyScrollUp);\nexport { Sticky$1 as Sticky, StickyScrollUpProvider as StickyProvider, StickyScrollUp$1 as StickyScrollUp };","map":{"version":3,"mappings":"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","names":["StickyGroupContext","React.createContext","stickyOffset","top","height","updateStickyOffset","offset","connect","WrappedComponent","ConnectedComponent","React.createElement","Consumer","props","context","displayName","name","__extends","_this","Math","min","StickyScrollUpProvider","ViewportProvider","experimentalSchedulerEnabled","Provider","value","children","React.PureComponent","baseStyles","width","prefixTransform","transform","WebkitTransform","msTransform","OTransform","StickyElement","_a","forwardRef","_b","overrideStyles","_c","positionStyle","disabled","renderArgs","style","Object","assign","ref","_super","resizeObserver","ElementResizeObserver","resetObserver","installObserver","stickyRef","current","window","ResizeObserver","entries","contentRect","onUpdate","observe","disconnect","isRecalculating","isWaitingForRecalculation","stickyHeight","stickyWidth","clientHash","state","getBoundingClientRect","stickyRect","dimensions","isUnmounted","lastDimensions","clientWidth","nextClientHash","join","setState","recalculationTick","requestAnimationFrame","undefined","handleDimensionsUpdate","StickyPlaceholder","cancelAnimationFrame","className","isActive","baseStyle","__assign","position","containerStyle","disableResizing","ObserveViewport","disableScrollUpdates","disableDimensionsUpdates","recalculateLayoutBeforeUpdate","calculateSize","priority","handleElementResize","React.Component","supportsWillChange","isBrowser","document","documentElement","supportsPositionSticky","CSS","supports","shallowEqualPositionStyles","a","b","willChange","React.createRef","isSticky","isDockedToBottom","isNearToViewport","appliedOverflowScroll","styles","useNativeSticky","Boolean","container","rect","padding","bottom","rectSticky","overflowScroll","calcHeightDifference","containerRect","hasContainer","round","offsetTop","experimentalNative","process","env","NODE_ENV","nativeStickyThrewOnce","placeholderRef","parentElement","console","warn","scroll","willRenderAsAFunction","getOverflowScrollType","shouldUseNativeSticky","getStickyStyles","stateStyles","stylesDidChange","useNativeStickyDidChange","isStickyDidChange","isDockedToBottomDidChange","isNearToViewportDidChange","appliedOverflowScrollDidChange","stickyProps","Sticky","defaultOffsetTop","max","containerTop","stickyTop","scrollY","y","scrollYTurn","yTurn","heightDiff","containerTopOffset","isStickyBottomReached","isContainerTopReached","isTurnWithinHeightOffset","isTurnPointBeforeContainer","isTurnPointAfterContainer","isTurnPointWithinContainer","isScrollingDown","isScrollingUp","isStickyTopReached","abs","calcOverflowScrollFlowStickyStyles","headIsFlexible","relYTurn","yDTurn","calcPositionStyles","disableHardwareAcceleration","shouldAccelerate","renderSticky","handleScrollUpdate","connectStickyProvider","rectTop","isTopVisible","isBottomVisible","placeholderRect","nextOffset","nextOffsetHeight","offsetDidChange","offsetHeightDidChange","stickyOffsetHeight","StickyScrollUp","prevProps","prevState","isNaN","handleViewportUpdate"],"sources":["/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/StickyProvider.tsx","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/StickyElement.tsx","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/ElementResizeObserver.tsx","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/StickyPlaceholder.tsx","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/utils.ts","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/Sticky.tsx","/Users/sabrinabongiovanni/ricerca-documenti/ricerca-documenti/node_modules/react-stickup/lib/StickyScrollUp.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ViewportProvider } from 'react-viewport-utils';\n\nimport { IStickyInjectedProps } from './types';\n\nconst StickyGroupContext = React.createContext({\n  stickyOffset: { top: 0, height: 0 },\n  updateStickyOffset: (offset: number, height: number) => {},\n});\n\nexport const connect = () => <P extends object>(\n  WrappedComponent: React.ComponentType<P & IStickyInjectedProps>,\n) => {\n  const ConnectedComponent: React.SFC<P> = props => (\n    <StickyGroupContext.Consumer>\n      {context => (\n        <WrappedComponent\n          {...props}\n          stickyOffset={context.stickyOffset}\n          updateStickyOffset={context.updateStickyOffset}\n        />\n      )}\n    </StickyGroupContext.Consumer>\n  );\n\n  const displayName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  ConnectedComponent.displayName = `connectSticky(${displayName})`;\n\n  return ConnectedComponent;\n};\n\nexport default class StickyScrollUpProvider extends React.PureComponent {\n  stickyOffset = {\n    top: 0,\n    height: 0,\n  };\n\n  updateStickyOffset = (stickyOffset: number, height: number) => {\n    this.stickyOffset.top = Math.min(stickyOffset, height);\n    this.stickyOffset.height = height;\n  };\n\n  render() {\n    return (\n      <ViewportProvider experimentalSchedulerEnabled>\n        <StickyGroupContext.Provider\n          value={{\n            updateStickyOffset: this.updateStickyOffset,\n            stickyOffset: this.stickyOffset,\n          }}\n        >\n          {this.props.children}\n        </StickyGroupContext.Provider>\n      </ViewportProvider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { TRenderChildren, IPositionStyles } from './types';\n\ninterface IProps<R> {\n  disabled: boolean;\n  renderArgs?: R;\n  children: TRenderChildren<R>;\n  forwardRef?: React.RefObject<any>;\n  style?: React.CSSProperties;\n  positionStyle?: IPositionStyles;\n}\n\nconst baseStyles: React.CSSProperties = {\n  width: 'inherit',\n};\n\nconst prefixTransform = (transform: string): React.CSSProperties => ({\n  transform,\n  WebkitTransform: transform,\n  msTransform: transform,\n  OTransform: transform,\n});\n\nconst StickyElement = <R extends {}>({\n  children,\n  forwardRef,\n  style: overrideStyles = {},\n  positionStyle = {},\n  disabled,\n  renderArgs,\n  ...props\n}: IProps<R>) => {\n  const style: React.CSSProperties = !disabled\n    ? { ...baseStyles, ...positionStyle, ...overrideStyles }\n    : {};\n\n  if (style.transform) {\n    Object.assign(style, prefixTransform(style.transform));\n  }\n\n  return (\n    <div ref={forwardRef} style={style} {...props}>\n      {typeof children === 'function'\n        ? (children as (options: R) => React.ReactNode)(renderArgs)\n        : children}\n    </div>\n  );\n};\n\nexport default StickyElement;\n","import * as React from 'react';\nimport { IRect } from 'react-viewport-utils';\n\ninterface IElementResizeObserverProps {\n  stickyRef: React.RefObject<any>;\n  onUpdate: (rect: IRect) => void;\n}\n\nclass ElementResizeObserver extends React.PureComponent<\n  IElementResizeObserverProps\n> {\n  private resizeObserver: ResizeObserver | null;\n  constructor(props: IElementResizeObserverProps) {\n    super(props);\n    this.resizeObserver = null;\n  }\n\n  componentDidMount() {\n    this.resetObserver();\n    this.installObserver();\n  }\n\n  componentDidUpdate() {\n    this.resetObserver();\n    this.installObserver();\n  }\n\n  componentWillUnmount() {\n    this.resetObserver();\n  }\n\n  installObserver() {\n    if (!this.props.stickyRef.current) {\n      return;\n    }\n    if (typeof window.ResizeObserver !== 'undefined') {\n      this.resizeObserver = new window.ResizeObserver(entries => {\n        if (entries && entries[0] && entries[0].contentRect) {\n          this.props.onUpdate(entries[0].contentRect);\n        }\n      });\n      this.resizeObserver!.observe(this.props.stickyRef.current);\n    }\n  }\n\n  resetObserver() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n\n  render(): null {\n    return null;\n  }\n}\n\nexport default ElementResizeObserver;\n","import * as React from 'react';\nimport {\n  ObserveViewport,\n  IDimensions,\n  IRect,\n  requestAnimationFrame,\n  cancelAnimationFrame,\n} from 'react-viewport-utils';\nimport ElementResizeObserver from './ElementResizeObserver';\n\ninterface IProps {\n  disableResizing: boolean;\n  disabled: boolean;\n  style: React.CSSProperties | null;\n  stickyRef: React.RefObject<any>;\n  children: (props: { isRecalculating: boolean }) => React.ReactNode;\n  className?: string;\n  forwardRef?: React.RefObject<any>;\n}\n\ninterface IState {\n  isRecalculating: boolean;\n  isWaitingForRecalculation: boolean;\n  stickyHeight: number | null;\n  stickyWidth: number | null;\n  clientHash: string | null;\n}\n\nclass StickyPlaceholder extends React.Component<IProps, IState> {\n  private recalculationTick?: number;\n  private isUnmounted?: boolean;\n  private lastDimensions?: IDimensions;\n  static defaultProps = {\n    style: {},\n  };\n\n  state: IState = {\n    isRecalculating: false,\n    isWaitingForRecalculation: false,\n    stickyHeight: null,\n    stickyWidth: null,\n    clientHash: null,\n  };\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.recalculationTick);\n    this.isUnmounted = true;\n  }\n\n  calculateSize = () => {\n    if (\n      this.props.stickyRef.current &&\n      !this.state.isRecalculating &&\n      this.state.isWaitingForRecalculation\n    ) {\n      return this.props.stickyRef.current.getBoundingClientRect();\n    }\n    return null;\n  };\n\n  handleDimensionsUpdate = (\n    { dimensions }: { dimensions: IDimensions },\n    stickyRect: IRect | null,\n  ) => {\n    if (this.isUnmounted) {\n      return;\n    }\n    this.lastDimensions = dimensions;\n    const { width, clientWidth } = dimensions;\n    const nextClientHash = [width, clientWidth].join(',');\n\n    if (\n      !this.state.isWaitingForRecalculation &&\n      this.state.clientHash !== nextClientHash\n    ) {\n      this.setState(\n        {\n          clientHash: nextClientHash,\n          isRecalculating: true,\n          isWaitingForRecalculation: true,\n        },\n        () => {\n          if (this.isUnmounted) {\n            return;\n          }\n          this.recalculationTick = requestAnimationFrame(() => {\n            this.setState({\n              isRecalculating: false,\n            });\n            this.recalculationTick = undefined;\n          });\n        },\n      );\n      return;\n    }\n\n    if (stickyRect) {\n      if (\n        this.state.isWaitingForRecalculation ||\n        stickyRect.height !== this.state.stickyHeight ||\n        stickyRect.width !== this.state.stickyWidth\n      ) {\n        this.setState({\n          clientHash: nextClientHash,\n          stickyHeight: stickyRect.height,\n          stickyWidth: stickyRect.width,\n          isWaitingForRecalculation: false,\n        });\n        return;\n      }\n    }\n  };\n\n  handleElementResize = (stickyRect: IRect) => {\n    if (this.lastDimensions) {\n      this.handleDimensionsUpdate(\n        { dimensions: this.lastDimensions },\n        stickyRect,\n      );\n    }\n  };\n\n  render() {\n    const { children, disabled, style, className, forwardRef } = this.props;\n    const {\n      isRecalculating,\n      isWaitingForRecalculation,\n      stickyHeight,\n      stickyWidth,\n    } = this.state;\n    const isActive = !disabled && !isWaitingForRecalculation;\n    const baseStyle = { position: 'relative', ...style } as const;\n    const containerStyle: React.CSSProperties = isActive\n      ? ({\n          height: stickyHeight,\n          width: stickyWidth,\n          ...baseStyle,\n        } as const)\n      : baseStyle;\n    return (\n      <>\n        <div ref={forwardRef} style={containerStyle} className={className}>\n          {children({\n            isRecalculating: isWaitingForRecalculation,\n          })}\n        </div>\n        {!this.props.disableResizing && (\n          <>\n            <ObserveViewport\n              disableScrollUpdates\n              disableDimensionsUpdates={isRecalculating}\n              onUpdate={this.handleDimensionsUpdate}\n              recalculateLayoutBeforeUpdate={this.calculateSize}\n              priority=\"highest\"\n            />\n            <ElementResizeObserver\n              stickyRef={this.props.stickyRef}\n              onUpdate={this.handleElementResize}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default StickyPlaceholder;\n","import { IPositionStyles } from './types';\n\nexport const supportsWillChange = (() => {\n  const isBrowser =\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    document.documentElement;\n  if (!isBrowser) {\n    return false;\n  }\n  return 'willChange' in document.documentElement.style;\n})();\n\nexport const supportsPositionSticky = (() => {\n  const isBrowser = typeof window !== 'undefined' && typeof CSS !== 'undefined';\n  if (!isBrowser) {\n    return false;\n  }\n  return CSS.supports ? CSS.supports('position: sticky') : false;\n})();\n\nexport const shallowEqualPositionStyles = (\n  a: IPositionStyles,\n  b: IPositionStyles,\n) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.position !== b.position) {\n    return false;\n  }\n  if (a.top !== b.top) {\n    return false;\n  }\n  if (a.transform !== b.transform) {\n    return false;\n  }\n  if (a.willChange !== b.willChange) {\n    return false;\n  }\n  return true;\n};\n","import * as React from 'react';\nimport {\n  ObserveViewport,\n  IRect,\n  IScroll,\n  IDimensions,\n} from 'react-viewport-utils';\n\nimport { connect as connectStickyProvider } from './StickyProvider';\nimport StickyElement from './StickyElement';\nimport StickyPlaceholder from './StickyPlaceholder';\nimport {\n  TRenderChildren,\n  IStickyComponentProps,\n  IStickyInjectedProps,\n  IPositionStyles,\n} from './types';\nimport {\n  supportsWillChange,\n  shallowEqualPositionStyles,\n  supportsPositionSticky,\n} from './utils';\n\ntype OverflowScrollType = 'flow' | 'end';\n\ninterface IOwnProps extends IStickyComponentProps {\n  /**\n   * The reference to the container to stick into. If this is not set, the component will be sticky regardless how far the user scrolls down.\n   */\n  container?: React.RefObject<any>;\n  /**\n   * The child node that is rendered within the sticky container. When rendered as a function it will add further information the the function which can be used e.g. to update stylings.\n   */\n  children?: TRenderChildren<{\n    isSticky: boolean;\n    isDockedToBottom: boolean;\n    isNearToViewport: boolean;\n    appliedOverflowScroll: OverflowScrollType;\n  }>;\n  /**\n   * Defines how the sticky element should react in case its bigger than the viewport.\n   * Different options are available:\n   * * end: The default value will keep the component sticky as long as it reaches the bottom of its container and only then will scroll down.\n   * * flow: The element scrolls with the flow of the scroll direction, therefore the content is easier to access.\n   */\n  overflowScroll?: OverflowScrollType;\n  /**\n   * A top offset to create a padding between the browser window and the sticky component when sticky.\n   */\n  defaultOffsetTop?: number;\n  /**\n   * Tries to detect when the usage of native `position: sticky` is possible and uses it as long as possible. This is an experimental property and might change in its behavior or disappear in the future.\n   */\n  experimentalNative?: boolean;\n}\n\ninterface IProps extends IOwnProps, IStickyInjectedProps {}\n\ninterface IState {\n  isSticky: boolean;\n  isDockedToBottom: boolean;\n  isNearToViewport: boolean;\n  appliedOverflowScroll: OverflowScrollType;\n  styles: IPositionStyles;\n  useNativeSticky: boolean;\n}\n\ninterface ILayoutSnapshot {\n  stickyRect: IRect;\n  containerRect: IRect;\n}\n\nclass Sticky extends React.PureComponent<IProps, IState> {\n  private stickyRef: React.RefObject<HTMLElement> = React.createRef();\n  private placeholderRef: React.RefObject<HTMLElement> = React.createRef();\n  private nativeStickyThrewOnce: boolean = false;\n\n  static defaultProps = {\n    stickyOffset: { top: 0, height: 0 },\n    defaultOffsetTop: 0,\n    disableResizing: false,\n    disableHardwareAcceleration: false,\n    overflowScroll: 'end' as OverflowScrollType,\n    experimentalNative: false,\n    style: {},\n  };\n\n  state: IState = {\n    isSticky: false,\n    isDockedToBottom: false,\n    isNearToViewport: false,\n    appliedOverflowScroll: 'end',\n    styles: {},\n    useNativeSticky: false,\n  };\n\n  get container() {\n    return this.props.container || this.placeholderRef;\n  }\n\n  get offsetTop() {\n    return this.props.stickyOffset.top + this.props.defaultOffsetTop;\n  }\n\n  hasContainer = () => {\n    return Boolean(this.props.container);\n  };\n\n  isNearToViewport = (rect: IRect): boolean => {\n    const padding = 700;\n    return rect.top - padding < 0 && rect.bottom + padding > 0;\n  };\n\n  getOverflowScrollType = (\n    rectSticky: IRect,\n    dimensions: IDimensions,\n  ): OverflowScrollType => {\n    return this.props.overflowScroll === 'flow' &&\n      this.calcHeightDifference(rectSticky, dimensions) > 0\n      ? 'flow'\n      : 'end';\n  };\n\n  isSticky = (rect: IRect, containerRect: IRect, dimensions: IDimensions) => {\n    if (!this.hasContainer()) {\n      return Math.round(containerRect.top) <= this.offsetTop;\n    }\n\n    if (Math.round(containerRect.top) > this.offsetTop) {\n      return false;\n    }\n\n    const height =\n      this.props.overflowScroll === 'flow'\n        ? Math.min(rect.height, dimensions.height)\n        : rect.height;\n    if (Math.round(containerRect.bottom) - this.offsetTop < height) {\n      return false;\n    }\n\n    return true;\n  };\n\n  shouldUseNativeSticky = (appliedOverflowScroll: OverflowScrollType) => {\n    if (\n      !this.props.experimentalNative ||\n      !supportsPositionSticky ||\n      appliedOverflowScroll !== 'end' ||\n      this.props.stickyOffset.top !== 0\n    ) {\n      return false;\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !this.nativeStickyThrewOnce &&\n      (this.placeholderRef && this.placeholderRef.current.parentElement) !==\n        (this.props.container && this.props.container.current)\n    ) {\n      console.warn(\n        'react-stickup: a sticky element was used with property `experimentalNative` but its `container` is not the parent the sticky component. As the native sticky implementation always uses its parent element as the container. This can lead to unexpected results. It is therefore recommended to change the DOM structure so that the container is a direct parent of the Sticky component or to remove the `experimentalNative` property.',\n      );\n      this.nativeStickyThrewOnce = true;\n    }\n    return true;\n  };\n\n  isDockedToBottom = (\n    rect: IRect,\n    containerRect: IRect,\n    dimensions: IDimensions,\n  ) => {\n    if (!rect || !containerRect) {\n      return false;\n    }\n\n    if (!this.hasContainer()) {\n      return false;\n    }\n\n    if (rect.height > containerRect.height) {\n      return false;\n    }\n\n    const height =\n      this.props.overflowScroll === 'flow'\n        ? Math.min(rect.height, dimensions.height)\n        : rect.height;\n    if (Math.round(containerRect.bottom) - this.offsetTop >= height) {\n      return false;\n    }\n\n    return true;\n  };\n\n  calcHeightDifference(rectSticky: IRect, dimensions: IDimensions) {\n    if (!dimensions) {\n      return 0;\n    }\n    return Math.max(0, Math.round(rectSticky.height) - dimensions.height);\n  }\n\n  calcOverflowScrollFlowStickyStyles(\n    rectSticky: IRect,\n    containerRect: IRect,\n    scroll: IScroll,\n    dimensions: IDimensions,\n  ): IPositionStyles {\n    const containerTop = Math.round(containerRect.top);\n    const stickyTop = Math.round(rectSticky.top);\n    const scrollY = Math.round(scroll.y);\n    const scrollYTurn = Math.round(scroll.yTurn);\n    const heightDiff = this.calcHeightDifference(rectSticky, dimensions);\n    const containerTopOffset =\n      containerTop + scrollY - this.props.stickyOffset.height;\n    const isStickyBottomReached =\n      Math.round(rectSticky.bottom) <= dimensions.height;\n    const isContainerTopReached = containerTop < this.offsetTop;\n    const isTurnWithinHeightOffset =\n      scrollYTurn - heightDiff <= containerTopOffset;\n    const isTurnPointBeforeContainer = scrollYTurn < containerTopOffset;\n    const isTurnPointAfterContainer =\n      scrollYTurn > containerTopOffset + containerRect.height;\n    const isTurnPointWithinContainer = !(\n      isTurnPointBeforeContainer || isTurnPointAfterContainer\n    );\n    // scroll down AND sticky rect bottom not reached AND turn point not within the container OR\n    // scroll up AND container top not reached OR\n    //scroll up AND turns within the height diff AND turn point not within the container\n    if (\n      (scroll.isScrollingDown &&\n        !isStickyBottomReached &&\n        !isTurnPointWithinContainer) ||\n      (scroll.isScrollingUp && !isContainerTopReached) ||\n      (scroll.isScrollingUp &&\n        isTurnWithinHeightOffset &&\n        !isTurnPointWithinContainer)\n    ) {\n      return {\n        position: 'absolute',\n        top: 0,\n      };\n    }\n\n    // scroll down AND sticky bottom reached\n    if (scroll.isScrollingDown && isStickyBottomReached) {\n      return {\n        position: 'fixed',\n        top: -heightDiff,\n      };\n    }\n\n    const isStickyTopReached = stickyTop >= this.offsetTop;\n    // scroll down AND turn point within container OR\n    // scroll up AND turn point not before container AND not sticky top reached\n    if (\n      (scroll.isScrollingDown && isTurnPointWithinContainer) ||\n      (scroll.isScrollingUp &&\n        !isTurnPointBeforeContainer &&\n        !isStickyTopReached)\n    ) {\n      return {\n        position: 'absolute',\n        top: Math.abs(scrollY - stickyTop + (containerTop - scrollY)),\n      };\n    }\n\n    return {\n      position: 'fixed',\n      top: this.offsetTop,\n    };\n  }\n\n  calcPositionStyles(\n    rectSticky: IRect,\n    containerRect: IRect,\n    scroll: IScroll,\n    dimensions: IDimensions,\n  ): IPositionStyles {\n    if (this.isSticky(rectSticky, containerRect, dimensions)) {\n      if (this.getOverflowScrollType(rectSticky, dimensions) === 'flow') {\n        return this.calcOverflowScrollFlowStickyStyles(\n          rectSticky,\n          containerRect,\n          scroll,\n          dimensions,\n        );\n      }\n      const stickyOffset = this.props.stickyOffset.top;\n      const stickyHeight = this.props.stickyOffset.height;\n      const headIsFlexible = stickyOffset > 0 && stickyOffset < stickyHeight;\n      if (headIsFlexible) {\n        const relYTurn =\n          Math.round(scroll.yTurn - scroll.y + scroll.yDTurn) -\n          Math.round(containerRect.top);\n        return {\n          position: 'absolute',\n          top: relYTurn + this.offsetTop,\n        };\n      }\n\n      return {\n        position: 'fixed',\n        top: this.offsetTop,\n      };\n    }\n\n    if (this.isDockedToBottom(rectSticky, containerRect, dimensions)) {\n      return {\n        position: 'absolute',\n        top: containerRect.height - rectSticky.height,\n      };\n    }\n\n    return {\n      position: 'absolute',\n      top: 0,\n    };\n  }\n\n  getStickyStyles(\n    rect: IRect,\n    containerRect: IRect,\n    scroll: IScroll,\n    dimensions: IDimensions,\n  ): IPositionStyles {\n    const styles = this.calcPositionStyles(\n      rect,\n      containerRect,\n      scroll,\n      dimensions,\n    );\n\n    if (!this.props.disableHardwareAcceleration) {\n      const shouldAccelerate = this.isNearToViewport(rect);\n      if (supportsWillChange) {\n        styles.willChange = shouldAccelerate ? 'position, top' : null;\n      } else {\n        styles.transform = shouldAccelerate ? `translateZ(0)` : null;\n      }\n    }\n\n    return styles;\n  }\n\n  recalculateLayoutBeforeUpdate = (): ILayoutSnapshot => {\n    const containerRect = this.container.current.getBoundingClientRect();\n    const stickyRect = this.stickyRef.current.getBoundingClientRect();\n    return {\n      stickyRect,\n      containerRect,\n    };\n  };\n\n  handleScrollUpdate = (\n    { scroll, dimensions }: { scroll: IScroll; dimensions: IDimensions },\n    { stickyRect, containerRect }: ILayoutSnapshot,\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // in case children is not a function renderArgs will never be used\n    const willRenderAsAFunction = typeof this.props.children === 'function';\n    const appliedOverflowScroll = this.getOverflowScrollType(\n      stickyRect,\n      dimensions,\n    );\n\n    const useNativeSticky = this.shouldUseNativeSticky(appliedOverflowScroll);\n\n    const styles = useNativeSticky\n      ? {}\n      : this.getStickyStyles(stickyRect, containerRect, scroll, dimensions);\n    const stateStyles = this.state.styles;\n    const stylesDidChange = !shallowEqualPositionStyles(styles, stateStyles);\n    const isSticky = willRenderAsAFunction\n      ? this.isSticky(stickyRect, containerRect, dimensions)\n      : false;\n    const isDockedToBottom = willRenderAsAFunction\n      ? this.isDockedToBottom(stickyRect, containerRect, dimensions)\n      : false;\n    const isNearToViewport = this.isNearToViewport(stickyRect);\n    const useNativeStickyDidChange =\n      this.state.useNativeSticky !== useNativeSticky;\n    const isStickyDidChange = this.state.isSticky !== isSticky;\n    const isDockedToBottomDidChange =\n      this.state.isDockedToBottom !== isDockedToBottom;\n    const isNearToViewportDidChange =\n      this.state.isNearToViewport !== isNearToViewport;\n    const appliedOverflowScrollDidChange =\n      appliedOverflowScroll !== this.state.appliedOverflowScroll;\n\n    if (\n      !useNativeStickyDidChange &&\n      !stylesDidChange &&\n      !isStickyDidChange &&\n      !isDockedToBottomDidChange &&\n      !isNearToViewportDidChange &&\n      !appliedOverflowScrollDidChange\n    ) {\n      return;\n    }\n\n    this.setState({\n      useNativeSticky,\n      isSticky,\n      isDockedToBottom,\n      isNearToViewport,\n      appliedOverflowScroll,\n      styles: stylesDidChange ? styles : stateStyles,\n    });\n  };\n\n  renderSticky = ({ isRecalculating }: { isRecalculating: boolean }) => {\n    const { children, disabled, stickyProps } = this.props;\n    return (\n      <StickyElement<\n        TRenderChildren<{\n          isSticky: boolean;\n          isDockedToBottom: boolean;\n          isNearToViewport: boolean;\n          appliedOverflowScroll: OverflowScrollType;\n        }>\n      >\n        forwardRef={this.stickyRef}\n        positionStyle={this.state.styles}\n        disabled={disabled || isRecalculating}\n        children={children}\n        renderArgs={{\n          isSticky: this.state.isSticky,\n          isDockedToBottom: this.state.isDockedToBottom,\n          isNearToViewport: this.state.isNearToViewport,\n          appliedOverflowScroll: this.state.appliedOverflowScroll,\n        }}\n        {...stickyProps}\n      />\n    );\n  };\n\n  render() {\n    const {\n      disabled,\n      disableResizing,\n      style,\n      className,\n      overflowScroll,\n    } = this.props;\n    return (\n      <>\n        <StickyPlaceholder\n          className={className}\n          style={\n            this.state.useNativeSticky\n              ? {\n                  position: 'sticky',\n                  top: this.props.defaultOffsetTop,\n                  ...style,\n                }\n              : style\n          }\n          disabled={disabled}\n          forwardRef={this.placeholderRef}\n          stickyRef={this.stickyRef}\n          disableResizing={disableResizing}\n        >\n          {this.renderSticky}\n        </StickyPlaceholder>\n        <ObserveViewport\n          disableScrollUpdates={disabled}\n          disableDimensionsUpdates={disabled || overflowScroll !== 'flow'}\n          onUpdate={this.handleScrollUpdate}\n          recalculateLayoutBeforeUpdate={this.recalculateLayoutBeforeUpdate}\n          priority={this.state.isNearToViewport ? 'highest' : 'low'}\n        />\n      </>\n    );\n  }\n}\n\nexport default connectStickyProvider()<IOwnProps>(Sticky);\n","import * as React from 'react';\nimport { ObserveViewport, IRect, IScroll } from 'react-viewport-utils';\n\nimport { connect as connectStickyProvider } from './StickyProvider';\nimport StickyElement from './StickyElement';\nimport StickyPlaceholder from './StickyPlaceholder';\nimport {\n  TRenderChildren,\n  IStickyComponentProps,\n  IStickyInjectedProps,\n  IPositionStyles,\n} from './types';\nimport { supportsWillChange, shallowEqualPositionStyles } from './utils';\n\ninterface IOwnProps extends IStickyComponentProps {\n  /**\n   * The child node that is rendered within the sticky container. When rendered as a function it will add further information the the function which can be used e.g. to update stylings.\n   */\n  children?: TRenderChildren<{\n    isNearToViewport: boolean;\n    isSticky: boolean;\n  }>;\n  /**\n   * When not initialized as the first element within the page (directly at the top) this allows to set an offset by hand from where the component will be sticky.\n   * @deprecated If not set, the start position is now calculated by default as it was already the case for the `Sticky` component. As there is no use case for this property anymore it will be removed in the future.\n   */\n  defaultOffsetTop?: number;\n}\n\ninterface IProps extends IOwnProps, IStickyInjectedProps {}\n\ninterface IState {\n  styles: IPositionStyles;\n  isNearToViewport: boolean;\n  isSticky: boolean;\n}\n\nconst calcPositionStyles = (\n  rect: IRect,\n  scroll: IScroll,\n  { offsetTop = 0 },\n): IPositionStyles => {\n  const rectTop = Math.round(rect.top);\n  const scrollY = Math.round(scroll.y);\n  if (scroll.isScrollingDown) {\n    // disable sticky mode above the top offset while scrolling down\n    if (rectTop > 0 && scrollY < offsetTop) {\n      return {\n        position: 'absolute',\n        top: 0,\n      };\n    }\n\n    // element is visible and scrolls down\n    return {\n      position: 'absolute',\n      top: Math.max(scrollY - offsetTop + rectTop, 0),\n    };\n  }\n\n  const isTopVisible = rectTop >= 0;\n  const isBottomVisible = rectTop + rect.height <= 0;\n  // element is visible and scrolls up\n  if (!isTopVisible && !isBottomVisible) {\n    return {\n      position: 'absolute',\n      top: scrollY - offsetTop + rectTop,\n    };\n  }\n\n  // disable sticky mode above the top offset while scrolling up\n  if (scrollY <= offsetTop) {\n    return {\n      position: 'absolute',\n      top: 0,\n    };\n  }\n\n  if (Math.round(scroll.yDTurn) === 0) {\n    // scroll direction changed from down to up and the element was not visible\n    if (isBottomVisible) {\n      return {\n        position: 'absolute',\n        top: Math.round(scroll.yTurn) - offsetTop - rect.height,\n      };\n    }\n    // scroll direction changed from down to up and the element was fully visible\n    return {\n      position: 'absolute',\n      top: Math.max(scrollY - offsetTop, 0),\n    };\n  }\n\n  // set sticky\n  return {\n    position: 'fixed',\n    top: 0,\n  };\n};\n\nclass StickyScrollUp extends React.PureComponent<IProps, IState> {\n  private stickyRef: React.RefObject<any> = React.createRef();\n  private placeholderRef: React.RefObject<any> = React.createRef();\n  private stickyOffset: number | null = null;\n  private stickyOffsetHeight: number = 0;\n\n  static defaultProps = {\n    disableHardwareAcceleration: false,\n    disableResizing: false,\n    style: {},\n  };\n\n  state: IState = {\n    styles: {},\n    isNearToViewport: false,\n    isSticky: false,\n  };\n\n  componentDidUpdate(prevProps: IProps, prevState: IState) {\n    if (\n      this.props.updateStickyOffset &&\n      prevProps.disabled !== this.props.disabled\n    ) {\n      this.props.updateStickyOffset(\n        this.props.disabled ? 0 : this.stickyOffset,\n        this.stickyOffsetHeight,\n      );\n    }\n  }\n\n  isNearToViewport = (rect: IRect): boolean => {\n    const padding = 700;\n    return rect.top - padding < 0;\n  };\n\n  getStickyStyles(stickyRect: IRect, placeholderRect: IRect, scroll: IScroll) {\n    const offsetTop = isNaN(this.props.defaultOffsetTop)\n      ? Math.round(placeholderRect.top) + Math.round(scroll.y)\n      : this.props.defaultOffsetTop;\n    const styles = calcPositionStyles(stickyRect, scroll, {\n      offsetTop,\n    });\n\n    if (!this.props.disableHardwareAcceleration) {\n      const shouldAccelerate = this.isNearToViewport(stickyRect);\n      if (supportsWillChange) {\n        styles.willChange = shouldAccelerate ? 'position, top' : null;\n      } else {\n        styles.transform = shouldAccelerate ? `translateZ(0)` : null;\n      }\n    }\n\n    return styles;\n  }\n\n  recalculateLayoutBeforeUpdate = (): {\n    stickyRect: IRect;\n    placeholderRect: IRect;\n  } => {\n    return {\n      placeholderRect: this.placeholderRef.current.getBoundingClientRect(),\n      stickyRect: this.stickyRef.current.getBoundingClientRect(),\n    };\n  };\n\n  handleViewportUpdate = (\n    { scroll }: { scroll: IScroll },\n    {\n      stickyRect,\n      placeholderRect,\n    }: { stickyRect: IRect; placeholderRect: IRect },\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // in case children is not a function renderArgs will never be used\n    const willRenderAsAFunction = typeof this.props.children === 'function';\n\n    const nextOffset = Math.max(Math.round(stickyRect.bottom), 0);\n    const nextOffsetHeight = stickyRect.height;\n    const offsetDidChange = this.stickyOffset !== nextOffset;\n    const offsetHeightDidChange = this.stickyOffsetHeight !== nextOffsetHeight;\n\n    const styles = this.getStickyStyles(stickyRect, placeholderRect, scroll);\n    const stateStyles = this.state.styles;\n    const stylesDidChange = !shallowEqualPositionStyles(styles, stateStyles);\n    const isNearToViewport = this.isNearToViewport(stickyRect);\n    const isSticky = willRenderAsAFunction\n      ? styles.top === 0 && styles.position === 'fixed'\n      : false;\n    const isNearToViewportDidChange =\n      this.state.isNearToViewport !== isNearToViewport;\n    const isStickyDidChange = this.state.isSticky !== isSticky;\n\n    if (\n      this.props.updateStickyOffset &&\n      (offsetDidChange || offsetHeightDidChange)\n    ) {\n      this.props.updateStickyOffset(nextOffset, nextOffsetHeight);\n    }\n\n    if (!stylesDidChange && !isNearToViewportDidChange && !isStickyDidChange) {\n      return;\n    }\n\n    this.setState({\n      styles: stylesDidChange ? styles : stateStyles,\n      isNearToViewport,\n      isSticky,\n    });\n  };\n\n  renderSticky = ({ isRecalculating }: { isRecalculating: boolean }) => {\n    const { disabled, children, stickyProps } = this.props;\n    return (\n      <StickyElement<\n        TRenderChildren<{\n          isNearToViewport: boolean;\n          isSticky: boolean;\n        }>\n      >\n        forwardRef={this.stickyRef}\n        positionStyle={this.state.styles}\n        disabled={disabled || isRecalculating}\n        children={children}\n        renderArgs={{\n          isNearToViewport: this.state.isNearToViewport,\n          isSticky: this.state.isSticky,\n        }}\n        {...stickyProps}\n      />\n    );\n  };\n\n  render() {\n    const { disabled, disableResizing, style, className } = this.props;\n    return (\n      <>\n        <StickyPlaceholder\n          className={className}\n          style={style}\n          disabled={disabled}\n          stickyRef={this.stickyRef}\n          disableResizing={disableResizing}\n          forwardRef={this.placeholderRef}\n        >\n          {this.renderSticky}\n        </StickyPlaceholder>\n        <ObserveViewport\n          disableScrollUpdates={disabled}\n          disableDimensionsUpdates\n          onUpdate={this.handleViewportUpdate}\n          recalculateLayoutBeforeUpdate={this.recalculateLayoutBeforeUpdate}\n          priority={this.state.isNearToViewport ? 'highest' : 'low'}\n        />\n      </>\n    );\n  }\n}\n\nexport default connectStickyProvider()<IOwnProps>(StickyScrollUp);\n"]},"metadata":{},"sourceType":"module"}